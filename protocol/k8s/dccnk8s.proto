// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package k8s;

// The k8s service definition.
service dccnk8s {
  rpc NewTask(NewTaskRequest)returns (NewTaskResponce) {}
  rpc UpdateTask(UpdateTaskRequest)returns (UpdateTaskResponce) {}
  rpc CancelTask(CancelTaskRequest)returns (CancelTaskResponce) {}
  rpc HeartBeat(HeartBeatRequest)returns (HeartBeatResponce) {}
}

message Empty{}
message CommonRequest{
}
message CommonResponce{
}

message NewTaskRequest{
    CommonRequest common = 1;
    string Type = 2;  //"NewTask"  "CancelTask"  "UpdateTask"
    int64 taskid = 3;  //id of task
    string taskType = 4; // default or "web"
    string name = 5;  // UniqueName of the task as taskid
    string image = 6; // name of docker image
    int64 replica = 7;
    string extra = 8; //extra for other arguments
}
message NewTaskResponce{
    CommonResponce common = 1;
    string Type = 2;  //"HeartBeat"  "Task"
    int64 taskid = 3;  // id of task
    string taskname = 4;  // UniqueName of task
    string status = 5; // StartSuccess or StartFailure  JobDone Cancelled  Running  Other
    string datacenter = 6; // name of datacenter
    string url = 7;  // url of web application
    string report = 8;
}

message UpdateTaskRequest{
    CommonRequest common = 1;
    string Type = 2;  //"NewTask"  "CancelTask"  "UpdateTask"
    int64 taskid = 3;  //id of task
    string taskType = 4; // default or "web"
    string name = 5;  // UniqueName of the task as taskid
    string image = 6; // name of docker image
    int64 replica = 7;
    string extra = 8; //extra for other arguments
}
message UpdateTaskResponce{
    CommonResponce common = 1;
    string Type = 2;  //"HeartBeat"  "Task"
    int64 taskid = 3;  // id of task
    string taskname = 4;  // UniqueName of task
    string status = 5; // StartSuccess or StartFailure  JobDone Cancelled  Running  Other
    string datacenter = 6; // name of datacenter
    string url = 7;  // url of web application
    string report = 8;
}

message CancelTaskRequest{
    CommonRequest common = 1;
    string Type = 2;  //"NewTask"  "CancelTask"  "UpdateTask"
    int64 taskid = 3;  //id of task
    string taskType = 4; // default or "web"
    string name = 5;  // UniqueName of the task as taskid
    string image = 6; // name of docker image
    int64 replica = 7;
    string extra = 8; //extra for other arguments
}
message CancelTaskResponce{
    CommonResponce common = 1;
    string Type = 2;  //"HeartBeat"  "Task"
    int64 taskid = 3;  // id of task
    string taskname = 4;  // UniqueName of task
    string status = 5; // StartSuccess or StartFailure  JobDone Cancelled  Running  Other
    string datacenter = 6; // name of datacenter
    string url = 7;  // url of web application
    string report = 8;
}

message HeartBeatRequest{
    CommonRequest common = 1;
    string Type = 2;  //"NewTask"  "CancelTask"  "UpdateTask"
    int64 taskid = 3;  //id of task
    string taskType = 4; // default or "web"
    string name = 5;  // UniqueName of the task as taskid
    string image = 6; // name of docker image
    int64 replica = 7;
    string extra = 8; //extra for other arguments
}
message HeartBeatResponce{
    CommonResponce common = 1;
    string Type = 2;  //"HeartBeat"  "Task"
    int64 taskid = 3;  // id of task
    string taskname = 4;  // UniqueName of task
    string status = 5; // StartSuccess or StartFailure  JobDone Cancelled  Running  Other
    string datacenter = 6; // name of datacenter
    string url = 7;  // url of web application
    string report = 8;
}