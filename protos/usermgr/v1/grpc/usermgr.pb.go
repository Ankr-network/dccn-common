// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usermgr/v1/grpc/usermgr.proto

package grpc_usermgr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_94886a8c7c2de312, []int{0}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Email struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_94886a8c7c2de312, []int{1}
}
func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (dst *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(dst, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type User struct {
	// id self-increase, de
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// name should be unique
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// nickname show on UI
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// email user's email, unique.
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// password string
	Password string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	// balance user's balance in account
	Balance int32 `protobuf:"varint,7,opt,name=balance,proto3" json:"balance,omitempty"`
	// is_deleted user's status
	IsDeleted bool `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// token jwt token string
	Token                string   `protobuf:"bytes,9,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_94886a8c7c2de312, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *User) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *User) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_94886a8c7c2de312, []int{3}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_94886a8c7c2de312, []int{4}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "grpc.usermgr.LoginRequest")
	proto.RegisterType((*Email)(nil), "grpc.usermgr.Email")
	proto.RegisterType((*User)(nil), "grpc.usermgr.User")
	proto.RegisterType((*Response)(nil), "grpc.usermgr.Response")
	proto.RegisterType((*Token)(nil), "grpc.usermgr.Token")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserMgrClient is the client API for UserMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserMgrClient interface {
	// Login login
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*User, error)
	// Create Create a new user
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error)
	// Gets the specified user by email
	Get(ctx context.Context, in *Email, opts ...grpc.CallOption) (*User, error)
	// Auth  validates user
	NewToken(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error)
	// VerifyToken Validated Token
	VerifyToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Response, error)
}

type userMgrClient struct {
	cc *grpc.ClientConn
}

func NewUserMgrClient(cc *grpc.ClientConn) UserMgrClient {
	return &userMgrClient{cc}
}

func (c *userMgrClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/grpc.usermgr.UserMgr/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.usermgr.UserMgr/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) Get(ctx context.Context, in *Email, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/grpc.usermgr.UserMgr/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) NewToken(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/grpc.usermgr.UserMgr/NewToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) VerifyToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.usermgr.UserMgr/VerifyToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserMgrServer is the server API for UserMgr service.
type UserMgrServer interface {
	// Login login
	Login(context.Context, *LoginRequest) (*User, error)
	// Create Create a new user
	Create(context.Context, *User) (*Response, error)
	// Gets the specified user by email
	Get(context.Context, *Email) (*User, error)
	// Auth  validates user
	NewToken(context.Context, *User) (*Token, error)
	// VerifyToken Validated Token
	VerifyToken(context.Context, *Token) (*Response, error)
}

func RegisterUserMgrServer(s *grpc.Server, srv UserMgrServer) {
	s.RegisterService(&_UserMgr_serviceDesc, srv)
}

func _UserMgr_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.usermgr.UserMgr/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.usermgr.UserMgr/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Email)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.usermgr.UserMgr/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).Get(ctx, req.(*Email))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_NewToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).NewToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.usermgr.UserMgr/NewToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).NewToken(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_VerifyToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).VerifyToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.usermgr.UserMgr/VerifyToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).VerifyToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.usermgr.UserMgr",
	HandlerType: (*UserMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _UserMgr_Login_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserMgr_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserMgr_Get_Handler,
		},
		{
			MethodName: "NewToken",
			Handler:    _UserMgr_NewToken_Handler,
		},
		{
			MethodName: "VerifyToken",
			Handler:    _UserMgr_VerifyToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usermgr/v1/grpc/usermgr.proto",
}

func init() {
	proto.RegisterFile("usermgr/v1/grpc/usermgr.proto", fileDescriptor_usermgr_94886a8c7c2de312)
}

var fileDescriptor_usermgr_94886a8c7c2de312 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0x6d, 0xd2, 0xa6, 0x4d, 0xe7, 0x57, 0x7e, 0x87, 0x51, 0x24, 0x04, 0x0a, 0x25, 0xa7, 0x9e,
	0x52, 0xff, 0xa0, 0x20, 0x78, 0x10, 0x54, 0xbc, 0xa8, 0x87, 0xa0, 0x5e, 0x25, 0x6d, 0xc6, 0xb0,
	0xb4, 0xcd, 0xc6, 0xdd, 0xad, 0xc5, 0xcf, 0xe3, 0x87, 0xf1, 0x6b, 0xc9, 0xee, 0xf6, 0x5f, 0x24,
	0xbd, 0xe5, 0xbd, 0x79, 0x33, 0xef, 0xcd, 0x64, 0xa1, 0xbf, 0x90, 0x24, 0xe6, 0xb9, 0x18, 0x7d,
	0x9e, 0x8c, 0x72, 0x51, 0x4e, 0x46, 0x2b, 0x1c, 0x97, 0x82, 0x2b, 0x8e, 0x3d, 0xcd, 0xc5, 0x2b,
	0x2e, 0xba, 0x86, 0xde, 0x03, 0xcf, 0x59, 0x91, 0xd0, 0xc7, 0x82, 0xa4, 0xc2, 0x43, 0xf0, 0x68,
	0x9e, 0xb2, 0x59, 0xe0, 0x0c, 0x9c, 0x61, 0x37, 0xb1, 0x00, 0x43, 0xf0, 0xcb, 0x54, 0xca, 0x25,
	0x17, 0x59, 0xe0, 0x9a, 0xc2, 0x06, 0x47, 0x7d, 0xf0, 0xee, 0x8c, 0xa8, 0xb6, 0x35, 0xfa, 0x71,
	0xa0, 0xf5, 0x22, 0x49, 0xe0, 0x7f, 0x70, 0x59, 0x66, 0x6a, 0xcd, 0xc4, 0x65, 0x19, 0x22, 0xb4,
	0x8a, 0x74, 0x4e, 0xab, 0x79, 0xe6, 0x5b, 0xfb, 0x14, 0x6c, 0x32, 0x35, 0x7c, 0xcb, 0xfa, 0xac,
	0xf1, 0x76, 0xbc, 0xb7, 0x2f, 0x59, 0xbb, 0x9a, 0x0c, 0x03, 0xe8, 0x8c, 0xd3, 0x59, 0x5a, 0x4c,
	0x28, 0xe8, 0x0c, 0x9c, 0xa1, 0x97, 0xac, 0x21, 0xf6, 0x01, 0x98, 0x7c, 0xcb, 0x68, 0x46, 0x8a,
	0xb2, 0xc0, 0x1f, 0x38, 0x43, 0x3f, 0xe9, 0x32, 0x79, 0x6b, 0x09, 0x6d, 0xa5, 0xf8, 0x94, 0x8a,
	0xa0, 0x6b, 0xad, 0x0c, 0x88, 0x00, 0xfc, 0x84, 0x64, 0xc9, 0x0b, 0x49, 0x7a, 0xe9, 0x67, 0x4d,
	0x6e, 0xa5, 0xce, 0x8e, 0xf4, 0xf4, 0xdb, 0x85, 0x8e, 0x5e, 0xfa, 0x31, 0x17, 0x78, 0x09, 0x9e,
	0xb9, 0x30, 0x86, 0xf1, 0xee, 0xe5, 0xe3, 0xdd, 0xb3, 0x87, 0x58, 0xad, 0xe9, 0xde, 0xa8, 0x81,
	0x17, 0xd0, 0xbe, 0x11, 0x94, 0x2a, 0xc2, 0x9a, 0x7a, 0x78, 0x54, 0xe5, 0x36, 0xd9, 0x1a, 0x78,
	0x0c, 0xcd, 0x7b, 0x52, 0x78, 0x50, 0x15, 0x98, 0xbf, 0xb4, 0xc7, 0xe9, 0x1c, 0xfc, 0x27, 0x5a,
	0xda, 0x95, 0xea, 0xbc, 0xfe, 0x8c, 0x32, 0xc2, 0xa8, 0x81, 0x57, 0xf0, 0xef, 0x95, 0x04, 0x7b,
	0xff, 0xb2, 0x9d, 0x75, 0xaa, 0xfd, 0x31, 0xc7, 0x6d, 0xf3, 0x20, 0xcf, 0x7e, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xc6, 0xc8, 0x10, 0x41, 0xb1, 0x02, 0x00, 0x00,
}
