// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usermgr/v1/grpc/usermgr.proto

package usermgr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/Ankr-network/dccn-common/protos/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpdateAttributesRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAttributesRequest) Reset()         { *m = UpdateAttributesRequest{} }
func (m *UpdateAttributesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAttributesRequest) ProtoMessage()    {}
func (*UpdateAttributesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{0}
}
func (m *UpdateAttributesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAttributesRequest.Unmarshal(m, b)
}
func (m *UpdateAttributesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAttributesRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateAttributesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAttributesRequest.Merge(dst, src)
}
func (m *UpdateAttributesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAttributesRequest.Size(m)
}
func (m *UpdateAttributesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAttributesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAttributesRequest proto.InternalMessageInfo

func (m *UpdateAttributesRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type ChangePasswordRequest struct {
	OldPassword          string   `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{1}
}
func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (dst *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(dst, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

type ChangeEmailRequest struct {
	NewEmail             string   `protobuf:"bytes,1,opt,name=new_email,json=newEmail,proto3" json:"new_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeEmailRequest) Reset()         { *m = ChangeEmailRequest{} }
func (m *ChangeEmailRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeEmailRequest) ProtoMessage()    {}
func (*ChangeEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{2}
}
func (m *ChangeEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeEmailRequest.Unmarshal(m, b)
}
func (m *ChangeEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeEmailRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeEmailRequest.Merge(dst, src)
}
func (m *ChangeEmailRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeEmailRequest.Size(m)
}
func (m *ChangeEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeEmailRequest proto.InternalMessageInfo

func (m *ChangeEmailRequest) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

type VerifyEmailRequest struct {
	NewEmail             string   `protobuf:"bytes,1,opt,name=new_email,json=newEmail,proto3" json:"new_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyEmailRequest) Reset()         { *m = VerifyEmailRequest{} }
func (m *VerifyEmailRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyEmailRequest) ProtoMessage()    {}
func (*VerifyEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{3}
}
func (m *VerifyEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyEmailRequest.Unmarshal(m, b)
}
func (m *VerifyEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyEmailRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyEmailRequest.Merge(dst, src)
}
func (m *VerifyEmailRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyEmailRequest.Size(m)
}
func (m *VerifyEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyEmailRequest proto.InternalMessageInfo

func (m *VerifyEmailRequest) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

type User struct {
	// id self-increase, de
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name should be unique
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// email user's email, unique.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// password string
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// balance user's balance in account
	Balance int32 `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
	// is_deleted user's status
	IsDeleted bool `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// token jwt token string
	Token string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	// block chains public keys
	PublicKeys []string `protobuf:"bytes,8,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	// is_activation register if confirmed
	IsActivation bool `protobuf:"varint,9,opt,name=is_activation,json=isActivation,proto3" json:"is_activation,omitempty"`
	// user create date
	CreationDate         uint64   `protobuf:"varint,10,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{4}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *User) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *User) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *User) GetPublicKeys() []string {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

func (m *User) GetIsActivation() bool {
	if m != nil {
		return m.IsActivation
	}
	return false
}

func (m *User) GetCreationDate() uint64 {
	if m != nil {
		return m.CreationDate
	}
	return 0
}

type LoginRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{5}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Token                string        `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	User                 *User         `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Error                *common.Error `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{6}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (dst *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(dst, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *LoginResponse) GetError() *common.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type LogoutRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{7}
}
func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (dst *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(dst, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ForgetPasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgetPasswordRequest) Reset()         { *m = ForgetPasswordRequest{} }
func (m *ForgetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ForgetPasswordRequest) ProtoMessage()    {}
func (*ForgetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{8}
}
func (m *ForgetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgetPasswordRequest.Unmarshal(m, b)
}
func (m *ForgetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgetPasswordRequest.Marshal(b, m, deterministic)
}
func (dst *ForgetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgetPasswordRequest.Merge(dst, src)
}
func (m *ForgetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ForgetPasswordRequest.Size(m)
}
func (m *ForgetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForgetPasswordRequest proto.InternalMessageInfo

func (m *ForgetPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ConfirmPasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	VerificationCode     string   `protobuf:"bytes,3,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmPasswordRequest) Reset()         { *m = ConfirmPasswordRequest{} }
func (m *ConfirmPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmPasswordRequest) ProtoMessage()    {}
func (*ConfirmPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{9}
}
func (m *ConfirmPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmPasswordRequest.Unmarshal(m, b)
}
func (m *ConfirmPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmPasswordRequest.Marshal(b, m, deterministic)
}
func (dst *ConfirmPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmPasswordRequest.Merge(dst, src)
}
func (m *ConfirmPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmPasswordRequest.Size(m)
}
func (m *ConfirmPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmPasswordRequest proto.InternalMessageInfo

func (m *ConfirmPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ConfirmPasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *ConfirmPasswordRequest) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

type ConfirmRegistrationRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	VerificationCode     string   `protobuf:"bytes,2,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmRegistrationRequest) Reset()         { *m = ConfirmRegistrationRequest{} }
func (m *ConfirmRegistrationRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmRegistrationRequest) ProtoMessage()    {}
func (*ConfirmRegistrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{10}
}
func (m *ConfirmRegistrationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmRegistrationRequest.Unmarshal(m, b)
}
func (m *ConfirmRegistrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmRegistrationRequest.Marshal(b, m, deterministic)
}
func (dst *ConfirmRegistrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmRegistrationRequest.Merge(dst, src)
}
func (m *ConfirmRegistrationRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmRegistrationRequest.Size(m)
}
func (m *ConfirmRegistrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmRegistrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmRegistrationRequest proto.InternalMessageInfo

func (m *ConfirmRegistrationRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ConfirmRegistrationRequest) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{11}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type NewTokenResponse struct {
	Token                string        `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Error                *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NewTokenResponse) Reset()         { *m = NewTokenResponse{} }
func (m *NewTokenResponse) String() string { return proto.CompactTextString(m) }
func (*NewTokenResponse) ProtoMessage()    {}
func (*NewTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_usermgr_cdb79ed12aa1812f, []int{12}
}
func (m *NewTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTokenResponse.Unmarshal(m, b)
}
func (m *NewTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTokenResponse.Marshal(b, m, deterministic)
}
func (dst *NewTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTokenResponse.Merge(dst, src)
}
func (m *NewTokenResponse) XXX_Size() int {
	return xxx_messageInfo_NewTokenResponse.Size(m)
}
func (m *NewTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewTokenResponse proto.InternalMessageInfo

func (m *NewTokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *NewTokenResponse) GetError() *common.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateAttributesRequest)(nil), "usermgr.UpdateAttributesRequest")
	proto.RegisterType((*ChangePasswordRequest)(nil), "usermgr.ChangePasswordRequest")
	proto.RegisterType((*ChangeEmailRequest)(nil), "usermgr.ChangeEmailRequest")
	proto.RegisterType((*VerifyEmailRequest)(nil), "usermgr.VerifyEmailRequest")
	proto.RegisterType((*User)(nil), "usermgr.User")
	proto.RegisterType((*LoginRequest)(nil), "usermgr.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "usermgr.LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "usermgr.LogoutRequest")
	proto.RegisterType((*ForgetPasswordRequest)(nil), "usermgr.ForgetPasswordRequest")
	proto.RegisterType((*ConfirmPasswordRequest)(nil), "usermgr.ConfirmPasswordRequest")
	proto.RegisterType((*ConfirmRegistrationRequest)(nil), "usermgr.ConfirmRegistrationRequest")
	proto.RegisterType((*Token)(nil), "usermgr.Token")
	proto.RegisterType((*NewTokenResponse)(nil), "usermgr.NewTokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserMgrClient is the client API for UserMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserMgrClient interface {
	// Register Create a new user
	Register(ctx context.Context, in *User, opts ...grpc.CallOption) (*common.Error, error)
	// Login login
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// Logout need verify permission
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*common.Error, error)
	// ForgetPassword, reset password
	ForgetPassword(ctx context.Context, in *ForgetPasswordRequest, opts ...grpc.CallOption) (*common.Error, error)
	// ConfirmPassword, reset password
	ConfirmPassword(ctx context.Context, in *ConfirmPasswordRequest, opts ...grpc.CallOption) (*common.Error, error)
	// ConfirmRegistration, active user with identifying code to finish register
	ConfirmRegistration(ctx context.Context, in *ConfirmRegistrationRequest, opts ...grpc.CallOption) (*common.Error, error)
	// UpdateAttributes update attributes, just user name temporary
	UpdateAttributes(ctx context.Context, in *UpdateAttributesRequest, opts ...grpc.CallOption) (*common.Error, error)
	// ChangePassword change password
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*common.Error, error)
	// ChangeEmail change email
	ChangeEmail(ctx context.Context, in *ChangeEmailRequest, opts ...grpc.CallOption) (*common.Error, error)
	// VerifyEmail verify email
	VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*common.Error, error)
	// Auth  validates user
	NewToken(ctx context.Context, in *User, opts ...grpc.CallOption) (*NewTokenResponse, error)
	// VerifyToken validated token
	VerifyToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*common.Error, error)
	// VerifyToken validated token and refresh token, return new token
	VerifyAndRefreshToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*common.Error, error)
	// RefreshToken reset token last access token
	RefreshToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*common.Error, error)
}

type userMgrClient struct {
	cc *grpc.ClientConn
}

func NewUserMgrClient(cc *grpc.ClientConn) UserMgrClient {
	return &userMgrClient{cc}
}

func (c *userMgrClient) Register(ctx context.Context, in *User, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) ForgetPassword(ctx context.Context, in *ForgetPasswordRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/ForgetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) ConfirmPassword(ctx context.Context, in *ConfirmPasswordRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/ConfirmPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) ConfirmRegistration(ctx context.Context, in *ConfirmRegistrationRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/ConfirmRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) UpdateAttributes(ctx context.Context, in *UpdateAttributesRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/UpdateAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) ChangeEmail(ctx context.Context, in *ChangeEmailRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/ChangeEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/VerifyEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) NewToken(ctx context.Context, in *User, opts ...grpc.CallOption) (*NewTokenResponse, error) {
	out := new(NewTokenResponse)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/NewToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) VerifyToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/VerifyToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) VerifyAndRefreshToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/VerifyAndRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMgrClient) RefreshToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/usermgr.UserMgr/RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserMgrServer is the server API for UserMgr service.
type UserMgrServer interface {
	// Register Create a new user
	Register(context.Context, *User) (*common.Error, error)
	// Login login
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// Logout need verify permission
	Logout(context.Context, *LogoutRequest) (*common.Error, error)
	// ForgetPassword, reset password
	ForgetPassword(context.Context, *ForgetPasswordRequest) (*common.Error, error)
	// ConfirmPassword, reset password
	ConfirmPassword(context.Context, *ConfirmPasswordRequest) (*common.Error, error)
	// ConfirmRegistration, active user with identifying code to finish register
	ConfirmRegistration(context.Context, *ConfirmRegistrationRequest) (*common.Error, error)
	// UpdateAttributes update attributes, just user name temporary
	UpdateAttributes(context.Context, *UpdateAttributesRequest) (*common.Error, error)
	// ChangePassword change password
	ChangePassword(context.Context, *ChangePasswordRequest) (*common.Error, error)
	// ChangeEmail change email
	ChangeEmail(context.Context, *ChangeEmailRequest) (*common.Error, error)
	// VerifyEmail verify email
	VerifyEmail(context.Context, *VerifyEmailRequest) (*common.Error, error)
	// Auth  validates user
	NewToken(context.Context, *User) (*NewTokenResponse, error)
	// VerifyToken validated token
	VerifyToken(context.Context, *Token) (*common.Error, error)
	// VerifyToken validated token and refresh token, return new token
	VerifyAndRefreshToken(context.Context, *Token) (*common.Error, error)
	// RefreshToken reset token last access token
	RefreshToken(context.Context, *Token) (*common.Error, error)
}

func RegisterUserMgrServer(s *grpc.Server, srv UserMgrServer) {
	s.RegisterService(&_UserMgr_serviceDesc, srv)
}

func _UserMgr_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).Register(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_ForgetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForgetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).ForgetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/ForgetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).ForgetPassword(ctx, req.(*ForgetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_ConfirmPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).ConfirmPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/ConfirmPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).ConfirmPassword(ctx, req.(*ConfirmPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_ConfirmRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmRegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).ConfirmRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/ConfirmRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).ConfirmRegistration(ctx, req.(*ConfirmRegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_UpdateAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).UpdateAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/UpdateAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).UpdateAttributes(ctx, req.(*UpdateAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_ChangeEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).ChangeEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/ChangeEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).ChangeEmail(ctx, req.(*ChangeEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_VerifyEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).VerifyEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/VerifyEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).VerifyEmail(ctx, req.(*VerifyEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_NewToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).NewToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/NewToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).NewToken(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_VerifyToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).VerifyToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/VerifyToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).VerifyToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_VerifyAndRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).VerifyAndRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/VerifyAndRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).VerifyAndRefreshToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMgr_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMgrServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgr.UserMgr/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMgrServer).RefreshToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usermgr.UserMgr",
	HandlerType: (*UserMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _UserMgr_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserMgr_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _UserMgr_Logout_Handler,
		},
		{
			MethodName: "ForgetPassword",
			Handler:    _UserMgr_ForgetPassword_Handler,
		},
		{
			MethodName: "ConfirmPassword",
			Handler:    _UserMgr_ConfirmPassword_Handler,
		},
		{
			MethodName: "ConfirmRegistration",
			Handler:    _UserMgr_ConfirmRegistration_Handler,
		},
		{
			MethodName: "UpdateAttributes",
			Handler:    _UserMgr_UpdateAttributes_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UserMgr_ChangePassword_Handler,
		},
		{
			MethodName: "ChangeEmail",
			Handler:    _UserMgr_ChangeEmail_Handler,
		},
		{
			MethodName: "VerifyEmail",
			Handler:    _UserMgr_VerifyEmail_Handler,
		},
		{
			MethodName: "NewToken",
			Handler:    _UserMgr_NewToken_Handler,
		},
		{
			MethodName: "VerifyToken",
			Handler:    _UserMgr_VerifyToken_Handler,
		},
		{
			MethodName: "VerifyAndRefreshToken",
			Handler:    _UserMgr_VerifyAndRefreshToken_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _UserMgr_RefreshToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usermgr/v1/grpc/usermgr.proto",
}

func init() {
	proto.RegisterFile("usermgr/v1/grpc/usermgr.proto", fileDescriptor_usermgr_cdb79ed12aa1812f)
}

var fileDescriptor_usermgr_cdb79ed12aa1812f = []byte{
	// 744 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdf, 0x53, 0xd3, 0x4a,
	0x14, 0xa6, 0xa5, 0x3f, 0x4f, 0x0b, 0x97, 0xbb, 0xdc, 0x42, 0x6e, 0x19, 0xa4, 0x84, 0x97, 0x3a,
	0x8e, 0xad, 0xa0, 0xa2, 0xe3, 0x83, 0x63, 0x07, 0xd0, 0x61, 0x50, 0x46, 0xa3, 0xf8, 0x9a, 0x49,
	0x93, 0x43, 0xd9, 0xa1, 0xcd, 0xd6, 0xdd, 0x94, 0x0e, 0x2f, 0xfe, 0x19, 0xfc, 0xbd, 0xce, 0xee,
	0x36, 0x21, 0x8d, 0x09, 0xa0, 0x4f, 0xc9, 0x39, 0x7b, 0xbe, 0xef, 0xec, 0xd9, 0xef, 0x4b, 0x16,
	0x36, 0x27, 0x02, 0xf9, 0x68, 0xc0, 0xbb, 0x57, 0xbb, 0xdd, 0x01, 0x1f, 0xbb, 0xdd, 0x59, 0xdc,
	0x19, 0x73, 0x16, 0x30, 0x52, 0x9e, 0x85, 0xcd, 0x55, 0x97, 0x8d, 0x46, 0xcc, 0xef, 0xea, 0x87,
	0x5e, 0x35, 0xf7, 0x61, 0xfd, 0x6c, 0xec, 0x39, 0x01, 0xf6, 0x82, 0x80, 0xd3, 0xfe, 0x24, 0x40,
	0x61, 0xe1, 0x8f, 0x09, 0x8a, 0x80, 0x6c, 0x40, 0x55, 0x42, 0x6d, 0xdf, 0x19, 0xa1, 0x91, 0x6b,
	0xe5, 0xda, 0x55, 0xab, 0x22, 0x13, 0xa7, 0xce, 0x08, 0xcd, 0x37, 0xd0, 0x38, 0xb8, 0x70, 0xfc,
	0x01, 0x7e, 0x76, 0x84, 0x98, 0x32, 0xee, 0x85, 0xa8, 0x6d, 0xa8, 0xb3, 0xa1, 0x67, 0x8f, 0x67,
	0xe9, 0x19, 0xb0, 0xc6, 0x86, 0x5e, 0x58, 0x69, 0xee, 0x02, 0xd1, 0xd8, 0xa3, 0x91, 0x43, 0x87,
	0xb1, 0x76, 0x3e, 0x4e, 0x6d, 0x94, 0xb9, 0xb0, 0x9d, 0x8f, 0x53, 0x55, 0x23, 0x21, 0xdf, 0x91,
	0xd3, 0xf3, 0xeb, 0x87, 0x43, 0x6e, 0xf2, 0x50, 0x38, 0x13, 0xc8, 0xc9, 0x32, 0xe4, 0x69, 0xb8,
	0x8f, 0x3c, 0xf5, 0x08, 0x81, 0x82, 0x1a, 0x29, 0xaf, 0x32, 0xea, 0x9d, 0xfc, 0x07, 0x45, 0xcd,
	0xb2, 0xa8, 0x92, 0x3a, 0x20, 0x4d, 0xa8, 0x44, 0x73, 0x14, 0x34, 0x7d, 0x18, 0x13, 0x03, 0xca,
	0x7d, 0x67, 0xe8, 0xf8, 0x2e, 0x1a, 0xc5, 0x56, 0xae, 0x5d, 0xb4, 0xc2, 0x90, 0x6c, 0x02, 0x50,
	0x61, 0x7b, 0x38, 0xc4, 0x00, 0x3d, 0xa3, 0xd4, 0xca, 0xb5, 0x2b, 0x56, 0x95, 0x8a, 0x43, 0x9d,
	0x90, 0xad, 0x02, 0x76, 0x89, 0xbe, 0x51, 0xd6, 0xad, 0x54, 0x40, 0xb6, 0xa0, 0x36, 0x9e, 0xf4,
	0x87, 0xd4, 0xb5, 0x2f, 0xf1, 0x5a, 0x18, 0x95, 0xd6, 0x62, 0xbb, 0x6a, 0x81, 0x4e, 0x9d, 0xe0,
	0xb5, 0x20, 0x3b, 0xb0, 0x44, 0x85, 0xed, 0xb8, 0x01, 0xbd, 0x72, 0x02, 0xca, 0x7c, 0xa3, 0xaa,
	0x88, 0xeb, 0x54, 0xf4, 0xa2, 0x9c, 0x2c, 0x72, 0x39, 0xaa, 0x77, 0x5b, 0x8a, 0x6a, 0x40, 0x2b,
	0xd7, 0x2e, 0x58, 0xf5, 0x30, 0x79, 0xe8, 0x04, 0x68, 0xbe, 0x83, 0xfa, 0x47, 0x36, 0xa0, 0x7e,
	0x78, 0x8a, 0xd1, 0xec, 0xb9, 0xac, 0xd9, 0xf3, 0xf3, 0xb3, 0x9b, 0x02, 0x96, 0x66, 0x0c, 0x62,
	0xcc, 0x7c, 0x81, 0xb7, 0x33, 0xe5, 0xe2, 0x33, 0x6d, 0x43, 0x41, 0xfa, 0x45, 0xc1, 0x6b, 0x7b,
	0x4b, 0x9d, 0xd0, 0x97, 0x52, 0x15, 0x4b, 0x2d, 0x91, 0xc7, 0x50, 0x44, 0xce, 0x19, 0x57, 0xe7,
	0x5e, 0xdb, 0x5b, 0xed, 0xc4, 0xcd, 0xd9, 0x39, 0x92, 0x4b, 0x96, 0xae, 0x30, 0xdb, 0xaa, 0x29,
	0x9b, 0x04, 0xe1, 0xbe, 0xd7, 0x41, 0x59, 0xdb, 0x8e, 0xc4, 0x2d, 0xc9, 0xf0, 0xd8, 0x33, 0x9f,
	0x42, 0xe3, 0x3d, 0xe3, 0x03, 0x0c, 0x92, 0xde, 0x4c, 0x9d, 0xd4, 0xfc, 0x09, 0x6b, 0x07, 0xcc,
	0x3f, 0xa7, 0x7c, 0xf4, 0xa0, 0x7a, 0xe9, 0x70, 0xe9, 0xba, 0xc4, 0xe9, 0xd4, 0x7c, 0x9c, 0x86,
	0x78, 0xf2, 0x04, 0xfe, 0xbd, 0x92, 0x76, 0xa5, 0xae, 0xd6, 0xc2, 0x65, 0x1e, 0xce, 0xac, 0xb5,
	0x12, 0x5f, 0x38, 0x60, 0x1e, 0x9a, 0x36, 0x34, 0x67, 0xfd, 0x2d, 0x1c, 0x50, 0x11, 0x70, 0xb5,
	0x74, 0xf7, 0x1e, 0x52, 0x1b, 0xe4, 0x33, 0x1a, 0x6c, 0x42, 0xf1, 0x9b, 0x12, 0x24, 0x55, 0x26,
	0xf3, 0x2b, 0xac, 0x9c, 0xe2, 0x54, 0x55, 0xdc, 0x23, 0x68, 0xa4, 0x56, 0xfe, 0x3e, 0xb5, 0xf6,
	0x6e, 0xca, 0x50, 0x96, 0x3a, 0x7f, 0x1a, 0x70, 0xf2, 0x0c, 0x2a, 0x7a, 0x32, 0xe4, 0x64, 0xde,
	0x05, 0xcd, 0x34, 0x0a, 0x73, 0x81, 0xbc, 0x86, 0xa2, 0x32, 0x18, 0x69, 0x44, 0xe5, 0x71, 0xcb,
	0x36, 0xd7, 0x92, 0x69, 0xbd, 0x6d, 0x73, 0x81, 0xbc, 0x82, 0x92, 0x76, 0x09, 0x99, 0xab, 0xb9,
	0xb5, 0x4d, 0x56, 0xcb, 0x0f, 0xb0, 0x3c, 0x6f, 0x1a, 0xf2, 0x28, 0x22, 0x48, 0x75, 0x53, 0x16,
	0xd1, 0x31, 0xfc, 0x93, 0xb0, 0x13, 0xd9, 0x8a, 0x98, 0xd2, 0x8d, 0x96, 0x45, 0xf5, 0x05, 0x56,
	0x53, 0x9c, 0x41, 0x76, 0x92, 0x74, 0x29, 0xbe, 0xc9, 0xa2, 0x3c, 0x81, 0x95, 0xe4, 0xff, 0x9e,
	0xb4, 0x6e, 0x35, 0x49, 0xbf, 0x0a, 0xee, 0x38, 0xb3, 0xf9, 0x4b, 0x20, 0x76, 0x66, 0xa9, 0xb7,
	0x43, 0x16, 0x51, 0x0f, 0x6a, 0xb1, 0x1b, 0x81, 0x6c, 0x24, 0x58, 0xe2, 0x3f, 0xfd, 0x3b, 0x28,
	0x62, 0x37, 0x44, 0x8c, 0xe2, 0xf7, 0x7b, 0x23, 0x8b, 0x62, 0x1f, 0x2a, 0xe1, 0x87, 0x90, 0xf4,
	0xe9, 0xff, 0x51, 0x98, 0xfc, 0x54, 0xcc, 0x05, 0xf2, 0x22, 0x6c, 0xad, 0xa1, 0xcb, 0x51, 0xad,
	0x8a, 0xb3, 0xba, 0xbd, 0x85, 0x86, 0x46, 0xf5, 0x7c, 0xcf, 0xc2, 0x73, 0x8e, 0xe2, 0xe2, 0x8f,
	0xf0, 0x2f, 0xa1, 0xfe, 0x17, 0xb0, 0x7e, 0x49, 0x85, 0xcf, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff,
	0x4b, 0x97, 0xe8, 0xa1, 0x36, 0x08, 0x00, 0x00,
}
