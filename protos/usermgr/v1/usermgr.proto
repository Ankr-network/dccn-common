syntax = "proto3";

import "common/common.proto";

package usermgr;

// TODO: supports filter
service UserMgr {
    // Register Create a new user
    rpc Register(User) returns (common.proto.Error) {
    }
    // Login login
    rpc Login(LoginRequest) returns (LoginResponse) {
    }
    // Logout need verify permission
    rpc Logout(LogoutRequest) returns (common.proto.Error) {
    }
    // ForgetPassword, reset password
    rpc ForgetPassword(AskResetPasswordRequest) returns (common.proto.Error) {
    }
    // ConfirmPassword, reset password
    rpc ConfirmPassword(ResetPasswordRequest) returns (common.proto.Error) {
    }
    // ConfirmRegistration, active user with identifying code to finish register
    rpc ConfirmRegistration(ActivateRequest) returns (common.proto.Error) {
    }
    // Auth  validates user
    rpc NewToken(User) returns (NewTokenResponse) {
    }
    // VerifyToken validated token
    rpc VerifyToken(Token) returns (common.proto.Error) {
    }
    // VerifyToken validated token and refresh token, return new token
    rpc VerifyAndRefreshToken(Token) returns (common.proto.Error) {
    }
    // RefreshToken reset token last access token
    rpc RefreshToken(Token) returns (common.proto.Error) {
    }
}

message User {
    // id self-increase, de
    string id = 1;
    // name should be unique
    string name = 2;
    // email user's email, unique.
    string email = 3;
    // password string
    string password = 4;
    // balance user's balance in account
    int32 balance = 5;
    // is_deleted user's status
    bool is_deleted = 6;
    // token jwt token string
    string token = 7;
    // block chains public keys
    repeated string public_keys = 8;
    // is_activation register if confirmed
    bool is_activation = 9;
    // user create date
    uint64 creation_date = 10;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
    User user = 2;
    common.proto.Error error = 3;
}

message LogoutRequest {
    string user_id = 1;
}

message AskResetPasswordRequest{
    string email = 1;
}

message ResetPasswordRequest{
    string email = 1;
    string password = 2;
    string token = 3;
}

message ActivateRequest{
    string token = 1;
}

message Token {
    string token = 1;
}

message NewTokenResponse {
    string token = 1;
    common.proto.Error error = 2;
}