// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payr/v1/grpc/payr.proto

package payr

import (
	context "context"
	fmt "fmt"
	common "github.com/Ankr-network/dccn-common/protos/common"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderStatus int32

const (
	OrderStatus_CONFIRMING  OrderStatus = 0
	OrderStatus_CONFIRMED   OrderStatus = 1
	OrderStatus_DEACTIVATED OrderStatus = 2
)

var OrderStatus_name = map[int32]string{
	0: "CONFIRMING",
	1: "CONFIRMED",
	2: "DEACTIVATED",
}

var OrderStatus_value = map[string]int32{
	"CONFIRMING":  0,
	"CONFIRMED":   1,
	"DEACTIVATED": 2,
}

func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}

func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{0}
}

type PlanStatus int32

const (
	PlanStatus_UNPAID  PlanStatus = 0
	PlanStatus_PAID    PlanStatus = 1
	PlanStatus_EXPRIED PlanStatus = 2
)

var PlanStatus_name = map[int32]string{
	0: "UNPAID",
	1: "PAID",
	2: "EXPRIED",
}

var PlanStatus_value = map[string]int32{
	"UNPAID":  0,
	"PAID":    1,
	"EXPRIED": 2,
}

func (x PlanStatus) String() string {
	return proto.EnumName(PlanStatus_name, int32(x))
}

func (PlanStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{1}
}

type RequestCodeRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Discount             float64  `protobuf:"fixed64,2,opt,name=discount,proto3" json:"discount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestCodeRequest) Reset()         { *m = RequestCodeRequest{} }
func (m *RequestCodeRequest) String() string { return proto.CompactTextString(m) }
func (*RequestCodeRequest) ProtoMessage()    {}
func (*RequestCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{0}
}

func (m *RequestCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestCodeRequest.Unmarshal(m, b)
}
func (m *RequestCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestCodeRequest.Marshal(b, m, deterministic)
}
func (m *RequestCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestCodeRequest.Merge(m, src)
}
func (m *RequestCodeRequest) XXX_Size() int {
	return xxx_messageInfo_RequestCodeRequest.Size(m)
}
func (m *RequestCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestCodeRequest proto.InternalMessageInfo

func (m *RequestCodeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *RequestCodeRequest) GetDiscount() float64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

type Code struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Discount             float64  `protobuf:"fixed64,3,opt,name=discount,proto3" json:"discount,omitempty"`
	Revenue              string   `protobuf:"bytes,4,opt,name=revenue,proto3" json:"revenue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Code) Reset()         { *m = Code{} }
func (m *Code) String() string { return proto.CompactTextString(m) }
func (*Code) ProtoMessage()    {}
func (*Code) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{1}
}

func (m *Code) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Code.Unmarshal(m, b)
}
func (m *Code) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Code.Marshal(b, m, deterministic)
}
func (m *Code) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Code.Merge(m, src)
}
func (m *Code) XXX_Size() int {
	return xxx_messageInfo_Code.Size(m)
}
func (m *Code) XXX_DiscardUnknown() {
	xxx_messageInfo_Code.DiscardUnknown(m)
}

var xxx_messageInfo_Code proto.InternalMessageInfo

func (m *Code) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Code) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Code) GetDiscount() float64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *Code) GetRevenue() string {
	if m != nil {
		return m.Revenue
	}
	return ""
}

type RequestCodeResponse struct {
	Codes                []*Code  `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestCodeResponse) Reset()         { *m = RequestCodeResponse{} }
func (m *RequestCodeResponse) String() string { return proto.CompactTextString(m) }
func (*RequestCodeResponse) ProtoMessage()    {}
func (*RequestCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{2}
}

func (m *RequestCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestCodeResponse.Unmarshal(m, b)
}
func (m *RequestCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestCodeResponse.Marshal(b, m, deterministic)
}
func (m *RequestCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestCodeResponse.Merge(m, src)
}
func (m *RequestCodeResponse) XXX_Size() int {
	return xxx_messageInfo_RequestCodeResponse.Size(m)
}
func (m *RequestCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestCodeResponse proto.InternalMessageInfo

func (m *RequestCodeResponse) GetCodes() []*Code {
	if m != nil {
		return m.Codes
	}
	return nil
}

type ReportCodeRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportCodeRequest) Reset()         { *m = ReportCodeRequest{} }
func (m *ReportCodeRequest) String() string { return proto.CompactTextString(m) }
func (*ReportCodeRequest) ProtoMessage()    {}
func (*ReportCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{3}
}

func (m *ReportCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportCodeRequest.Unmarshal(m, b)
}
func (m *ReportCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportCodeRequest.Marshal(b, m, deterministic)
}
func (m *ReportCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportCodeRequest.Merge(m, src)
}
func (m *ReportCodeRequest) XXX_Size() int {
	return xxx_messageInfo_ReportCodeRequest.Size(m)
}
func (m *ReportCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportCodeRequest proto.InternalMessageInfo

func (m *ReportCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ReportCodeResponse struct {
	Report               *Code    `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportCodeResponse) Reset()         { *m = ReportCodeResponse{} }
func (m *ReportCodeResponse) String() string { return proto.CompactTextString(m) }
func (*ReportCodeResponse) ProtoMessage()    {}
func (*ReportCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{4}
}

func (m *ReportCodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportCodeResponse.Unmarshal(m, b)
}
func (m *ReportCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportCodeResponse.Marshal(b, m, deterministic)
}
func (m *ReportCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportCodeResponse.Merge(m, src)
}
func (m *ReportCodeResponse) XXX_Size() int {
	return xxx_messageInfo_ReportCodeResponse.Size(m)
}
func (m *ReportCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportCodeResponse proto.InternalMessageInfo

func (m *ReportCodeResponse) GetReport() *Code {
	if m != nil {
		return m.Report
	}
	return nil
}

type Order struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Order type, marking the kind of currency using.
	OrderType string `protobuf:"bytes,2,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	// How much money left to pay.
	Status               OrderStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=payr.OrderStatus" json:"status,omitempty"`
	IssuedAt             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	Expiration           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
	TeamId               string               `protobuf:"bytes,7,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	PlanType             string               `protobuf:"bytes,8,opt,name=plan_type,json=planType,proto3" json:"plan_type,omitempty"`
	Time                 string               `protobuf:"bytes,9,opt,name=time,proto3" json:"time,omitempty"`
	TimeUnit             string               `protobuf:"bytes,10,opt,name=time_unit,json=timeUnit,proto3" json:"time_unit,omitempty"`
	SubId                string               `protobuf:"bytes,11,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	App                  *common.App          `protobuf:"bytes,12,opt,name=app,proto3" json:"app,omitempty"`
	ChartName            string               `protobuf:"bytes,13,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`
	ChartIconUrl         string               `protobuf:"bytes,14,opt,name=chart_icon_url,json=chartIconUrl,proto3" json:"chart_icon_url,omitempty"`
	BalanceToken         string               `protobuf:"bytes,3,opt,name=balance_token,json=balanceToken,proto3" json:"balance_token,omitempty"`
	BalanceUsdt          string               `protobuf:"bytes,15,opt,name=balance_usdt,json=balanceUsdt,proto3" json:"balance_usdt,omitempty"`
	BalanceUsdtOriginal  string               `protobuf:"bytes,16,opt,name=balance_usdt_original,json=balanceUsdtOriginal,proto3" json:"balance_usdt_original,omitempty"`
	BalanceTokenOriginal string               `protobuf:"bytes,17,opt,name=balance_token_original,json=balanceTokenOriginal,proto3" json:"balance_token_original,omitempty"`
	Code                 string               `protobuf:"bytes,18,opt,name=code,proto3" json:"code,omitempty"`
	Discount             string               `protobuf:"bytes,19,opt,name=discount,proto3" json:"discount,omitempty"`
	DiscountUsdt         string               `protobuf:"bytes,20,opt,name=discount_usdt,json=discountUsdt,proto3" json:"discount_usdt,omitempty"`
	DiscoountToken       string               `protobuf:"bytes,21,opt,name=discoount_token,json=discoountToken,proto3" json:"discoount_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{5}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *Order) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return OrderStatus_CONFIRMING
}

func (m *Order) GetIssuedAt() *timestamp.Timestamp {
	if m != nil {
		return m.IssuedAt
	}
	return nil
}

func (m *Order) GetExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *Order) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *Order) GetPlanType() string {
	if m != nil {
		return m.PlanType
	}
	return ""
}

func (m *Order) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Order) GetTimeUnit() string {
	if m != nil {
		return m.TimeUnit
	}
	return ""
}

func (m *Order) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

func (m *Order) GetApp() *common.App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Order) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

func (m *Order) GetChartIconUrl() string {
	if m != nil {
		return m.ChartIconUrl
	}
	return ""
}

func (m *Order) GetBalanceToken() string {
	if m != nil {
		return m.BalanceToken
	}
	return ""
}

func (m *Order) GetBalanceUsdt() string {
	if m != nil {
		return m.BalanceUsdt
	}
	return ""
}

func (m *Order) GetBalanceUsdtOriginal() string {
	if m != nil {
		return m.BalanceUsdtOriginal
	}
	return ""
}

func (m *Order) GetBalanceTokenOriginal() string {
	if m != nil {
		return m.BalanceTokenOriginal
	}
	return ""
}

func (m *Order) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Order) GetDiscount() string {
	if m != nil {
		return m.Discount
	}
	return ""
}

func (m *Order) GetDiscountUsdt() string {
	if m != nil {
		return m.DiscountUsdt
	}
	return ""
}

func (m *Order) GetDiscoountToken() string {
	if m != nil {
		return m.DiscoountToken
	}
	return ""
}

type Subscription struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              string               `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	PlanType             string               `protobuf:"bytes,3,opt,name=plan_type,json=planType,proto3" json:"plan_type,omitempty"`
	TeamId               string               `protobuf:"bytes,4,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Status               PlanStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=payr.PlanStatus" json:"status,omitempty"`
	IssuedAt             *timestamp.Timestamp `protobuf:"bytes,6,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	Expiration           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Time                 string               `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	TimeUnit             string               `protobuf:"bytes,9,opt,name=time_unit,json=timeUnit,proto3" json:"time_unit,omitempty"`
	ChartName            string               `protobuf:"bytes,10,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`
	ChartIconUrl         string               `protobuf:"bytes,11,opt,name=chart_icon_url,json=chartIconUrl,proto3" json:"chart_icon_url,omitempty"`
	OrderType            string               `protobuf:"bytes,12,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	BalanceOriginal      string               `protobuf:"bytes,13,opt,name=balance_original,json=balanceOriginal,proto3" json:"balance_original,omitempty"`
	TokenOriginal        string               `protobuf:"bytes,14,opt,name=token_original,json=tokenOriginal,proto3" json:"token_original,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{6}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Subscription) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Subscription) GetPlanType() string {
	if m != nil {
		return m.PlanType
	}
	return ""
}

func (m *Subscription) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *Subscription) GetStatus() PlanStatus {
	if m != nil {
		return m.Status
	}
	return PlanStatus_UNPAID
}

func (m *Subscription) GetIssuedAt() *timestamp.Timestamp {
	if m != nil {
		return m.IssuedAt
	}
	return nil
}

func (m *Subscription) GetExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *Subscription) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Subscription) GetTimeUnit() string {
	if m != nil {
		return m.TimeUnit
	}
	return ""
}

func (m *Subscription) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

func (m *Subscription) GetChartIconUrl() string {
	if m != nil {
		return m.ChartIconUrl
	}
	return ""
}

func (m *Subscription) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *Subscription) GetBalanceOriginal() string {
	if m != nil {
		return m.BalanceOriginal
	}
	return ""
}

func (m *Subscription) GetTokenOriginal() string {
	if m != nil {
		return m.TokenOriginal
	}
	return ""
}

type PlanType struct {
	PlanType             string   `protobuf:"bytes,1,opt,name=plan_type,json=planType,proto3" json:"plan_type,omitempty"`
	CpuNumber            string   `protobuf:"bytes,2,opt,name=cpu_number,json=cpuNumber,proto3" json:"cpu_number,omitempty"`
	MemoryNumber         string   `protobuf:"bytes,3,opt,name=memory_number,json=memoryNumber,proto3" json:"memory_number,omitempty"`
	StorageNumber        string   `protobuf:"bytes,4,opt,name=storage_number,json=storageNumber,proto3" json:"storage_number,omitempty"`
	Price                string   `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	PriceWeek            string   `protobuf:"bytes,6,opt,name=price_week,json=priceWeek,proto3" json:"price_week,omitempty"`
	PriceMonth           string   `protobuf:"bytes,7,opt,name=price_month,json=priceMonth,proto3" json:"price_month,omitempty"`
	PriceHour            string   `protobuf:"bytes,8,opt,name=price_hour,json=priceHour,proto3" json:"price_hour,omitempty"`
	PlanTitle            string   `protobuf:"bytes,9,opt,name=plan_title,json=planTitle,proto3" json:"plan_title,omitempty"`
	PlanSet              string   `protobuf:"bytes,10,opt,name=plan_set,json=planSet,proto3" json:"plan_set,omitempty"`
	PlanStatus           string   `protobuf:"bytes,11,opt,name=plan_status,json=planStatus,proto3" json:"plan_status,omitempty"`
	PlanFeatured         bool     `protobuf:"varint,12,opt,name=plan_featured,json=planFeatured,proto3" json:"plan_featured,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlanType) Reset()         { *m = PlanType{} }
func (m *PlanType) String() string { return proto.CompactTextString(m) }
func (*PlanType) ProtoMessage()    {}
func (*PlanType) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{7}
}

func (m *PlanType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanType.Unmarshal(m, b)
}
func (m *PlanType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanType.Marshal(b, m, deterministic)
}
func (m *PlanType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanType.Merge(m, src)
}
func (m *PlanType) XXX_Size() int {
	return xxx_messageInfo_PlanType.Size(m)
}
func (m *PlanType) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanType.DiscardUnknown(m)
}

var xxx_messageInfo_PlanType proto.InternalMessageInfo

func (m *PlanType) GetPlanType() string {
	if m != nil {
		return m.PlanType
	}
	return ""
}

func (m *PlanType) GetCpuNumber() string {
	if m != nil {
		return m.CpuNumber
	}
	return ""
}

func (m *PlanType) GetMemoryNumber() string {
	if m != nil {
		return m.MemoryNumber
	}
	return ""
}

func (m *PlanType) GetStorageNumber() string {
	if m != nil {
		return m.StorageNumber
	}
	return ""
}

func (m *PlanType) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *PlanType) GetPriceWeek() string {
	if m != nil {
		return m.PriceWeek
	}
	return ""
}

func (m *PlanType) GetPriceMonth() string {
	if m != nil {
		return m.PriceMonth
	}
	return ""
}

func (m *PlanType) GetPriceHour() string {
	if m != nil {
		return m.PriceHour
	}
	return ""
}

func (m *PlanType) GetPlanTitle() string {
	if m != nil {
		return m.PlanTitle
	}
	return ""
}

func (m *PlanType) GetPlanSet() string {
	if m != nil {
		return m.PlanSet
	}
	return ""
}

func (m *PlanType) GetPlanStatus() string {
	if m != nil {
		return m.PlanStatus
	}
	return ""
}

func (m *PlanType) GetPlanFeatured() bool {
	if m != nil {
		return m.PlanFeatured
	}
	return false
}

type ListSubsRequest struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSubsRequest) Reset()         { *m = ListSubsRequest{} }
func (m *ListSubsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSubsRequest) ProtoMessage()    {}
func (*ListSubsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{8}
}

func (m *ListSubsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubsRequest.Unmarshal(m, b)
}
func (m *ListSubsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubsRequest.Marshal(b, m, deterministic)
}
func (m *ListSubsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubsRequest.Merge(m, src)
}
func (m *ListSubsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSubsRequest.Size(m)
}
func (m *ListSubsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubsRequest proto.InternalMessageInfo

func (m *ListSubsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ListSubsResponse struct {
	Subs                 []*Subscription `protobuf:"bytes,1,rep,name=subs,proto3" json:"subs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListSubsResponse) Reset()         { *m = ListSubsResponse{} }
func (m *ListSubsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSubsResponse) ProtoMessage()    {}
func (*ListSubsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{9}
}

func (m *ListSubsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubsResponse.Unmarshal(m, b)
}
func (m *ListSubsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubsResponse.Marshal(b, m, deterministic)
}
func (m *ListSubsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubsResponse.Merge(m, src)
}
func (m *ListSubsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSubsResponse.Size(m)
}
func (m *ListSubsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubsResponse proto.InternalMessageInfo

func (m *ListSubsResponse) GetSubs() []*Subscription {
	if m != nil {
		return m.Subs
	}
	return nil
}

type ListPlanResponse struct {
	Plans                []*PlanType `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListPlanResponse) Reset()         { *m = ListPlanResponse{} }
func (m *ListPlanResponse) String() string { return proto.CompactTextString(m) }
func (*ListPlanResponse) ProtoMessage()    {}
func (*ListPlanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{10}
}

func (m *ListPlanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPlanResponse.Unmarshal(m, b)
}
func (m *ListPlanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPlanResponse.Marshal(b, m, deterministic)
}
func (m *ListPlanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPlanResponse.Merge(m, src)
}
func (m *ListPlanResponse) XXX_Size() int {
	return xxx_messageInfo_ListPlanResponse.Size(m)
}
func (m *ListPlanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPlanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPlanResponse proto.InternalMessageInfo

func (m *ListPlanResponse) GetPlans() []*PlanType {
	if m != nil {
		return m.Plans
	}
	return nil
}

type CollectFeeRequest struct {
	CpuNumber            string   `protobuf:"bytes,1,opt,name=cpu_number,json=cpuNumber,proto3" json:"cpu_number,omitempty"`
	MemoryNumber         string   `protobuf:"bytes,2,opt,name=memory_number,json=memoryNumber,proto3" json:"memory_number,omitempty"`
	StorageNumber        string   `protobuf:"bytes,3,opt,name=storage_number,json=storageNumber,proto3" json:"storage_number,omitempty"`
	Time                 string   `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	TimeUnit             string   `protobuf:"bytes,5,opt,name=time_unit,json=timeUnit,proto3" json:"time_unit,omitempty"`
	Code                 string   `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectFeeRequest) Reset()         { *m = CollectFeeRequest{} }
func (m *CollectFeeRequest) String() string { return proto.CompactTextString(m) }
func (*CollectFeeRequest) ProtoMessage()    {}
func (*CollectFeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{11}
}

func (m *CollectFeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectFeeRequest.Unmarshal(m, b)
}
func (m *CollectFeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectFeeRequest.Marshal(b, m, deterministic)
}
func (m *CollectFeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectFeeRequest.Merge(m, src)
}
func (m *CollectFeeRequest) XXX_Size() int {
	return xxx_messageInfo_CollectFeeRequest.Size(m)
}
func (m *CollectFeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectFeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CollectFeeRequest proto.InternalMessageInfo

func (m *CollectFeeRequest) GetCpuNumber() string {
	if m != nil {
		return m.CpuNumber
	}
	return ""
}

func (m *CollectFeeRequest) GetMemoryNumber() string {
	if m != nil {
		return m.MemoryNumber
	}
	return ""
}

func (m *CollectFeeRequest) GetStorageNumber() string {
	if m != nil {
		return m.StorageNumber
	}
	return ""
}

func (m *CollectFeeRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *CollectFeeRequest) GetTimeUnit() string {
	if m != nil {
		return m.TimeUnit
	}
	return ""
}

func (m *CollectFeeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type PlanFeeRequest struct {
	Plan                 string   `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	Time                 string   `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	TeamId               string   `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TimeUnit             string   `protobuf:"bytes,4,opt,name=time_unit,json=timeUnit,proto3" json:"time_unit,omitempty"`
	Code                 string   `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlanFeeRequest) Reset()         { *m = PlanFeeRequest{} }
func (m *PlanFeeRequest) String() string { return proto.CompactTextString(m) }
func (*PlanFeeRequest) ProtoMessage()    {}
func (*PlanFeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{12}
}

func (m *PlanFeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlanFeeRequest.Unmarshal(m, b)
}
func (m *PlanFeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlanFeeRequest.Marshal(b, m, deterministic)
}
func (m *PlanFeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlanFeeRequest.Merge(m, src)
}
func (m *PlanFeeRequest) XXX_Size() int {
	return xxx_messageInfo_PlanFeeRequest.Size(m)
}
func (m *PlanFeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlanFeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlanFeeRequest proto.InternalMessageInfo

func (m *PlanFeeRequest) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *PlanFeeRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *PlanFeeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *PlanFeeRequest) GetTimeUnit() string {
	if m != nil {
		return m.TimeUnit
	}
	return ""
}

func (m *PlanFeeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type CollectFeeResponse struct {
	Plan                 string   `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	Fee                  string   `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	DiscountToken        string   `protobuf:"bytes,4,opt,name=discount_token,json=discountToken,proto3" json:"discount_token,omitempty"`
	DiscountFee          string   `protobuf:"bytes,5,opt,name=discount_fee,json=discountFee,proto3" json:"discount_fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectFeeResponse) Reset()         { *m = CollectFeeResponse{} }
func (m *CollectFeeResponse) String() string { return proto.CompactTextString(m) }
func (*CollectFeeResponse) ProtoMessage()    {}
func (*CollectFeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{13}
}

func (m *CollectFeeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectFeeResponse.Unmarshal(m, b)
}
func (m *CollectFeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectFeeResponse.Marshal(b, m, deterministic)
}
func (m *CollectFeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectFeeResponse.Merge(m, src)
}
func (m *CollectFeeResponse) XXX_Size() int {
	return xxx_messageInfo_CollectFeeResponse.Size(m)
}
func (m *CollectFeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectFeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CollectFeeResponse proto.InternalMessageInfo

func (m *CollectFeeResponse) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *CollectFeeResponse) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *CollectFeeResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CollectFeeResponse) GetDiscountToken() string {
	if m != nil {
		return m.DiscountToken
	}
	return ""
}

func (m *CollectFeeResponse) GetDiscountFee() string {
	if m != nil {
		return m.DiscountFee
	}
	return ""
}

type NewOrderRequest struct {
	TeamId               string      `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Type                 string      `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Plan                 string      `protobuf:"bytes,3,opt,name=plan,proto3" json:"plan,omitempty"`
	Time                 string      `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	TimeUnit             string      `protobuf:"bytes,5,opt,name=time_unit,json=timeUnit,proto3" json:"time_unit,omitempty"`
	App                  *common.App `protobuf:"bytes,6,opt,name=App,proto3" json:"App,omitempty"`
	ClusterId            string      `protobuf:"bytes,7,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Code                 string      `protobuf:"bytes,8,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NewOrderRequest) Reset()         { *m = NewOrderRequest{} }
func (m *NewOrderRequest) String() string { return proto.CompactTextString(m) }
func (*NewOrderRequest) ProtoMessage()    {}
func (*NewOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{14}
}

func (m *NewOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrderRequest.Unmarshal(m, b)
}
func (m *NewOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrderRequest.Marshal(b, m, deterministic)
}
func (m *NewOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrderRequest.Merge(m, src)
}
func (m *NewOrderRequest) XXX_Size() int {
	return xxx_messageInfo_NewOrderRequest.Size(m)
}
func (m *NewOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrderRequest proto.InternalMessageInfo

func (m *NewOrderRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *NewOrderRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NewOrderRequest) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *NewOrderRequest) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *NewOrderRequest) GetTimeUnit() string {
	if m != nil {
		return m.TimeUnit
	}
	return ""
}

func (m *NewOrderRequest) GetApp() *common.App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *NewOrderRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *NewOrderRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type NewOrderResponse struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Expiration           int64    `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewOrderResponse) Reset()         { *m = NewOrderResponse{} }
func (m *NewOrderResponse) String() string { return proto.CompactTextString(m) }
func (*NewOrderResponse) ProtoMessage()    {}
func (*NewOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{15}
}

func (m *NewOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrderResponse.Unmarshal(m, b)
}
func (m *NewOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrderResponse.Marshal(b, m, deterministic)
}
func (m *NewOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrderResponse.Merge(m, src)
}
func (m *NewOrderResponse) XXX_Size() int {
	return xxx_messageInfo_NewOrderResponse.Size(m)
}
func (m *NewOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrderResponse proto.InternalMessageInfo

func (m *NewOrderResponse) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *NewOrderResponse) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

type TeamID struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamID) Reset()         { *m = TeamID{} }
func (m *TeamID) String() string { return proto.CompactTextString(m) }
func (*TeamID) ProtoMessage()    {}
func (*TeamID) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{16}
}

func (m *TeamID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamID.Unmarshal(m, b)
}
func (m *TeamID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamID.Marshal(b, m, deterministic)
}
func (m *TeamID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamID.Merge(m, src)
}
func (m *TeamID) XXX_Size() int {
	return xxx_messageInfo_TeamID.Size(m)
}
func (m *TeamID) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamID.DiscardUnknown(m)
}

var xxx_messageInfo_TeamID proto.InternalMessageInfo

func (m *TeamID) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type OrderStatusResponse struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderStatusResponse) Reset()         { *m = OrderStatusResponse{} }
func (m *OrderStatusResponse) String() string { return proto.CompactTextString(m) }
func (*OrderStatusResponse) ProtoMessage()    {}
func (*OrderStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{17}
}

func (m *OrderStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderStatusResponse.Unmarshal(m, b)
}
func (m *OrderStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderStatusResponse.Marshal(b, m, deterministic)
}
func (m *OrderStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderStatusResponse.Merge(m, src)
}
func (m *OrderStatusResponse) XXX_Size() int {
	return xxx_messageInfo_OrderStatusResponse.Size(m)
}
func (m *OrderStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderStatusResponse proto.InternalMessageInfo

func (m *OrderStatusResponse) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type WithdrawRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CurrencyType         string   `protobuf:"bytes,2,opt,name=currency_type,json=currencyType,proto3" json:"currency_type,omitempty"`
	Amount               string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TargetAddress        string   `protobuf:"bytes,4,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawRequest) Reset()         { *m = WithdrawRequest{} }
func (m *WithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawRequest) ProtoMessage()    {}
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{18}
}

func (m *WithdrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawRequest.Unmarshal(m, b)
}
func (m *WithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawRequest.Merge(m, src)
}
func (m *WithdrawRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawRequest.Size(m)
}
func (m *WithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawRequest proto.InternalMessageInfo

func (m *WithdrawRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *WithdrawRequest) GetCurrencyType() string {
	if m != nil {
		return m.CurrencyType
	}
	return ""
}

func (m *WithdrawRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *WithdrawRequest) GetTargetAddress() string {
	if m != nil {
		return m.TargetAddress
	}
	return ""
}

type WithdrawResponse struct {
	ReqId                string   `protobuf:"bytes,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	TransanctionHash     string   `protobuf:"bytes,4,opt,name=transanction_hash,json=transanctionHash,proto3" json:"transanction_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawResponse) Reset()         { *m = WithdrawResponse{} }
func (m *WithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*WithdrawResponse) ProtoMessage()    {}
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{19}
}

func (m *WithdrawResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawResponse.Unmarshal(m, b)
}
func (m *WithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawResponse.Marshal(b, m, deterministic)
}
func (m *WithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawResponse.Merge(m, src)
}
func (m *WithdrawResponse) XXX_Size() int {
	return xxx_messageInfo_WithdrawResponse.Size(m)
}
func (m *WithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawResponse proto.InternalMessageInfo

func (m *WithdrawResponse) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *WithdrawResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *WithdrawResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *WithdrawResponse) GetTransanctionHash() string {
	if m != nil {
		return m.TransanctionHash
	}
	return ""
}

type PaymentHistoryResponse struct {
	Payments             []*common.Payment `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PaymentHistoryResponse) Reset()         { *m = PaymentHistoryResponse{} }
func (m *PaymentHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*PaymentHistoryResponse) ProtoMessage()    {}
func (*PaymentHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f59d6d1c7771cd, []int{20}
}

func (m *PaymentHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentHistoryResponse.Unmarshal(m, b)
}
func (m *PaymentHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentHistoryResponse.Marshal(b, m, deterministic)
}
func (m *PaymentHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentHistoryResponse.Merge(m, src)
}
func (m *PaymentHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_PaymentHistoryResponse.Size(m)
}
func (m *PaymentHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentHistoryResponse proto.InternalMessageInfo

func (m *PaymentHistoryResponse) GetPayments() []*common.Payment {
	if m != nil {
		return m.Payments
	}
	return nil
}

func init() {
	proto.RegisterEnum("payr.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("payr.PlanStatus", PlanStatus_name, PlanStatus_value)
	proto.RegisterType((*RequestCodeRequest)(nil), "payr.RequestCodeRequest")
	proto.RegisterType((*Code)(nil), "payr.Code")
	proto.RegisterType((*RequestCodeResponse)(nil), "payr.RequestCodeResponse")
	proto.RegisterType((*ReportCodeRequest)(nil), "payr.ReportCodeRequest")
	proto.RegisterType((*ReportCodeResponse)(nil), "payr.ReportCodeResponse")
	proto.RegisterType((*Order)(nil), "payr.Order")
	proto.RegisterType((*Subscription)(nil), "payr.Subscription")
	proto.RegisterType((*PlanType)(nil), "payr.PlanType")
	proto.RegisterType((*ListSubsRequest)(nil), "payr.ListSubsRequest")
	proto.RegisterType((*ListSubsResponse)(nil), "payr.ListSubsResponse")
	proto.RegisterType((*ListPlanResponse)(nil), "payr.ListPlanResponse")
	proto.RegisterType((*CollectFeeRequest)(nil), "payr.CollectFeeRequest")
	proto.RegisterType((*PlanFeeRequest)(nil), "payr.PlanFeeRequest")
	proto.RegisterType((*CollectFeeResponse)(nil), "payr.CollectFeeResponse")
	proto.RegisterType((*NewOrderRequest)(nil), "payr.NewOrderRequest")
	proto.RegisterType((*NewOrderResponse)(nil), "payr.NewOrderResponse")
	proto.RegisterType((*TeamID)(nil), "payr.TeamID")
	proto.RegisterType((*OrderStatusResponse)(nil), "payr.OrderStatusResponse")
	proto.RegisterType((*WithdrawRequest)(nil), "payr.WithdrawRequest")
	proto.RegisterType((*WithdrawResponse)(nil), "payr.WithdrawResponse")
	proto.RegisterType((*PaymentHistoryResponse)(nil), "payr.PaymentHistoryResponse")
}

func init() { proto.RegisterFile("payr/v1/grpc/payr.proto", fileDescriptor_91f59d6d1c7771cd) }

var fileDescriptor_91f59d6d1c7771cd = []byte{
	// 1594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0xd9, 0x6e, 0xdb, 0x46,
	0x17, 0x36, 0xad, 0xfd, 0x48, 0x96, 0xe5, 0xf1, 0x12, 0x46, 0xff, 0x12, 0x87, 0x4e, 0xfe, 0xf8,
	0x4f, 0x01, 0x1b, 0x71, 0x0b, 0xc4, 0x4d, 0xd1, 0x02, 0x82, 0x97, 0x5a, 0x68, 0xe3, 0x18, 0x8c,
	0xdd, 0xf4, 0x4e, 0xa0, 0xc8, 0x89, 0x44, 0x44, 0x5c, 0x32, 0x1c, 0x26, 0x15, 0xd0, 0xab, 0xde,
	0xe4, 0x1d, 0xfa, 0x12, 0x7d, 0x88, 0x3e, 0x46, 0xdf, 0xa1, 0x77, 0xbd, 0x2f, 0x66, 0x23, 0x87,
	0xb4, 0x5c, 0xa7, 0xbd, 0xe2, 0xcc, 0x59, 0x66, 0xce, 0xf2, 0x9d, 0x39, 0x87, 0x70, 0x27, 0x76,
	0xe6, 0x64, 0xff, 0xdd, 0x93, 0xfd, 0x09, 0x89, 0xdd, 0x7d, 0xb6, 0xd9, 0x8b, 0x49, 0x44, 0x23,
	0x54, 0x65, 0xeb, 0xfe, 0xba, 0x1b, 0x05, 0x41, 0x14, 0xee, 0x8b, 0x8f, 0x60, 0xf5, 0xef, 0x4d,
	0xa2, 0x68, 0x32, 0xc3, 0xfb, 0x7c, 0x37, 0x4e, 0x5f, 0xef, 0x53, 0x3f, 0xc0, 0x09, 0x75, 0x82,
	0x58, 0x08, 0x58, 0x67, 0x80, 0x6c, 0xfc, 0x36, 0xc5, 0x09, 0x3d, 0x8a, 0x3c, 0x2c, 0x97, 0x68,
	0x0b, 0xea, 0x61, 0x1a, 0x8c, 0x31, 0x31, 0x8d, 0x6d, 0x63, 0xb7, 0x66, 0xcb, 0x1d, 0xea, 0x43,
	0xd3, 0xf3, 0x13, 0x37, 0x4a, 0x43, 0x6a, 0x2e, 0x6f, 0x1b, 0xbb, 0x86, 0x9d, 0xed, 0xad, 0x29,
	0x54, 0xd9, 0x11, 0x08, 0x41, 0xd5, 0x8d, 0x3c, 0xcc, 0x35, 0x5b, 0x36, 0x5f, 0xb3, 0xf3, 0x12,
	0xea, 0xd0, 0x34, 0xe1, 0x5a, 0x2d, 0x5b, 0xee, 0x0a, 0xe7, 0x55, 0x8a, 0xe7, 0x21, 0x13, 0x1a,
	0x04, 0xbf, 0xc3, 0x61, 0x8a, 0xcd, 0x2a, 0x57, 0x52, 0x5b, 0xeb, 0x29, 0xac, 0x17, 0x6c, 0x4e,
	0xe2, 0x28, 0x4c, 0x30, 0xda, 0x86, 0x1a, 0xbb, 0x2c, 0x31, 0x8d, 0xed, 0xca, 0x6e, 0xfb, 0x00,
	0xf6, 0x78, 0x88, 0xb8, 0x88, 0x60, 0x58, 0x8f, 0x60, 0xcd, 0xc6, 0x71, 0x44, 0x0a, 0xbe, 0x2e,
	0xb0, 0xd7, 0x3a, 0x64, 0x51, 0xc9, 0x05, 0xe5, 0x05, 0x16, 0xd4, 0x09, 0xa7, 0x72, 0xd9, 0xe2,
	0x0d, 0x92, 0x63, 0xfd, 0x5e, 0x83, 0xda, 0x0b, 0xe2, 0x61, 0x82, 0xba, 0xb0, 0xec, 0x7b, 0xf2,
	0xd4, 0x65, 0xdf, 0x43, 0xff, 0x01, 0x88, 0x18, 0x63, 0x44, 0xe7, 0x31, 0x96, 0x71, 0x68, 0x71,
	0xca, 0xe5, 0x3c, 0xc6, 0xe8, 0xff, 0x59, 0x88, 0x98, 0xb7, 0xdd, 0x83, 0x35, 0x71, 0x38, 0x3f,
	0xeb, 0x25, 0x67, 0x64, 0x51, 0x7b, 0x0a, 0x2d, 0x3f, 0x49, 0x52, 0xec, 0x8d, 0x1c, 0x6a, 0xd6,
	0xb8, 0x29, 0xfd, 0x3d, 0x91, 0xe8, 0x3d, 0x95, 0xe8, 0xbd, 0x4b, 0x95, 0x68, 0xbb, 0x29, 0x84,
	0x07, 0x14, 0x3d, 0x03, 0xc0, 0x3f, 0xc4, 0x3e, 0x71, 0xa8, 0x1f, 0x85, 0x66, 0xfd, 0x56, 0x4d,
	0x4d, 0x1a, 0xdd, 0x81, 0x06, 0xc5, 0x4e, 0x30, 0xf2, 0x3d, 0xb3, 0x21, 0x72, 0xc8, 0xb6, 0x43,
	0x0f, 0xfd, 0x0b, 0x5a, 0xf1, 0xcc, 0x09, 0x85, 0x5b, 0x4d, 0xce, 0x6a, 0x32, 0x02, 0xf7, 0x0a,
	0x41, 0x95, 0x21, 0xce, 0x6c, 0x89, 0xe0, 0xb2, 0x35, 0x53, 0x60, 0xdf, 0x51, 0x1a, 0xfa, 0xd4,
	0x04, 0xa1, 0xc0, 0x08, 0x57, 0xa1, 0x4f, 0xd1, 0x26, 0xd4, 0x93, 0x74, 0xcc, 0x6e, 0x69, 0x73,
	0x4e, 0x2d, 0x49, 0xc7, 0x43, 0x0f, 0xed, 0x40, 0xc5, 0x89, 0x63, 0xb3, 0xc3, 0x4d, 0x5e, 0xdb,
	0xd3, 0x31, 0xbe, 0x37, 0x88, 0x63, 0x9b, 0x71, 0x59, 0x84, 0xdd, 0xa9, 0x43, 0xe8, 0x28, 0x74,
	0x02, 0x6c, 0xae, 0x88, 0x08, 0x73, 0xca, 0xb9, 0x13, 0x60, 0xf4, 0x00, 0xba, 0x82, 0xed, 0xbb,
	0x51, 0x38, 0x4a, 0xc9, 0xcc, 0xec, 0x72, 0x91, 0x0e, 0xa7, 0x0e, 0xdd, 0x28, 0xbc, 0x22, 0x33,
	0xb4, 0x03, 0x2b, 0x63, 0x67, 0xe6, 0x84, 0x2e, 0x1e, 0xd1, 0xe8, 0x0d, 0x0e, 0x39, 0x2e, 0x5b,
	0x76, 0x47, 0x12, 0x2f, 0x19, 0x0d, 0xdd, 0x07, 0xb5, 0x1f, 0xa5, 0x89, 0x47, 0xcd, 0x55, 0x2e,
	0xd3, 0x96, 0xb4, 0xab, 0xc4, 0xa3, 0xe8, 0x00, 0x36, 0x75, 0x91, 0x51, 0x44, 0xfc, 0x89, 0x1f,
	0x3a, 0x33, 0xb3, 0xc7, 0x65, 0xd7, 0x35, 0xd9, 0x17, 0x92, 0x85, 0x3e, 0x83, 0xad, 0xc2, 0xdd,
	0xb9, 0xd2, 0x1a, 0x57, 0xda, 0xd0, 0x8d, 0xc8, 0xb4, 0x14, 0x80, 0x91, 0x56, 0x70, 0x7a, 0x61,
	0xad, 0x8b, 0x10, 0x67, 0x85, 0xb5, 0x03, 0x2b, 0x6a, 0x2d, 0xac, 0xdf, 0x10, 0x1e, 0x2a, 0x22,
	0x37, 0xff, 0x11, 0xac, 0xf2, 0x3d, 0x97, 0x12, 0x81, 0xd8, 0xe4, 0x62, 0xdd, 0x8c, 0xcc, 0xad,
	0xb0, 0xfe, 0xa8, 0x40, 0xe7, 0x65, 0x3a, 0x4e, 0x5c, 0xe2, 0xc7, 0x1c, 0x28, 0x65, 0xdc, 0xdf,
	0x85, 0xa6, 0xc0, 0xbd, 0xef, 0x49, 0xd4, 0x37, 0xf8, 0xbe, 0x0c, 0x9d, 0x4a, 0x09, 0x3a, 0x1a,
	0xe0, 0xaa, 0x05, 0xc0, 0xed, 0x66, 0x95, 0x52, 0xe3, 0x95, 0xd2, 0x13, 0x95, 0x72, 0x31, 0x73,
	0xc2, 0xbf, 0x2a, 0x94, 0xfa, 0x3f, 0x2e, 0x94, 0xc6, 0xdf, 0x2a, 0x14, 0x05, 0xf9, 0xe6, 0x4d,
	0x90, 0x6f, 0x95, 0x20, 0x5f, 0x84, 0x2d, 0xdc, 0x0e, 0xdb, 0xf6, 0x02, 0xd8, 0x16, 0x5f, 0x97,
	0xce, 0xf5, 0xd7, 0xa5, 0xa7, 0x90, 0x95, 0x61, 0x4a, 0x14, 0xc8, 0xaa, 0xa4, 0x67, 0x70, 0x7a,
	0x08, 0xdd, 0x12, 0xf8, 0x44, 0x99, 0xac, 0x50, 0x1d, 0x75, 0xd6, 0x87, 0x0a, 0x34, 0x2f, 0x54,
	0xae, 0x0a, 0x89, 0x34, 0x4a, 0x89, 0x64, 0xfe, 0xc5, 0xe9, 0x48, 0x36, 0x14, 0xf9, 0xf0, 0xb9,
	0x71, 0x7a, 0x2e, 0x7a, 0xca, 0x0e, 0xac, 0x04, 0x38, 0x88, 0xc8, 0x5c, 0x49, 0xc8, 0x82, 0x13,
	0x44, 0x29, 0xf4, 0x10, 0xba, 0x09, 0x8d, 0x88, 0x33, 0xc1, 0x4a, 0x4a, 0x60, 0x62, 0x45, 0x52,
	0xa5, 0xd8, 0x06, 0xd4, 0x62, 0xe2, 0xbb, 0x98, 0x23, 0xa3, 0x65, 0x8b, 0x0d, 0x33, 0x80, 0x2f,
	0x46, 0xef, 0x31, 0x7e, 0xc3, 0x71, 0xd0, 0xb2, 0x5b, 0x9c, 0xf2, 0x0a, 0xe3, 0x37, 0xe8, 0x1e,
	0xb4, 0x05, 0x3b, 0x88, 0x42, 0x3a, 0x95, 0xaf, 0x9b, 0xd0, 0x78, 0xce, 0x28, 0xb9, 0xfe, 0x34,
	0x4a, 0x89, 0xcc, 0xab, 0xd0, 0x3f, 0x8b, 0x52, 0xc2, 0xd9, 0xdc, 0x79, 0x9f, 0xce, 0xd4, 0x4b,
	0xc7, 0xc3, 0x71, 0xc9, 0x08, 0x0c, 0xff, 0x9c, 0x9d, 0x60, 0xf5, 0xda, 0x35, 0xd8, 0xfe, 0x25,
	0xa6, 0xfc, 0x66, 0xce, 0x12, 0x70, 0x6e, 0xcb, 0x9b, 0x33, 0x20, 0xb3, 0xd8, 0x70, 0x81, 0xd7,
	0xd8, 0xa1, 0x29, 0xc1, 0x1e, 0x4f, 0x6c, 0xd3, 0xee, 0x30, 0xe2, 0xa9, 0xa4, 0x59, 0x8f, 0x61,
	0xf5, 0x5b, 0x3f, 0xa1, 0xac, 0x08, 0x55, 0x4f, 0xd3, 0x6a, 0xc7, 0xd0, 0x6b, 0xc7, 0x7a, 0x06,
	0xbd, 0x5c, 0x56, 0xb6, 0xb5, 0xff, 0x41, 0x35, 0x49, 0xc7, 0xaa, 0x6d, 0x22, 0x51, 0x4d, 0x7a,
	0x49, 0xdb, 0x9c, 0x6f, 0x1d, 0x0a, 0x5d, 0x96, 0xf4, 0x4c, 0xf7, 0x01, 0xd4, 0x98, 0x2d, 0x4a,
	0xb9, 0x9b, 0x97, 0x22, 0x4b, 0xbd, 0x2d, 0x98, 0xd6, 0xaf, 0x06, 0xac, 0x1d, 0x45, 0xb3, 0x19,
	0x76, 0xe9, 0x29, 0xce, 0x1a, 0x6f, 0x11, 0x17, 0xc6, 0xad, 0xb8, 0x58, 0xfe, 0x28, 0x5c, 0x54,
	0x16, 0xe1, 0x42, 0xd5, 0x64, 0xf5, 0xa6, 0x9a, 0xac, 0x95, 0x6a, 0x52, 0xbd, 0xa9, 0x75, 0x6d,
	0x28, 0xf8, 0xc9, 0x80, 0xee, 0x05, 0x0f, 0xbc, 0x3e, 0x3b, 0x30, 0x0f, 0xd5, 0xec, 0xc0, 0xd6,
	0xd9, 0x5d, 0xcb, 0xda, 0x5d, 0x5a, 0x3e, 0x2a, 0xe5, 0xe6, 0x99, 0x1b, 0x51, 0xbd, 0xc1, 0x88,
	0x9a, 0x66, 0xc4, 0xcf, 0x06, 0x20, 0x3d, 0x94, 0x32, 0x0f, 0x8b, 0x0c, 0xe9, 0x41, 0xe5, 0x35,
	0x56, 0x76, 0xb0, 0x25, 0x2b, 0x0f, 0xbd, 0xa7, 0x89, 0x0d, 0x8b, 0x61, 0xd6, 0x0f, 0x04, 0x5b,
	0xd6, 0x96, 0xa2, 0x66, 0x3d, 0x2f, 0x13, 0x63, 0xe7, 0x0a, 0xab, 0xda, 0x8a, 0x76, 0x8a, 0xb1,
	0xf5, 0x9b, 0x01, 0xab, 0xe7, 0xf8, 0x3d, 0x9f, 0x59, 0x6e, 0x83, 0x22, 0x8f, 0x53, 0x3e, 0x09,
	0xf1, 0x75, 0xe6, 0x46, 0x65, 0x41, 0x3c, 0x3f, 0x3a, 0x77, 0x3b, 0x50, 0x19, 0xc4, 0xb1, 0x7c,
	0xef, 0x17, 0xcd, 0x0a, 0x03, 0x39, 0x2b, 0xcc, 0xd2, 0x84, 0x8a, 0xbe, 0xd4, 0x90, 0xe0, 0x13,
	0x14, 0x61, 0x1c, 0x0f, 0x7d, 0x53, 0x0b, 0xfd, 0x73, 0xe8, 0xe5, 0xce, 0xc9, 0xb8, 0xeb, 0xcd,
	0xcd, 0x28, 0x36, 0xb7, 0xff, 0x16, 0x7a, 0x08, 0xf3, 0xb2, 0xa2, 0xf7, 0x09, 0xeb, 0x3e, 0xd4,
	0x2f, 0x59, 0x24, 0x8e, 0x6f, 0xae, 0xd6, 0x43, 0x58, 0xd7, 0xe7, 0x3f, 0x75, 0xe9, 0x7d, 0xa8,
	0xf1, 0x4b, 0xe4, 0x18, 0xda, 0xd6, 0x26, 0x45, 0x5b, 0x70, 0xac, 0x0f, 0x06, 0xac, 0xbe, 0xf2,
	0xe9, 0xd4, 0x23, 0xce, 0x7b, 0x95, 0x89, 0x1e, 0x54, 0xd2, 0xec, 0x0a, 0xb6, 0x64, 0x25, 0xe6,
	0xa6, 0x84, 0xe0, 0xd0, 0x9d, 0xeb, 0x53, 0x69, 0x47, 0x11, 0xf9, 0xf3, 0xbd, 0x05, 0x75, 0x27,
	0xc8, 0x26, 0xf4, 0x96, 0x2d, 0x77, 0xbc, 0x4f, 0x38, 0x64, 0x82, 0xe9, 0xc8, 0xf1, 0x3c, 0x82,
	0x93, 0x44, 0xc1, 0x46, 0x50, 0x07, 0x82, 0x68, 0xfd, 0x08, 0xbd, 0xdc, 0x10, 0xe9, 0xc0, 0x26,
	0x1b, 0xa4, 0xdf, 0xe6, 0xfe, 0xd6, 0x08, 0x7e, 0xab, 0x05, 0x7d, 0x99, 0xff, 0x73, 0x88, 0x41,
	0xa6, 0x07, 0x95, 0x20, 0x99, 0xc8, 0xab, 0xd9, 0x12, 0x7d, 0x02, 0x6b, 0x94, 0x38, 0x61, 0xe2,
	0x84, 0x2e, 0x8b, 0xe3, 0x68, 0xea, 0x24, 0x53, 0x79, 0x75, 0x4f, 0x67, 0x9c, 0x39, 0xc9, 0xd4,
	0xfa, 0x06, 0xb6, 0x2e, 0x9c, 0x79, 0x80, 0x43, 0x7a, 0xe6, 0xb3, 0x27, 0x61, 0x9e, 0xd9, 0xf0,
	0x04, 0x9a, 0xb1, 0xe0, 0xa8, 0xc7, 0x6b, 0xb3, 0x08, 0x15, 0xa9, 0x67, 0x67, 0x62, 0x8f, 0xbf,
	0x84, 0xb6, 0x96, 0x0e, 0xd4, 0x05, 0x38, 0x7a, 0x71, 0x7e, 0x3a, 0xb4, 0x9f, 0x0f, 0xcf, 0xbf,
	0xee, 0x2d, 0xa1, 0x15, 0x68, 0xc9, 0xfd, 0xc9, 0x71, 0xcf, 0x40, 0xab, 0xd0, 0x3e, 0x3e, 0x19,
	0x1c, 0x5d, 0x0e, 0xbf, 0x1b, 0x5c, 0x9e, 0x1c, 0xf7, 0x96, 0x1f, 0xef, 0x03, 0xe4, 0x33, 0x0a,
	0x02, 0xa8, 0x5f, 0x9d, 0x5f, 0x0c, 0x86, 0xc7, 0xbd, 0x25, 0xd4, 0x84, 0x2a, 0x5f, 0x19, 0xa8,
	0x0d, 0x8d, 0x93, 0xef, 0x2f, 0xec, 0x21, 0x53, 0x38, 0xf8, 0xa5, 0x06, 0xd5, 0x0b, 0x67, 0x4e,
	0xd0, 0x00, 0x20, 0xaf, 0x79, 0x74, 0x47, 0xfd, 0x76, 0x94, 0x1e, 0xd4, 0xbe, 0x79, 0x9d, 0x21,
	0x9c, 0xb5, 0x96, 0xd0, 0x17, 0xd0, 0x90, 0x6f, 0x17, 0xda, 0xc8, 0x1f, 0xe9, 0x8f, 0x56, 0x6e,
	0x2a, 0xe4, 0xa3, 0x4d, 0x21, 0x57, 0x2a, 0xf3, 0xfe, 0x56, 0x99, 0x9c, 0x29, 0x1f, 0x16, 0xa3,
	0xd6, 0x11, 0x82, 0x02, 0xfa, 0xfd, 0xbb, 0xd7, 0xff, 0x72, 0x72, 0xcd, 0x03, 0x68, 0x1f, 0xb1,
	0xd1, 0x64, 0x26, 0x6e, 0x2e, 0x6a, 0xae, 0x17, 0xb3, 0x75, 0x12, 0xc4, 0x74, 0x6e, 0x2d, 0xa1,
	0xcf, 0xa1, 0xa9, 0x9a, 0x14, 0x5a, 0x24, 0xa2, 0x0c, 0x2d, 0x77, 0x32, 0xe1, 0xa5, 0xea, 0x8d,
	0xca, 0xcb, 0x52, 0x5f, 0xd5, 0x95, 0xf5, 0x16, 0x2a, 0x94, 0x15, 0xcc, 0x95, 0x72, 0xa9, 0xfe,
	0x94, 0x72, 0xb9, 0x1a, 0xac, 0x25, 0xf4, 0x15, 0x74, 0x8b, 0x28, 0x2d, 0xf9, 0xfa, 0x6f, 0x99,
	0xb1, 0x85, 0x48, 0xb6, 0x96, 0xd0, 0x31, 0xb4, 0xb5, 0x1f, 0x62, 0x24, 0x53, 0x79, 0xfd, 0xbf,
	0x5e, 0x85, 0x7b, 0xc1, 0xdf, 0xb3, 0xb5, 0xc4, 0x50, 0x96, 0xff, 0xf4, 0x2a, 0x94, 0x5d, 0xfb,
	0x5f, 0xee, 0x9b, 0xd7, 0x19, 0xea, 0x88, 0x71, 0x9d, 0x47, 0xfa, 0xd3, 0x3f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x4e, 0x42, 0x94, 0x42, 0xab, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PayrClient is the client API for Payr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PayrClient interface {
	CollectFee(ctx context.Context, in *CollectFeeRequest, opts ...grpc.CallOption) (*CollectFeeResponse, error)
	PlanFee(ctx context.Context, in *PlanFeeRequest, opts ...grpc.CallOption) (*CollectFeeResponse, error)
	NewOrder(ctx context.Context, in *NewOrderRequest, opts ...grpc.CallOption) (*NewOrderResponse, error)
	OrderStatus(ctx context.Context, in *TeamID, opts ...grpc.CallOption) (*OrderStatusResponse, error)
	CancelOrder(ctx context.Context, in *TeamID, opts ...grpc.CallOption) (*common.Empty, error)
	ListPlan(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*ListPlanResponse, error)
	ListSubs(ctx context.Context, in *ListSubsRequest, opts ...grpc.CallOption) (*ListSubsResponse, error)
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error)
	PaymentHistory(ctx context.Context, in *TeamID, opts ...grpc.CallOption) (*PaymentHistoryResponse, error)
	RequestCode(ctx context.Context, in *RequestCodeRequest, opts ...grpc.CallOption) (*RequestCodeResponse, error)
	ReportCode(ctx context.Context, in *ReportCodeRequest, opts ...grpc.CallOption) (*ReportCodeResponse, error)
}

type payrClient struct {
	cc *grpc.ClientConn
}

func NewPayrClient(cc *grpc.ClientConn) PayrClient {
	return &payrClient{cc}
}

func (c *payrClient) CollectFee(ctx context.Context, in *CollectFeeRequest, opts ...grpc.CallOption) (*CollectFeeResponse, error) {
	out := new(CollectFeeResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/CollectFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) PlanFee(ctx context.Context, in *PlanFeeRequest, opts ...grpc.CallOption) (*CollectFeeResponse, error) {
	out := new(CollectFeeResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/PlanFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) NewOrder(ctx context.Context, in *NewOrderRequest, opts ...grpc.CallOption) (*NewOrderResponse, error) {
	out := new(NewOrderResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/NewOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) OrderStatus(ctx context.Context, in *TeamID, opts ...grpc.CallOption) (*OrderStatusResponse, error) {
	out := new(OrderStatusResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/OrderStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) CancelOrder(ctx context.Context, in *TeamID, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/payr.Payr/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) ListPlan(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*ListPlanResponse, error) {
	out := new(ListPlanResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/ListPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) ListSubs(ctx context.Context, in *ListSubsRequest, opts ...grpc.CallOption) (*ListSubsResponse, error) {
	out := new(ListSubsResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/ListSubs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error) {
	out := new(WithdrawResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) PaymentHistory(ctx context.Context, in *TeamID, opts ...grpc.CallOption) (*PaymentHistoryResponse, error) {
	out := new(PaymentHistoryResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/PaymentHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) RequestCode(ctx context.Context, in *RequestCodeRequest, opts ...grpc.CallOption) (*RequestCodeResponse, error) {
	out := new(RequestCodeResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/RequestCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *payrClient) ReportCode(ctx context.Context, in *ReportCodeRequest, opts ...grpc.CallOption) (*ReportCodeResponse, error) {
	out := new(ReportCodeResponse)
	err := c.cc.Invoke(ctx, "/payr.Payr/ReportCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PayrServer is the server API for Payr service.
type PayrServer interface {
	CollectFee(context.Context, *CollectFeeRequest) (*CollectFeeResponse, error)
	PlanFee(context.Context, *PlanFeeRequest) (*CollectFeeResponse, error)
	NewOrder(context.Context, *NewOrderRequest) (*NewOrderResponse, error)
	OrderStatus(context.Context, *TeamID) (*OrderStatusResponse, error)
	CancelOrder(context.Context, *TeamID) (*common.Empty, error)
	ListPlan(context.Context, *common.Empty) (*ListPlanResponse, error)
	ListSubs(context.Context, *ListSubsRequest) (*ListSubsResponse, error)
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error)
	PaymentHistory(context.Context, *TeamID) (*PaymentHistoryResponse, error)
	RequestCode(context.Context, *RequestCodeRequest) (*RequestCodeResponse, error)
	ReportCode(context.Context, *ReportCodeRequest) (*ReportCodeResponse, error)
}

// UnimplementedPayrServer can be embedded to have forward compatible implementations.
type UnimplementedPayrServer struct {
}

func (*UnimplementedPayrServer) CollectFee(ctx context.Context, req *CollectFeeRequest) (*CollectFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CollectFee not implemented")
}
func (*UnimplementedPayrServer) PlanFee(ctx context.Context, req *PlanFeeRequest) (*CollectFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlanFee not implemented")
}
func (*UnimplementedPayrServer) NewOrder(ctx context.Context, req *NewOrderRequest) (*NewOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewOrder not implemented")
}
func (*UnimplementedPayrServer) OrderStatus(ctx context.Context, req *TeamID) (*OrderStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderStatus not implemented")
}
func (*UnimplementedPayrServer) CancelOrder(ctx context.Context, req *TeamID) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelOrder not implemented")
}
func (*UnimplementedPayrServer) ListPlan(ctx context.Context, req *common.Empty) (*ListPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPlan not implemented")
}
func (*UnimplementedPayrServer) ListSubs(ctx context.Context, req *ListSubsRequest) (*ListSubsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubs not implemented")
}
func (*UnimplementedPayrServer) Withdraw(ctx context.Context, req *WithdrawRequest) (*WithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdraw not implemented")
}
func (*UnimplementedPayrServer) PaymentHistory(ctx context.Context, req *TeamID) (*PaymentHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentHistory not implemented")
}
func (*UnimplementedPayrServer) RequestCode(ctx context.Context, req *RequestCodeRequest) (*RequestCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestCode not implemented")
}
func (*UnimplementedPayrServer) ReportCode(ctx context.Context, req *ReportCodeRequest) (*ReportCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportCode not implemented")
}

func RegisterPayrServer(s *grpc.Server, srv PayrServer) {
	s.RegisterService(&_Payr_serviceDesc, srv)
}

func _Payr_CollectFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).CollectFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/CollectFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).CollectFee(ctx, req.(*CollectFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_PlanFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlanFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).PlanFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/PlanFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).PlanFee(ctx, req.(*PlanFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_NewOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).NewOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/NewOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).NewOrder(ctx, req.(*NewOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_OrderStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).OrderStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/OrderStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).OrderStatus(ctx, req.(*TeamID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).CancelOrder(ctx, req.(*TeamID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_ListPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).ListPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/ListPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).ListPlan(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_ListSubs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSubsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).ListSubs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/ListSubs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).ListSubs(ctx, req.(*ListSubsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_PaymentHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).PaymentHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/PaymentHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).PaymentHistory(ctx, req.(*TeamID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_RequestCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).RequestCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/RequestCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).RequestCode(ctx, req.(*RequestCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Payr_ReportCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PayrServer).ReportCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payr.Payr/ReportCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PayrServer).ReportCode(ctx, req.(*ReportCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payr.Payr",
	HandlerType: (*PayrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CollectFee",
			Handler:    _Payr_CollectFee_Handler,
		},
		{
			MethodName: "PlanFee",
			Handler:    _Payr_PlanFee_Handler,
		},
		{
			MethodName: "NewOrder",
			Handler:    _Payr_NewOrder_Handler,
		},
		{
			MethodName: "OrderStatus",
			Handler:    _Payr_OrderStatus_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _Payr_CancelOrder_Handler,
		},
		{
			MethodName: "ListPlan",
			Handler:    _Payr_ListPlan_Handler,
		},
		{
			MethodName: "ListSubs",
			Handler:    _Payr_ListSubs_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Payr_Withdraw_Handler,
		},
		{
			MethodName: "PaymentHistory",
			Handler:    _Payr_PaymentHistory_Handler,
		},
		{
			MethodName: "RequestCode",
			Handler:    _Payr_RequestCode_Handler,
		},
		{
			MethodName: "ReportCode",
			Handler:    _Payr_ReportCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payr/v1/grpc/payr.proto",
}
