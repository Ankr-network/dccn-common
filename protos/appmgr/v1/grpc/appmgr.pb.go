// Code generated by protoc-gen-go. DO NOT EDIT.
// source: appmgr/v1/grpc/appmgr.proto

package appmgr

import (
	context "context"
	fmt "fmt"
	common "github.com/Ankr-network/dccn-common/protos/common"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NamespaceUsageRequest struct {
	NsId                 string   `protobuf:"bytes,1,opt,name=ns_id,json=nsId,proto3" json:"ns_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceUsageRequest) Reset()         { *m = NamespaceUsageRequest{} }
func (m *NamespaceUsageRequest) String() string { return proto.CompactTextString(m) }
func (*NamespaceUsageRequest) ProtoMessage()    {}
func (*NamespaceUsageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{0}
}

func (m *NamespaceUsageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceUsageRequest.Unmarshal(m, b)
}
func (m *NamespaceUsageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceUsageRequest.Marshal(b, m, deterministic)
}
func (m *NamespaceUsageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceUsageRequest.Merge(m, src)
}
func (m *NamespaceUsageRequest) XXX_Size() int {
	return xxx_messageInfo_NamespaceUsageRequest.Size(m)
}
func (m *NamespaceUsageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceUsageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceUsageRequest proto.InternalMessageInfo

func (m *NamespaceUsageRequest) GetNsId() string {
	if m != nil {
		return m.NsId
	}
	return ""
}

type NamespaceUsageResponse struct {
	NsCpuUsage           uint32   `protobuf:"varint,1,opt,name=ns_cpu_usage,json=nsCpuUsage,proto3" json:"ns_cpu_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceUsageResponse) Reset()         { *m = NamespaceUsageResponse{} }
func (m *NamespaceUsageResponse) String() string { return proto.CompactTextString(m) }
func (*NamespaceUsageResponse) ProtoMessage()    {}
func (*NamespaceUsageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{1}
}

func (m *NamespaceUsageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceUsageResponse.Unmarshal(m, b)
}
func (m *NamespaceUsageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceUsageResponse.Marshal(b, m, deterministic)
}
func (m *NamespaceUsageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceUsageResponse.Merge(m, src)
}
func (m *NamespaceUsageResponse) XXX_Size() int {
	return xxx_messageInfo_NamespaceUsageResponse.Size(m)
}
func (m *NamespaceUsageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceUsageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceUsageResponse proto.InternalMessageInfo

func (m *NamespaceUsageResponse) GetNsCpuUsage() uint32 {
	if m != nil {
		return m.NsCpuUsage
	}
	return 0
}

type NamespaceCountRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceCountRequest) Reset()         { *m = NamespaceCountRequest{} }
func (m *NamespaceCountRequest) String() string { return proto.CompactTextString(m) }
func (*NamespaceCountRequest) ProtoMessage()    {}
func (*NamespaceCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{2}
}

func (m *NamespaceCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceCountRequest.Unmarshal(m, b)
}
func (m *NamespaceCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceCountRequest.Marshal(b, m, deterministic)
}
func (m *NamespaceCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceCountRequest.Merge(m, src)
}
func (m *NamespaceCountRequest) XXX_Size() int {
	return xxx_messageInfo_NamespaceCountRequest.Size(m)
}
func (m *NamespaceCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceCountRequest proto.InternalMessageInfo

func (m *NamespaceCountRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type NamespaceCountResponse struct {
	Namespace            uint64   `protobuf:"varint,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	App                  uint64   `protobuf:"varint,2,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NamespaceCountResponse) Reset()         { *m = NamespaceCountResponse{} }
func (m *NamespaceCountResponse) String() string { return proto.CompactTextString(m) }
func (*NamespaceCountResponse) ProtoMessage()    {}
func (*NamespaceCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{3}
}

func (m *NamespaceCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceCountResponse.Unmarshal(m, b)
}
func (m *NamespaceCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceCountResponse.Marshal(b, m, deterministic)
}
func (m *NamespaceCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceCountResponse.Merge(m, src)
}
func (m *NamespaceCountResponse) XXX_Size() int {
	return xxx_messageInfo_NamespaceCountResponse.Size(m)
}
func (m *NamespaceCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceCountResponse proto.InternalMessageInfo

func (m *NamespaceCountResponse) GetNamespace() uint64 {
	if m != nil {
		return m.Namespace
	}
	return 0
}

func (m *NamespaceCountResponse) GetApp() uint64 {
	if m != nil {
		return m.App
	}
	return 0
}

// The dccn client request message containing the user's token
type CreateAppRequest struct {
	App                  *common.App `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateAppRequest) Reset()         { *m = CreateAppRequest{} }
func (m *CreateAppRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAppRequest) ProtoMessage()    {}
func (*CreateAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{4}
}

func (m *CreateAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAppRequest.Unmarshal(m, b)
}
func (m *CreateAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAppRequest.Marshal(b, m, deterministic)
}
func (m *CreateAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAppRequest.Merge(m, src)
}
func (m *CreateAppRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAppRequest.Size(m)
}
func (m *CreateAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAppRequest proto.InternalMessageInfo

func (m *CreateAppRequest) GetApp() *common.App {
	if m != nil {
		return m.App
	}
	return nil
}

type CreateAppResponse struct {
	AppId                string   `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAppResponse) Reset()         { *m = CreateAppResponse{} }
func (m *CreateAppResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAppResponse) ProtoMessage()    {}
func (*CreateAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{5}
}

func (m *CreateAppResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAppResponse.Unmarshal(m, b)
}
func (m *CreateAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAppResponse.Marshal(b, m, deterministic)
}
func (m *CreateAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAppResponse.Merge(m, src)
}
func (m *CreateAppResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAppResponse.Size(m)
}
func (m *CreateAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAppResponse proto.InternalMessageInfo

func (m *CreateAppResponse) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

type AppListResponse struct {
	AppReports           []*common.AppReport `protobuf:"bytes,1,rep,name=app_reports,json=appReports,proto3" json:"app_reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AppListResponse) Reset()         { *m = AppListResponse{} }
func (m *AppListResponse) String() string { return proto.CompactTextString(m) }
func (*AppListResponse) ProtoMessage()    {}
func (*AppListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{6}
}

func (m *AppListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppListResponse.Unmarshal(m, b)
}
func (m *AppListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppListResponse.Marshal(b, m, deterministic)
}
func (m *AppListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppListResponse.Merge(m, src)
}
func (m *AppListResponse) XXX_Size() int {
	return xxx_messageInfo_AppListResponse.Size(m)
}
func (m *AppListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppListResponse proto.InternalMessageInfo

func (m *AppListResponse) GetAppReports() []*common.AppReport {
	if m != nil {
		return m.AppReports
	}
	return nil
}

type AppDetailResponse struct {
	AppReport            *common.AppReport `protobuf:"bytes,1,opt,name=app_report,json=appReport,proto3" json:"app_report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppDetailResponse) Reset()         { *m = AppDetailResponse{} }
func (m *AppDetailResponse) String() string { return proto.CompactTextString(m) }
func (*AppDetailResponse) ProtoMessage()    {}
func (*AppDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{7}
}

func (m *AppDetailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppDetailResponse.Unmarshal(m, b)
}
func (m *AppDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppDetailResponse.Marshal(b, m, deterministic)
}
func (m *AppDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppDetailResponse.Merge(m, src)
}
func (m *AppDetailResponse) XXX_Size() int {
	return xxx_messageInfo_AppDetailResponse.Size(m)
}
func (m *AppDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppDetailResponse proto.InternalMessageInfo

func (m *AppDetailResponse) GetAppReport() *common.AppReport {
	if m != nil {
		return m.AppReport
	}
	return nil
}

type AppID struct {
	AppId                string   `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppID) Reset()         { *m = AppID{} }
func (m *AppID) String() string { return proto.CompactTextString(m) }
func (*AppID) ProtoMessage()    {}
func (*AppID) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{8}
}

func (m *AppID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppID.Unmarshal(m, b)
}
func (m *AppID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppID.Marshal(b, m, deterministic)
}
func (m *AppID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppID.Merge(m, src)
}
func (m *AppID) XXX_Size() int {
	return xxx_messageInfo_AppID.Size(m)
}
func (m *AppID) XXX_DiscardUnknown() {
	xxx_messageInfo_AppID.DiscardUnknown(m)
}

var xxx_messageInfo_AppID proto.InternalMessageInfo

func (m *AppID) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

type UpdateAppRequest struct {
	AppDeployment        *common.AppDeployment `protobuf:"bytes,1,opt,name=app_deployment,json=appDeployment,proto3" json:"app_deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateAppRequest) Reset()         { *m = UpdateAppRequest{} }
func (m *UpdateAppRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAppRequest) ProtoMessage()    {}
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{9}
}

func (m *UpdateAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAppRequest.Unmarshal(m, b)
}
func (m *UpdateAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAppRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAppRequest.Merge(m, src)
}
func (m *UpdateAppRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAppRequest.Size(m)
}
func (m *UpdateAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAppRequest proto.InternalMessageInfo

func (m *UpdateAppRequest) GetAppDeployment() *common.AppDeployment {
	if m != nil {
		return m.AppDeployment
	}
	return nil
}

type AppOverviewResponse struct {
	ClusterCount         uint32   `protobuf:"varint,1,opt,name=cluster_count,json=clusterCount,proto3" json:"cluster_count,omitempty"`
	NamespaceCount       uint32   `protobuf:"varint,2,opt,name=namespace_count,json=namespaceCount,proto3" json:"namespace_count,omitempty"`
	NetworkCount         uint32   `protobuf:"varint,3,opt,name=network_count,json=networkCount,proto3" json:"network_count,omitempty"`
	TotalAppCount        uint32   `protobuf:"varint,4,opt,name=total_app_count,json=totalAppCount,proto3" json:"total_app_count,omitempty"`
	CpuTotal             float32  `protobuf:"fixed32,5,opt,name=cpu_total,json=cpuTotal,proto3" json:"cpu_total,omitempty"`
	CpuUsage             float32  `protobuf:"fixed32,6,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemTotal             float32  `protobuf:"fixed32,7,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	MemUsage             float32  `protobuf:"fixed32,8,opt,name=mem_usage,json=memUsage,proto3" json:"mem_usage,omitempty"`
	StorageTotal         float32  `protobuf:"fixed32,9,opt,name=storage_total,json=storageTotal,proto3" json:"storage_total,omitempty"`
	StorageUsage         float32  `protobuf:"fixed32,10,opt,name=storage_usage,json=storageUsage,proto3" json:"storage_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppOverviewResponse) Reset()         { *m = AppOverviewResponse{} }
func (m *AppOverviewResponse) String() string { return proto.CompactTextString(m) }
func (*AppOverviewResponse) ProtoMessage()    {}
func (*AppOverviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{10}
}

func (m *AppOverviewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppOverviewResponse.Unmarshal(m, b)
}
func (m *AppOverviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppOverviewResponse.Marshal(b, m, deterministic)
}
func (m *AppOverviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppOverviewResponse.Merge(m, src)
}
func (m *AppOverviewResponse) XXX_Size() int {
	return xxx_messageInfo_AppOverviewResponse.Size(m)
}
func (m *AppOverviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppOverviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppOverviewResponse proto.InternalMessageInfo

func (m *AppOverviewResponse) GetClusterCount() uint32 {
	if m != nil {
		return m.ClusterCount
	}
	return 0
}

func (m *AppOverviewResponse) GetNamespaceCount() uint32 {
	if m != nil {
		return m.NamespaceCount
	}
	return 0
}

func (m *AppOverviewResponse) GetNetworkCount() uint32 {
	if m != nil {
		return m.NetworkCount
	}
	return 0
}

func (m *AppOverviewResponse) GetTotalAppCount() uint32 {
	if m != nil {
		return m.TotalAppCount
	}
	return 0
}

func (m *AppOverviewResponse) GetCpuTotal() float32 {
	if m != nil {
		return m.CpuTotal
	}
	return 0
}

func (m *AppOverviewResponse) GetCpuUsage() float32 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *AppOverviewResponse) GetMemTotal() float32 {
	if m != nil {
		return m.MemTotal
	}
	return 0
}

func (m *AppOverviewResponse) GetMemUsage() float32 {
	if m != nil {
		return m.MemUsage
	}
	return 0
}

func (m *AppOverviewResponse) GetStorageTotal() float32 {
	if m != nil {
		return m.StorageTotal
	}
	return 0
}

func (m *AppOverviewResponse) GetStorageUsage() float32 {
	if m != nil {
		return m.StorageUsage
	}
	return 0
}

type AppCountRequest struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ClusterId            string   `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppCountRequest) Reset()         { *m = AppCountRequest{} }
func (m *AppCountRequest) String() string { return proto.CompactTextString(m) }
func (*AppCountRequest) ProtoMessage()    {}
func (*AppCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{11}
}

func (m *AppCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppCountRequest.Unmarshal(m, b)
}
func (m *AppCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppCountRequest.Marshal(b, m, deterministic)
}
func (m *AppCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppCountRequest.Merge(m, src)
}
func (m *AppCountRequest) XXX_Size() int {
	return xxx_messageInfo_AppCountRequest.Size(m)
}
func (m *AppCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppCountRequest proto.InternalMessageInfo

func (m *AppCountRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AppCountRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type AppCountResponse struct {
	AppCount             uint32   `protobuf:"varint,1,opt,name=app_count,json=appCount,proto3" json:"app_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppCountResponse) Reset()         { *m = AppCountResponse{} }
func (m *AppCountResponse) String() string { return proto.CompactTextString(m) }
func (*AppCountResponse) ProtoMessage()    {}
func (*AppCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{12}
}

func (m *AppCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppCountResponse.Unmarshal(m, b)
}
func (m *AppCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppCountResponse.Marshal(b, m, deterministic)
}
func (m *AppCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppCountResponse.Merge(m, src)
}
func (m *AppCountResponse) XXX_Size() int {
	return xxx_messageInfo_AppCountResponse.Size(m)
}
func (m *AppCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppCountResponse proto.InternalMessageInfo

func (m *AppCountResponse) GetAppCount() uint32 {
	if m != nil {
		return m.AppCount
	}
	return 0
}

type UploadChartRequest struct {
	ChartRepo            string   `protobuf:"bytes,1,opt,name=chart_repo,json=chartRepo,proto3" json:"chart_repo,omitempty"`
	ChartVer             string   `protobuf:"bytes,2,opt,name=chart_ver,json=chartVer,proto3" json:"chart_ver,omitempty"`
	ChartName            string   `protobuf:"bytes,3,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`
	ChartFile            []byte   `protobuf:"bytes,4,opt,name=chart_file,json=chartFile,proto3" json:"chart_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadChartRequest) Reset()         { *m = UploadChartRequest{} }
func (m *UploadChartRequest) String() string { return proto.CompactTextString(m) }
func (*UploadChartRequest) ProtoMessage()    {}
func (*UploadChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{13}
}

func (m *UploadChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadChartRequest.Unmarshal(m, b)
}
func (m *UploadChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadChartRequest.Marshal(b, m, deterministic)
}
func (m *UploadChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadChartRequest.Merge(m, src)
}
func (m *UploadChartRequest) XXX_Size() int {
	return xxx_messageInfo_UploadChartRequest.Size(m)
}
func (m *UploadChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadChartRequest proto.InternalMessageInfo

func (m *UploadChartRequest) GetChartRepo() string {
	if m != nil {
		return m.ChartRepo
	}
	return ""
}

func (m *UploadChartRequest) GetChartVer() string {
	if m != nil {
		return m.ChartVer
	}
	return ""
}

func (m *UploadChartRequest) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

func (m *UploadChartRequest) GetChartFile() []byte {
	if m != nil {
		return m.ChartFile
	}
	return nil
}

type SaveAsChartRequest struct {
	ChartRepo            string   `protobuf:"bytes,1,opt,name=chart_repo,json=chartRepo,proto3" json:"chart_repo,omitempty"`
	ChartVer             string   `protobuf:"bytes,2,opt,name=chart_ver,json=chartVer,proto3" json:"chart_ver,omitempty"`
	ChartName            string   `protobuf:"bytes,3,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`
	SaveRepo             string   `protobuf:"bytes,4,opt,name=save_repo,json=saveRepo,proto3" json:"save_repo,omitempty"`
	SaveVer              string   `protobuf:"bytes,5,opt,name=save_ver,json=saveVer,proto3" json:"save_ver,omitempty"`
	SaveName             string   `protobuf:"bytes,6,opt,name=save_name,json=saveName,proto3" json:"save_name,omitempty"`
	ValuesYaml           []byte   `protobuf:"bytes,7,opt,name=values_yaml,json=valuesYaml,proto3" json:"values_yaml,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveAsChartRequest) Reset()         { *m = SaveAsChartRequest{} }
func (m *SaveAsChartRequest) String() string { return proto.CompactTextString(m) }
func (*SaveAsChartRequest) ProtoMessage()    {}
func (*SaveAsChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{14}
}

func (m *SaveAsChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveAsChartRequest.Unmarshal(m, b)
}
func (m *SaveAsChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveAsChartRequest.Marshal(b, m, deterministic)
}
func (m *SaveAsChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveAsChartRequest.Merge(m, src)
}
func (m *SaveAsChartRequest) XXX_Size() int {
	return xxx_messageInfo_SaveAsChartRequest.Size(m)
}
func (m *SaveAsChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveAsChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveAsChartRequest proto.InternalMessageInfo

func (m *SaveAsChartRequest) GetChartRepo() string {
	if m != nil {
		return m.ChartRepo
	}
	return ""
}

func (m *SaveAsChartRequest) GetChartVer() string {
	if m != nil {
		return m.ChartVer
	}
	return ""
}

func (m *SaveAsChartRequest) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

func (m *SaveAsChartRequest) GetSaveRepo() string {
	if m != nil {
		return m.SaveRepo
	}
	return ""
}

func (m *SaveAsChartRequest) GetSaveVer() string {
	if m != nil {
		return m.SaveVer
	}
	return ""
}

func (m *SaveAsChartRequest) GetSaveName() string {
	if m != nil {
		return m.SaveName
	}
	return ""
}

func (m *SaveAsChartRequest) GetValuesYaml() []byte {
	if m != nil {
		return m.ValuesYaml
	}
	return nil
}

type ChartListRequest struct {
	ChartRepo            string   `protobuf:"bytes,1,opt,name=chart_repo,json=chartRepo,proto3" json:"chart_repo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartListRequest) Reset()         { *m = ChartListRequest{} }
func (m *ChartListRequest) String() string { return proto.CompactTextString(m) }
func (*ChartListRequest) ProtoMessage()    {}
func (*ChartListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{15}
}

func (m *ChartListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartListRequest.Unmarshal(m, b)
}
func (m *ChartListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartListRequest.Marshal(b, m, deterministic)
}
func (m *ChartListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartListRequest.Merge(m, src)
}
func (m *ChartListRequest) XXX_Size() int {
	return xxx_messageInfo_ChartListRequest.Size(m)
}
func (m *ChartListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChartListRequest proto.InternalMessageInfo

func (m *ChartListRequest) GetChartRepo() string {
	if m != nil {
		return m.ChartRepo
	}
	return ""
}

type ChartListResponse struct {
	Charts               []*common.Chart `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ChartListResponse) Reset()         { *m = ChartListResponse{} }
func (m *ChartListResponse) String() string { return proto.CompactTextString(m) }
func (*ChartListResponse) ProtoMessage()    {}
func (*ChartListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{16}
}

func (m *ChartListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartListResponse.Unmarshal(m, b)
}
func (m *ChartListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartListResponse.Marshal(b, m, deterministic)
}
func (m *ChartListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartListResponse.Merge(m, src)
}
func (m *ChartListResponse) XXX_Size() int {
	return xxx_messageInfo_ChartListResponse.Size(m)
}
func (m *ChartListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChartListResponse proto.InternalMessageInfo

func (m *ChartListResponse) GetCharts() []*common.Chart {
	if m != nil {
		return m.Charts
	}
	return nil
}

type ChartDetailRequest struct {
	Chart                *common.Chart `protobuf:"bytes,1,opt,name=chart,proto3" json:"chart,omitempty"`
	ShowVersion          string        `protobuf:"bytes,2,opt,name=show_version,json=showVersion,proto3" json:"show_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChartDetailRequest) Reset()         { *m = ChartDetailRequest{} }
func (m *ChartDetailRequest) String() string { return proto.CompactTextString(m) }
func (*ChartDetailRequest) ProtoMessage()    {}
func (*ChartDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{17}
}

func (m *ChartDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDetailRequest.Unmarshal(m, b)
}
func (m *ChartDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDetailRequest.Marshal(b, m, deterministic)
}
func (m *ChartDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDetailRequest.Merge(m, src)
}
func (m *ChartDetailRequest) XXX_Size() int {
	return xxx_messageInfo_ChartDetailRequest.Size(m)
}
func (m *ChartDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDetailRequest proto.InternalMessageInfo

func (m *ChartDetailRequest) GetChart() *common.Chart {
	if m != nil {
		return m.Chart
	}
	return nil
}

func (m *ChartDetailRequest) GetShowVersion() string {
	if m != nil {
		return m.ShowVersion
	}
	return ""
}

type ChartDetailResponse struct {
	ChartName            string                       `protobuf:"bytes,1,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`
	ChartRepo            string                       `protobuf:"bytes,2,opt,name=chart_repo,json=chartRepo,proto3" json:"chart_repo,omitempty"`
	ChartDescription     string                       `protobuf:"bytes,3,opt,name=chart_description,json=chartDescription,proto3" json:"chart_description,omitempty"`
	ChartVersionDetails  []*common.ChartVersionDetail `protobuf:"bytes,4,rep,name=chart_version_details,json=chartVersionDetails,proto3" json:"chart_version_details,omitempty"`
	ReadmeMd             string                       `protobuf:"bytes,5,opt,name=readme_md,json=readmeMd,proto3" json:"readme_md,omitempty"`
	ValuesYaml           string                       `protobuf:"bytes,6,opt,name=values_yaml,json=valuesYaml,proto3" json:"values_yaml,omitempty"`
	CustomValues         []*common.CustomValue        `protobuf:"bytes,7,rep,name=custom_values,json=customValues,proto3" json:"custom_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ChartDetailResponse) Reset()         { *m = ChartDetailResponse{} }
func (m *ChartDetailResponse) String() string { return proto.CompactTextString(m) }
func (*ChartDetailResponse) ProtoMessage()    {}
func (*ChartDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{18}
}

func (m *ChartDetailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDetailResponse.Unmarshal(m, b)
}
func (m *ChartDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDetailResponse.Marshal(b, m, deterministic)
}
func (m *ChartDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDetailResponse.Merge(m, src)
}
func (m *ChartDetailResponse) XXX_Size() int {
	return xxx_messageInfo_ChartDetailResponse.Size(m)
}
func (m *ChartDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDetailResponse proto.InternalMessageInfo

func (m *ChartDetailResponse) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

func (m *ChartDetailResponse) GetChartRepo() string {
	if m != nil {
		return m.ChartRepo
	}
	return ""
}

func (m *ChartDetailResponse) GetChartDescription() string {
	if m != nil {
		return m.ChartDescription
	}
	return ""
}

func (m *ChartDetailResponse) GetChartVersionDetails() []*common.ChartVersionDetail {
	if m != nil {
		return m.ChartVersionDetails
	}
	return nil
}

func (m *ChartDetailResponse) GetReadmeMd() string {
	if m != nil {
		return m.ReadmeMd
	}
	return ""
}

func (m *ChartDetailResponse) GetValuesYaml() string {
	if m != nil {
		return m.ValuesYaml
	}
	return ""
}

func (m *ChartDetailResponse) GetCustomValues() []*common.CustomValue {
	if m != nil {
		return m.CustomValues
	}
	return nil
}

type DownloadChartRequest struct {
	ChartRepo            string   `protobuf:"bytes,1,opt,name=chart_repo,json=chartRepo,proto3" json:"chart_repo,omitempty"`
	ChartVer             string   `protobuf:"bytes,2,opt,name=chart_ver,json=chartVer,proto3" json:"chart_ver,omitempty"`
	ChartName            string   `protobuf:"bytes,3,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadChartRequest) Reset()         { *m = DownloadChartRequest{} }
func (m *DownloadChartRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadChartRequest) ProtoMessage()    {}
func (*DownloadChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{19}
}

func (m *DownloadChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadChartRequest.Unmarshal(m, b)
}
func (m *DownloadChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadChartRequest.Marshal(b, m, deterministic)
}
func (m *DownloadChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadChartRequest.Merge(m, src)
}
func (m *DownloadChartRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadChartRequest.Size(m)
}
func (m *DownloadChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadChartRequest proto.InternalMessageInfo

func (m *DownloadChartRequest) GetChartRepo() string {
	if m != nil {
		return m.ChartRepo
	}
	return ""
}

func (m *DownloadChartRequest) GetChartVer() string {
	if m != nil {
		return m.ChartVer
	}
	return ""
}

func (m *DownloadChartRequest) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

type DownloadChartResponse struct {
	ChartFile            []byte   `protobuf:"bytes,1,opt,name=chart_file,json=chartFile,proto3" json:"chart_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadChartResponse) Reset()         { *m = DownloadChartResponse{} }
func (m *DownloadChartResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadChartResponse) ProtoMessage()    {}
func (*DownloadChartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{20}
}

func (m *DownloadChartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadChartResponse.Unmarshal(m, b)
}
func (m *DownloadChartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadChartResponse.Marshal(b, m, deterministic)
}
func (m *DownloadChartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadChartResponse.Merge(m, src)
}
func (m *DownloadChartResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadChartResponse.Size(m)
}
func (m *DownloadChartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadChartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadChartResponse proto.InternalMessageInfo

func (m *DownloadChartResponse) GetChartFile() []byte {
	if m != nil {
		return m.ChartFile
	}
	return nil
}

type DeleteChartRequest struct {
	ChartRepo            string   `protobuf:"bytes,1,opt,name=chart_repo,json=chartRepo,proto3" json:"chart_repo,omitempty"`
	ChartVer             string   `protobuf:"bytes,2,opt,name=chart_ver,json=chartVer,proto3" json:"chart_ver,omitempty"`
	ChartName            string   `protobuf:"bytes,3,opt,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteChartRequest) Reset()         { *m = DeleteChartRequest{} }
func (m *DeleteChartRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteChartRequest) ProtoMessage()    {}
func (*DeleteChartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{21}
}

func (m *DeleteChartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteChartRequest.Unmarshal(m, b)
}
func (m *DeleteChartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteChartRequest.Marshal(b, m, deterministic)
}
func (m *DeleteChartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteChartRequest.Merge(m, src)
}
func (m *DeleteChartRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteChartRequest.Size(m)
}
func (m *DeleteChartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteChartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteChartRequest proto.InternalMessageInfo

func (m *DeleteChartRequest) GetChartRepo() string {
	if m != nil {
		return m.ChartRepo
	}
	return ""
}

func (m *DeleteChartRequest) GetChartVer() string {
	if m != nil {
		return m.ChartVer
	}
	return ""
}

func (m *DeleteChartRequest) GetChartName() string {
	if m != nil {
		return m.ChartName
	}
	return ""
}

type CreateNamespaceRequest struct {
	Namespace            *common.Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateNamespaceRequest) Reset()         { *m = CreateNamespaceRequest{} }
func (m *CreateNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceRequest) ProtoMessage()    {}
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{22}
}

func (m *CreateNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceRequest.Unmarshal(m, b)
}
func (m *CreateNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceRequest.Merge(m, src)
}
func (m *CreateNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceRequest.Size(m)
}
func (m *CreateNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceRequest proto.InternalMessageInfo

func (m *CreateNamespaceRequest) GetNamespace() *common.Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

type CreateNamespaceResponse struct {
	NsId                 string   `protobuf:"bytes,1,opt,name=ns_id,json=nsId,proto3" json:"ns_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNamespaceResponse) Reset()         { *m = CreateNamespaceResponse{} }
func (m *CreateNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNamespaceResponse) ProtoMessage()    {}
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{23}
}

func (m *CreateNamespaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNamespaceResponse.Unmarshal(m, b)
}
func (m *CreateNamespaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNamespaceResponse.Marshal(b, m, deterministic)
}
func (m *CreateNamespaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNamespaceResponse.Merge(m, src)
}
func (m *CreateNamespaceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNamespaceResponse.Size(m)
}
func (m *CreateNamespaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNamespaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNamespaceResponse proto.InternalMessageInfo

func (m *CreateNamespaceResponse) GetNsId() string {
	if m != nil {
		return m.NsId
	}
	return ""
}

type NamespaceListResponse struct {
	NamespaceReports     []*common.NamespaceReport `protobuf:"bytes,1,rep,name=namespace_reports,json=namespaceReports,proto3" json:"namespace_reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *NamespaceListResponse) Reset()         { *m = NamespaceListResponse{} }
func (m *NamespaceListResponse) String() string { return proto.CompactTextString(m) }
func (*NamespaceListResponse) ProtoMessage()    {}
func (*NamespaceListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{24}
}

func (m *NamespaceListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceListResponse.Unmarshal(m, b)
}
func (m *NamespaceListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceListResponse.Marshal(b, m, deterministic)
}
func (m *NamespaceListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceListResponse.Merge(m, src)
}
func (m *NamespaceListResponse) XXX_Size() int {
	return xxx_messageInfo_NamespaceListResponse.Size(m)
}
func (m *NamespaceListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceListResponse proto.InternalMessageInfo

func (m *NamespaceListResponse) GetNamespaceReports() []*common.NamespaceReport {
	if m != nil {
		return m.NamespaceReports
	}
	return nil
}

type UpdateNamespaceRequest struct {
	Namespace            *common.Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateNamespaceRequest) Reset()         { *m = UpdateNamespaceRequest{} }
func (m *UpdateNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNamespaceRequest) ProtoMessage()    {}
func (*UpdateNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{25}
}

func (m *UpdateNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNamespaceRequest.Unmarshal(m, b)
}
func (m *UpdateNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNamespaceRequest.Merge(m, src)
}
func (m *UpdateNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNamespaceRequest.Size(m)
}
func (m *UpdateNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNamespaceRequest proto.InternalMessageInfo

func (m *UpdateNamespaceRequest) GetNamespace() *common.Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

type DeleteNamespaceRequest struct {
	NsId                 string   `protobuf:"bytes,1,opt,name=ns_id,json=nsId,proto3" json:"ns_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNamespaceRequest) Reset()         { *m = DeleteNamespaceRequest{} }
func (m *DeleteNamespaceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNamespaceRequest) ProtoMessage()    {}
func (*DeleteNamespaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b7c3ca3eef8e484, []int{26}
}

func (m *DeleteNamespaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNamespaceRequest.Unmarshal(m, b)
}
func (m *DeleteNamespaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNamespaceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNamespaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNamespaceRequest.Merge(m, src)
}
func (m *DeleteNamespaceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNamespaceRequest.Size(m)
}
func (m *DeleteNamespaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNamespaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNamespaceRequest proto.InternalMessageInfo

func (m *DeleteNamespaceRequest) GetNsId() string {
	if m != nil {
		return m.NsId
	}
	return ""
}

func init() {
	proto.RegisterType((*NamespaceUsageRequest)(nil), "appmgr.NamespaceUsageRequest")
	proto.RegisterType((*NamespaceUsageResponse)(nil), "appmgr.NamespaceUsageResponse")
	proto.RegisterType((*NamespaceCountRequest)(nil), "appmgr.NamespaceCountRequest")
	proto.RegisterType((*NamespaceCountResponse)(nil), "appmgr.NamespaceCountResponse")
	proto.RegisterType((*CreateAppRequest)(nil), "appmgr.CreateAppRequest")
	proto.RegisterType((*CreateAppResponse)(nil), "appmgr.CreateAppResponse")
	proto.RegisterType((*AppListResponse)(nil), "appmgr.AppListResponse")
	proto.RegisterType((*AppDetailResponse)(nil), "appmgr.AppDetailResponse")
	proto.RegisterType((*AppID)(nil), "appmgr.AppID")
	proto.RegisterType((*UpdateAppRequest)(nil), "appmgr.UpdateAppRequest")
	proto.RegisterType((*AppOverviewResponse)(nil), "appmgr.AppOverviewResponse")
	proto.RegisterType((*AppCountRequest)(nil), "appmgr.AppCountRequest")
	proto.RegisterType((*AppCountResponse)(nil), "appmgr.AppCountResponse")
	proto.RegisterType((*UploadChartRequest)(nil), "appmgr.UploadChartRequest")
	proto.RegisterType((*SaveAsChartRequest)(nil), "appmgr.SaveAsChartRequest")
	proto.RegisterType((*ChartListRequest)(nil), "appmgr.ChartListRequest")
	proto.RegisterType((*ChartListResponse)(nil), "appmgr.ChartListResponse")
	proto.RegisterType((*ChartDetailRequest)(nil), "appmgr.ChartDetailRequest")
	proto.RegisterType((*ChartDetailResponse)(nil), "appmgr.ChartDetailResponse")
	proto.RegisterType((*DownloadChartRequest)(nil), "appmgr.DownloadChartRequest")
	proto.RegisterType((*DownloadChartResponse)(nil), "appmgr.DownloadChartResponse")
	proto.RegisterType((*DeleteChartRequest)(nil), "appmgr.DeleteChartRequest")
	proto.RegisterType((*CreateNamespaceRequest)(nil), "appmgr.CreateNamespaceRequest")
	proto.RegisterType((*CreateNamespaceResponse)(nil), "appmgr.CreateNamespaceResponse")
	proto.RegisterType((*NamespaceListResponse)(nil), "appmgr.NamespaceListResponse")
	proto.RegisterType((*UpdateNamespaceRequest)(nil), "appmgr.UpdateNamespaceRequest")
	proto.RegisterType((*DeleteNamespaceRequest)(nil), "appmgr.DeleteNamespaceRequest")
}

func init() { proto.RegisterFile("appmgr/v1/grpc/appmgr.proto", fileDescriptor_8b7c3ca3eef8e484) }

var fileDescriptor_8b7c3ca3eef8e484 = []byte{
	// 1278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xdd, 0x6e, 0x1b, 0xc5,
	0x17, 0xb7, 0xdd, 0xd8, 0xf1, 0x1e, 0xdb, 0xb5, 0x3d, 0xfe, 0x37, 0x71, 0xec, 0x26, 0xcd, 0x7f,
	0x22, 0x41, 0xa0, 0x90, 0x90, 0x20, 0x5a, 0x40, 0x08, 0xe2, 0xc6, 0x45, 0x31, 0xa5, 0x2d, 0x98,
	0x24, 0x12, 0x57, 0xd6, 0x76, 0x77, 0x70, 0x2d, 0xbc, 0xbb, 0xd3, 0x9d, 0xb5, 0xa3, 0xbc, 0x04,
	0x4f, 0xc7, 0x13, 0x20, 0x71, 0xcb, 0x33, 0xa0, 0xf9, 0xd8, 0x9d, 0xfd, 0x94, 0x7a, 0x81, 0x72,
	0x65, 0xcf, 0x39, 0xbf, 0xf3, 0x7d, 0xe6, 0xcc, 0x59, 0x18, 0x9a, 0x94, 0x3a, 0x73, 0xff, 0x78,
	0x7d, 0x72, 0x3c, 0xf7, 0xa9, 0x75, 0x2c, 0x8f, 0x47, 0xd4, 0xf7, 0x02, 0x0f, 0xd5, 0xe4, 0x69,
	0xd0, 0xb3, 0x3c, 0xc7, 0xf1, 0xdc, 0x63, 0xf9, 0x23, 0x99, 0xf8, 0x13, 0x78, 0xf0, 0xca, 0x74,
	0x08, 0xa3, 0xa6, 0x45, 0xae, 0x98, 0x39, 0x27, 0x53, 0xf2, 0x6e, 0x45, 0x58, 0x80, 0x7a, 0x50,
	0x75, 0xd9, 0x6c, 0x61, 0xf7, 0xcb, 0xfb, 0xe5, 0x43, 0x63, 0xba, 0xe1, 0xb2, 0x89, 0x8d, 0xbf,
	0x86, 0xad, 0x34, 0x9a, 0x51, 0xcf, 0x65, 0x04, 0xed, 0x43, 0xd3, 0x65, 0x33, 0x8b, 0xae, 0x66,
	0x2b, 0x4e, 0x17, 0x52, 0xad, 0x29, 0xb8, 0xec, 0x9c, 0xae, 0x04, 0x12, 0x3f, 0x89, 0x59, 0x3a,
	0xf7, 0x56, 0x6e, 0x10, 0x5a, 0xda, 0x05, 0xb0, 0x96, 0x2b, 0x16, 0x10, 0x5f, 0x9b, 0x33, 0x14,
	0x65, 0x62, 0xe3, 0x8b, 0x98, 0x4d, 0x25, 0xa7, 0x6c, 0x3e, 0x04, 0xc3, 0x0d, 0x39, 0x42, 0x6e,
	0x63, 0xaa, 0x09, 0xa8, 0x03, 0xf7, 0x4c, 0x4a, 0xfb, 0x15, 0x41, 0xe7, 0x7f, 0xf1, 0x53, 0xe8,
	0x9c, 0xfb, 0xc4, 0x0c, 0xc8, 0x88, 0xd2, 0xd0, 0xf8, 0x81, 0x44, 0x71, 0xe9, 0xc6, 0x69, 0xf7,
	0x28, 0x9e, 0x9b, 0x23, 0x0e, 0x13, 0x82, 0x1f, 0x43, 0x37, 0x26, 0xa8, 0xac, 0x3f, 0x00, 0x9e,
	0x58, 0xed, 0x72, 0xd5, 0xa4, 0x74, 0x62, 0xe3, 0x17, 0xd0, 0x1e, 0x51, 0xfa, 0xe3, 0x82, 0x69,
	0x3f, 0xbf, 0x84, 0x06, 0x47, 0xfa, 0x84, 0x7a, 0x7e, 0xc0, 0xfa, 0xe5, 0xfd, 0x7b, 0x87, 0x8d,
	0xd3, 0xed, 0xac, 0x2d, 0xc1, 0x9f, 0x82, 0x19, 0xfe, 0x65, 0xf8, 0x05, 0x74, 0x47, 0x94, 0x8e,
	0x49, 0x60, 0x2e, 0x96, 0x91, 0xba, 0x27, 0x00, 0x5a, 0x9d, 0xf2, 0xbc, 0x50, 0x9b, 0x11, 0x69,
	0xc3, 0x7b, 0x50, 0x1d, 0x51, 0x3a, 0x19, 0x17, 0x79, 0x7e, 0x0d, 0x9d, 0x2b, 0x6a, 0x27, 0xd3,
	0xf3, 0x0c, 0xee, 0x73, 0xa8, 0x4d, 0xe8, 0xd2, 0xbb, 0x75, 0x88, 0x1b, 0xda, 0x1b, 0x66, 0xec,
	0x8d, 0x23, 0xc8, 0xb4, 0x65, 0xc6, 0x8f, 0xf8, 0x9f, 0x0a, 0xf4, 0x46, 0x94, 0xbe, 0x5e, 0x13,
	0x7f, 0xbd, 0x20, 0x37, 0x51, 0x1c, 0x07, 0xd0, 0x0a, 0xeb, 0x6e, 0xf1, 0xba, 0xaa, 0x9e, 0x69,
	0x2a, 0xa2, 0xa8, 0x35, 0xfa, 0x10, 0xda, 0x51, 0x49, 0x15, 0xac, 0x22, 0x60, 0xf7, 0xdd, 0x44,
	0x53, 0x70, 0x6d, 0x2e, 0x09, 0x6e, 0x3c, 0xff, 0x77, 0x05, 0xbb, 0x27, 0xb5, 0x29, 0xa2, 0x04,
	0x7d, 0x00, 0xed, 0xc0, 0x0b, 0xcc, 0xe5, 0x8c, 0x07, 0x25, 0x61, 0x1b, 0x02, 0xd6, 0x12, 0xe4,
	0x11, 0xa5, 0x12, 0x37, 0x04, 0x83, 0xb7, 0xb2, 0x20, 0xf6, 0xab, 0xfb, 0xe5, 0xc3, 0xca, 0xb4,
	0x6e, 0xd1, 0xd5, 0x25, 0x3f, 0x87, 0x4c, 0xd9, 0xe7, 0xb5, 0x88, 0x29, 0xba, 0x9c, 0x33, 0x1d,
	0xe2, 0x28, 0xc9, 0x4d, 0xc9, 0x74, 0x88, 0x13, 0x49, 0x72, 0xa6, 0x94, 0xac, 0x47, 0x4c, 0x29,
	0x79, 0x00, 0x2d, 0x16, 0x78, 0xbe, 0x39, 0x27, 0x4a, 0xda, 0x10, 0x80, 0xa6, 0x22, 0x4a, 0x0d,
	0x31, 0x90, 0xd4, 0x02, 0x09, 0x90, 0xbc, 0x69, 0x13, 0xd1, 0x82, 0x89, 0x3b, 0xb6, 0x0d, 0x9b,
	0x01, 0x31, 0x1d, 0x5d, 0xf3, 0x1a, 0x3f, 0x4e, 0xec, 0xd4, 0xe5, 0xab, 0xa4, 0x2f, 0xdf, 0x31,
	0x74, 0xb4, 0x2a, 0x55, 0xb7, 0x21, 0x18, 0x3a, 0x7d, 0xb2, 0x66, 0x75, 0x53, 0x81, 0xf0, 0x1f,
	0x65, 0x40, 0x57, 0x74, 0xe9, 0x99, 0xf6, 0xf9, 0x5b, 0xd3, 0x4f, 0xdc, 0x71, 0x7e, 0x16, 0x5d,
	0x1b, 0xdd, 0x71, 0x89, 0xa0, 0x9e, 0x48, 0xa9, 0x60, 0xaf, 0x89, 0xaf, 0x9c, 0xa8, 0x0b, 0xc2,
	0x35, 0xf1, 0xb5, 0x2c, 0xaf, 0xb8, 0x28, 0x6b, 0x28, 0xcb, 0xe7, 0x82, 0x66, 0xff, 0xb6, 0x58,
	0x12, 0x51, 0xce, 0xa6, 0x62, 0x7f, 0xbf, 0x58, 0x12, 0xfc, 0x77, 0x19, 0xd0, 0x2f, 0xe6, 0x9a,
	0x8c, 0xd8, 0x5d, 0x39, 0x34, 0x04, 0x83, 0x99, 0x6b, 0x22, 0x35, 0x6f, 0x48, 0x59, 0x4e, 0x10,
	0x8a, 0x77, 0x40, 0xfc, 0x17, 0x7a, 0xab, 0x82, 0xb7, 0xc9, 0xcf, 0x5c, 0x6d, 0x28, 0x27, 0xb4,
	0xd6, 0xb4, 0x9c, 0x50, 0xfa, 0x08, 0x1a, 0x6b, 0x73, 0xb9, 0x22, 0x6c, 0x76, 0x6b, 0x3a, 0xb2,
	0xb3, 0x9a, 0x53, 0x90, 0xa4, 0x5f, 0x4d, 0x67, 0x89, 0x4f, 0xa0, 0x23, 0x02, 0x94, 0x93, 0xe7,
	0x7d, 0x82, 0xc4, 0x67, 0xd0, 0x8d, 0x89, 0xa8, 0xea, 0x3e, 0x86, 0x9a, 0x40, 0x84, 0x73, 0xaa,
	0x97, 0xbc, 0xe9, 0x32, 0x89, 0x0a, 0x82, 0xdf, 0x00, 0x12, 0x84, 0x70, 0x42, 0x49, 0xb3, 0x1f,
	0x41, 0x55, 0xf0, 0xd5, 0xac, 0xc8, 0xd5, 0x20, 0x11, 0xe8, 0xff, 0xd0, 0x64, 0x6f, 0xbd, 0x1b,
	0x9e, 0x0e, 0xb6, 0xf0, 0x5c, 0x95, 0xea, 0x06, 0xa7, 0x5d, 0x4b, 0x12, 0xfe, 0xb3, 0x02, 0xbd,
	0x84, 0x11, 0xe5, 0x68, 0xb2, 0x0a, 0xe5, 0xc2, 0xb6, 0x10, 0xb1, 0x57, 0xd2, 0x05, 0x7e, 0x0c,
	0x5d, 0xc9, 0xb6, 0x09, 0xb3, 0xfc, 0x05, 0x0d, 0xb8, 0x75, 0x59, 0xca, 0x8e, 0x25, 0xad, 0x45,
	0x74, 0x74, 0x09, 0x0f, 0xa2, 0x6e, 0xe0, 0x3e, 0xcd, 0x6c, 0xe1, 0x0a, 0xeb, 0x6f, 0x88, 0x14,
	0xed, 0xe7, 0x04, 0xa8, 0xbc, 0x57, 0x3e, 0xf7, 0xac, 0x0c, 0x8d, 0xf1, 0x7a, 0xfb, 0xc4, 0xb4,
	0x1d, 0x32, 0x73, 0x6c, 0xd5, 0x0b, 0x75, 0x49, 0x78, 0x69, 0xa7, 0xeb, 0x2d, 0xdb, 0x21, 0x56,
	0x6f, 0xf4, 0x2d, 0xb4, 0xac, 0x15, 0x0b, 0x3c, 0x67, 0x26, 0x89, 0xfd, 0x4d, 0xe1, 0xcb, 0x4e,
	0xca, 0x17, 0x01, 0xb9, 0xe6, 0x88, 0x69, 0xd3, 0xd2, 0x07, 0x86, 0xdf, 0xc1, 0xff, 0xc6, 0xde,
	0x8d, 0x7b, 0x87, 0x37, 0x95, 0x6f, 0x00, 0x29, 0x93, 0xe9, 0x52, 0x8a, 0x2b, 0x5c, 0x4e, 0x5f,
	0x61, 0x0f, 0xd0, 0x98, 0x2c, 0x49, 0x40, 0xee, 0xca, 0xd1, 0xd7, 0xb0, 0x25, 0xdf, 0xfb, 0x68,
	0xf1, 0x08, 0x8d, 0x7e, 0x91, 0x5e, 0x39, 0x32, 0x4f, 0xaf, 0x16, 0xd1, 0x48, 0x7c, 0x04, 0xdb,
	0x19, 0x85, 0x2a, 0xf6, 0xdc, 0x3d, 0xcb, 0x8a, 0xed, 0x4a, 0x89, 0xdb, 0xf9, 0x03, 0x74, 0xf5,
	0x73, 0x98, 0x5c, 0x28, 0x76, 0x8b, 0xfc, 0x90, 0x8b, 0x40, 0xc7, 0x4d, 0x12, 0x18, 0x8f, 0x52,
	0xbe, 0xf7, 0xff, 0x55, 0x94, 0x9f, 0xc2, 0x96, 0xac, 0x53, 0x46, 0x61, 0x5e, 0x90, 0xa7, 0x7f,
	0x01, 0xd4, 0x46, 0x94, 0xbe, 0x9c, 0xfb, 0xe8, 0x19, 0x18, 0xd1, 0x82, 0x85, 0xfa, 0x47, 0x6a,
	0x7d, 0x4d, 0x2f, 0x6b, 0x83, 0x9d, 0x1c, 0x8e, 0x4c, 0x0c, 0x2e, 0xa1, 0xaf, 0x60, 0x53, 0x2d,
	0x5e, 0x28, 0x35, 0x71, 0x9e, 0x3b, 0x34, 0xb8, 0x1d, 0x6c, 0x87, 0xc2, 0xa9, 0xf5, 0x0c, 0x97,
	0xd0, 0x53, 0x30, 0xa2, 0x35, 0x0b, 0xb5, 0x62, 0xb8, 0xc9, 0x58, 0xdb, 0xcc, 0x2c, 0x62, 0xb8,
	0x84, 0x4e, 0xc0, 0x38, 0x37, 0x5d, 0x8b, 0xf0, 0xcd, 0x21, 0x2d, 0x98, 0xe7, 0x04, 0x2e, 0xa1,
	0xcf, 0xa0, 0xfe, 0xd3, 0xca, 0x9f, 0x93, 0xf7, 0x97, 0xf8, 0x06, 0x8c, 0x68, 0x2f, 0xd3, 0xc9,
	0x49, 0xaf, 0x6a, 0x45, 0xd2, 0x23, 0x68, 0xc4, 0x96, 0xaf, 0xfc, 0xd4, 0x0c, 0x63, 0x7e, 0xa4,
	0xd7, 0x34, 0x5c, 0x42, 0x67, 0xd0, 0x88, 0x3d, 0xe9, 0x68, 0xa0, 0x5d, 0x48, 0x4f, 0x8f, 0x22,
	0x27, 0xce, 0xa0, 0x11, 0x7b, 0x83, 0xb5, 0x86, 0xec, 0xc3, 0x5c, 0xa4, 0x81, 0x77, 0x48, 0xf8,
	0x56, 0xc5, 0x3a, 0x24, 0xf5, 0xe2, 0xc5, 0x3a, 0x24, 0xfd, 0xb0, 0xe1, 0x12, 0xba, 0x80, 0x46,
	0xec, 0x21, 0xd1, 0x5e, 0x64, 0x9f, 0x30, 0x9d, 0x91, 0x9c, 0x97, 0x07, 0x97, 0xd0, 0x2b, 0x68,
	0x25, 0x26, 0x19, 0x7a, 0x18, 0xe2, 0xf3, 0x66, 0xea, 0x60, 0xb7, 0x80, 0x1b, 0xcf, 0x70, 0x6c,
	0xc2, 0x69, 0xcf, 0xb2, 0x63, 0xaf, 0x28, 0x3f, 0x97, 0xd0, 0x4e, 0x4d, 0x18, 0xb4, 0x97, 0xbc,
	0x2d, 0xe9, 0x4b, 0x39, 0x78, 0x54, 0xc8, 0x8f, 0xfc, 0x7a, 0x0e, 0xad, 0xc4, 0x1c, 0xca, 0x6f,
	0x9f, 0x28, 0xbc, 0xdc, 0x99, 0x25, 0x12, 0xdf, 0x4e, 0x4d, 0x1a, 0xed, 0x5c, 0xfe, 0x08, 0x2a,
	0x0a, 0xf3, 0x02, 0xda, 0xa9, 0x11, 0xa3, 0x35, 0xe5, 0xcf, 0x9e, 0x22, 0x4d, 0xdf, 0x41, 0x3d,
	0x5a, 0xf7, 0xe3, 0xa3, 0x21, 0xbe, 0x36, 0x0f, 0xfa, 0x59, 0x46, 0x14, 0xd4, 0xcf, 0x70, 0x3f,
	0xf9, 0x5d, 0x8a, 0xb2, 0x79, 0x48, 0x28, 0xdb, 0x2b, 0x62, 0xe7, 0xaa, 0x94, 0x1f, 0x05, 0x59,
	0x95, 0xf1, 0x8f, 0xf4, 0x1c, 0x95, 0x89, 0xaf, 0x72, 0x5c, 0x7a, 0x53, 0x13, 0x51, 0x7f, 0xfe,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x13, 0x15, 0xa4, 0x22, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppMgrClient is the client API for AppMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppMgrClient interface {
	// Sends request to start a app and list app
	CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*CreateAppResponse, error)
	AppList(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*AppListResponse, error)
	AppDetail(ctx context.Context, in *AppID, opts ...grpc.CallOption) (*AppDetailResponse, error)
	CancelApp(ctx context.Context, in *AppID, opts ...grpc.CallOption) (*common.Empty, error)
	PurgeApp(ctx context.Context, in *AppID, opts ...grpc.CallOption) (*common.Empty, error)
	UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*common.Empty, error)
	AppOverview(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*AppOverviewResponse, error)
	UploadChart(ctx context.Context, in *UploadChartRequest, opts ...grpc.CallOption) (*common.Empty, error)
	SaveAsChart(ctx context.Context, in *SaveAsChartRequest, opts ...grpc.CallOption) (*common.Empty, error)
	ChartList(ctx context.Context, in *ChartListRequest, opts ...grpc.CallOption) (*ChartListResponse, error)
	ChartDetail(ctx context.Context, in *ChartDetailRequest, opts ...grpc.CallOption) (*ChartDetailResponse, error)
	DownloadChart(ctx context.Context, in *DownloadChartRequest, opts ...grpc.CallOption) (*DownloadChartResponse, error)
	DeleteChart(ctx context.Context, in *DeleteChartRequest, opts ...grpc.CallOption) (*common.Empty, error)
	CreateNamespace(ctx context.Context, in *CreateNamespaceRequest, opts ...grpc.CallOption) (*CreateNamespaceResponse, error)
	NamespaceList(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*NamespaceListResponse, error)
	UpdateNamespace(ctx context.Context, in *UpdateNamespaceRequest, opts ...grpc.CallOption) (*common.Empty, error)
	DeleteNamespace(ctx context.Context, in *DeleteNamespaceRequest, opts ...grpc.CallOption) (*common.Empty, error)
	AppCount(ctx context.Context, in *AppCountRequest, opts ...grpc.CallOption) (*AppCountResponse, error)
	NamespaceCount(ctx context.Context, in *NamespaceCountRequest, opts ...grpc.CallOption) (*NamespaceCountResponse, error)
	NamespaceUsage(ctx context.Context, in *NamespaceUsageRequest, opts ...grpc.CallOption) (*NamespaceUsageResponse, error)
}

type appMgrClient struct {
	cc *grpc.ClientConn
}

func NewAppMgrClient(cc *grpc.ClientConn) AppMgrClient {
	return &appMgrClient{cc}
}

func (c *appMgrClient) CreateApp(ctx context.Context, in *CreateAppRequest, opts ...grpc.CallOption) (*CreateAppResponse, error) {
	out := new(CreateAppResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/CreateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) AppList(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*AppListResponse, error) {
	out := new(AppListResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/AppList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) AppDetail(ctx context.Context, in *AppID, opts ...grpc.CallOption) (*AppDetailResponse, error) {
	out := new(AppDetailResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/AppDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) CancelApp(ctx context.Context, in *AppID, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/CancelApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) PurgeApp(ctx context.Context, in *AppID, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/PurgeApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/UpdateApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) AppOverview(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*AppOverviewResponse, error) {
	out := new(AppOverviewResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/AppOverview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) UploadChart(ctx context.Context, in *UploadChartRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/UploadChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) SaveAsChart(ctx context.Context, in *SaveAsChartRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/SaveAsChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) ChartList(ctx context.Context, in *ChartListRequest, opts ...grpc.CallOption) (*ChartListResponse, error) {
	out := new(ChartListResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/ChartList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) ChartDetail(ctx context.Context, in *ChartDetailRequest, opts ...grpc.CallOption) (*ChartDetailResponse, error) {
	out := new(ChartDetailResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/ChartDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) DownloadChart(ctx context.Context, in *DownloadChartRequest, opts ...grpc.CallOption) (*DownloadChartResponse, error) {
	out := new(DownloadChartResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/DownloadChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) DeleteChart(ctx context.Context, in *DeleteChartRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/DeleteChart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) CreateNamespace(ctx context.Context, in *CreateNamespaceRequest, opts ...grpc.CallOption) (*CreateNamespaceResponse, error) {
	out := new(CreateNamespaceResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/CreateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) NamespaceList(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*NamespaceListResponse, error) {
	out := new(NamespaceListResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/NamespaceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) UpdateNamespace(ctx context.Context, in *UpdateNamespaceRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/UpdateNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) DeleteNamespace(ctx context.Context, in *DeleteNamespaceRequest, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/DeleteNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) AppCount(ctx context.Context, in *AppCountRequest, opts ...grpc.CallOption) (*AppCountResponse, error) {
	out := new(AppCountResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/AppCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) NamespaceCount(ctx context.Context, in *NamespaceCountRequest, opts ...grpc.CallOption) (*NamespaceCountResponse, error) {
	out := new(NamespaceCountResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/NamespaceCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appMgrClient) NamespaceUsage(ctx context.Context, in *NamespaceUsageRequest, opts ...grpc.CallOption) (*NamespaceUsageResponse, error) {
	out := new(NamespaceUsageResponse)
	err := c.cc.Invoke(ctx, "/appmgr.AppMgr/NamespaceUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppMgrServer is the server API for AppMgr service.
type AppMgrServer interface {
	// Sends request to start a app and list app
	CreateApp(context.Context, *CreateAppRequest) (*CreateAppResponse, error)
	AppList(context.Context, *common.Empty) (*AppListResponse, error)
	AppDetail(context.Context, *AppID) (*AppDetailResponse, error)
	CancelApp(context.Context, *AppID) (*common.Empty, error)
	PurgeApp(context.Context, *AppID) (*common.Empty, error)
	UpdateApp(context.Context, *UpdateAppRequest) (*common.Empty, error)
	AppOverview(context.Context, *common.Empty) (*AppOverviewResponse, error)
	UploadChart(context.Context, *UploadChartRequest) (*common.Empty, error)
	SaveAsChart(context.Context, *SaveAsChartRequest) (*common.Empty, error)
	ChartList(context.Context, *ChartListRequest) (*ChartListResponse, error)
	ChartDetail(context.Context, *ChartDetailRequest) (*ChartDetailResponse, error)
	DownloadChart(context.Context, *DownloadChartRequest) (*DownloadChartResponse, error)
	DeleteChart(context.Context, *DeleteChartRequest) (*common.Empty, error)
	CreateNamespace(context.Context, *CreateNamespaceRequest) (*CreateNamespaceResponse, error)
	NamespaceList(context.Context, *common.Empty) (*NamespaceListResponse, error)
	UpdateNamespace(context.Context, *UpdateNamespaceRequest) (*common.Empty, error)
	DeleteNamespace(context.Context, *DeleteNamespaceRequest) (*common.Empty, error)
	AppCount(context.Context, *AppCountRequest) (*AppCountResponse, error)
	NamespaceCount(context.Context, *NamespaceCountRequest) (*NamespaceCountResponse, error)
	NamespaceUsage(context.Context, *NamespaceUsageRequest) (*NamespaceUsageResponse, error)
}

// UnimplementedAppMgrServer can be embedded to have forward compatible implementations.
type UnimplementedAppMgrServer struct {
}

func (*UnimplementedAppMgrServer) CreateApp(ctx context.Context, req *CreateAppRequest) (*CreateAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApp not implemented")
}
func (*UnimplementedAppMgrServer) AppList(ctx context.Context, req *common.Empty) (*AppListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppList not implemented")
}
func (*UnimplementedAppMgrServer) AppDetail(ctx context.Context, req *AppID) (*AppDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppDetail not implemented")
}
func (*UnimplementedAppMgrServer) CancelApp(ctx context.Context, req *AppID) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelApp not implemented")
}
func (*UnimplementedAppMgrServer) PurgeApp(ctx context.Context, req *AppID) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurgeApp not implemented")
}
func (*UnimplementedAppMgrServer) UpdateApp(ctx context.Context, req *UpdateAppRequest) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApp not implemented")
}
func (*UnimplementedAppMgrServer) AppOverview(ctx context.Context, req *common.Empty) (*AppOverviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppOverview not implemented")
}
func (*UnimplementedAppMgrServer) UploadChart(ctx context.Context, req *UploadChartRequest) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadChart not implemented")
}
func (*UnimplementedAppMgrServer) SaveAsChart(ctx context.Context, req *SaveAsChartRequest) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveAsChart not implemented")
}
func (*UnimplementedAppMgrServer) ChartList(ctx context.Context, req *ChartListRequest) (*ChartListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChartList not implemented")
}
func (*UnimplementedAppMgrServer) ChartDetail(ctx context.Context, req *ChartDetailRequest) (*ChartDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChartDetail not implemented")
}
func (*UnimplementedAppMgrServer) DownloadChart(ctx context.Context, req *DownloadChartRequest) (*DownloadChartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadChart not implemented")
}
func (*UnimplementedAppMgrServer) DeleteChart(ctx context.Context, req *DeleteChartRequest) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChart not implemented")
}
func (*UnimplementedAppMgrServer) CreateNamespace(ctx context.Context, req *CreateNamespaceRequest) (*CreateNamespaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNamespace not implemented")
}
func (*UnimplementedAppMgrServer) NamespaceList(ctx context.Context, req *common.Empty) (*NamespaceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NamespaceList not implemented")
}
func (*UnimplementedAppMgrServer) UpdateNamespace(ctx context.Context, req *UpdateNamespaceRequest) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNamespace not implemented")
}
func (*UnimplementedAppMgrServer) DeleteNamespace(ctx context.Context, req *DeleteNamespaceRequest) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNamespace not implemented")
}
func (*UnimplementedAppMgrServer) AppCount(ctx context.Context, req *AppCountRequest) (*AppCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppCount not implemented")
}
func (*UnimplementedAppMgrServer) NamespaceCount(ctx context.Context, req *NamespaceCountRequest) (*NamespaceCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NamespaceCount not implemented")
}
func (*UnimplementedAppMgrServer) NamespaceUsage(ctx context.Context, req *NamespaceUsageRequest) (*NamespaceUsageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NamespaceUsage not implemented")
}

func RegisterAppMgrServer(s *grpc.Server, srv AppMgrServer) {
	s.RegisterService(&_AppMgr_serviceDesc, srv)
}

func _AppMgr_CreateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).CreateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/CreateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).CreateApp(ctx, req.(*CreateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_AppList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).AppList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/AppList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).AppList(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_AppDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).AppDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/AppDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).AppDetail(ctx, req.(*AppID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_CancelApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).CancelApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/CancelApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).CancelApp(ctx, req.(*AppID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_PurgeApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).PurgeApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/PurgeApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).PurgeApp(ctx, req.(*AppID))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_UpdateApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).UpdateApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/UpdateApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).UpdateApp(ctx, req.(*UpdateAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_AppOverview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).AppOverview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/AppOverview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).AppOverview(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_UploadChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).UploadChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/UploadChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).UploadChart(ctx, req.(*UploadChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_SaveAsChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveAsChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).SaveAsChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/SaveAsChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).SaveAsChart(ctx, req.(*SaveAsChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_ChartList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChartListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).ChartList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/ChartList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).ChartList(ctx, req.(*ChartListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_ChartDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChartDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).ChartDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/ChartDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).ChartDetail(ctx, req.(*ChartDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_DownloadChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).DownloadChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/DownloadChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).DownloadChart(ctx, req.(*DownloadChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_DeleteChart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).DeleteChart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/DeleteChart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).DeleteChart(ctx, req.(*DeleteChartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_CreateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).CreateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/CreateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).CreateNamespace(ctx, req.(*CreateNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_NamespaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).NamespaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/NamespaceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).NamespaceList(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_UpdateNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).UpdateNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/UpdateNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).UpdateNamespace(ctx, req.(*UpdateNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_DeleteNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).DeleteNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/DeleteNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).DeleteNamespace(ctx, req.(*DeleteNamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_AppCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).AppCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/AppCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).AppCount(ctx, req.(*AppCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_NamespaceCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamespaceCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).NamespaceCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/NamespaceCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).NamespaceCount(ctx, req.(*NamespaceCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppMgr_NamespaceUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamespaceUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppMgrServer).NamespaceUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appmgr.AppMgr/NamespaceUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppMgrServer).NamespaceUsage(ctx, req.(*NamespaceUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appmgr.AppMgr",
	HandlerType: (*AppMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApp",
			Handler:    _AppMgr_CreateApp_Handler,
		},
		{
			MethodName: "AppList",
			Handler:    _AppMgr_AppList_Handler,
		},
		{
			MethodName: "AppDetail",
			Handler:    _AppMgr_AppDetail_Handler,
		},
		{
			MethodName: "CancelApp",
			Handler:    _AppMgr_CancelApp_Handler,
		},
		{
			MethodName: "PurgeApp",
			Handler:    _AppMgr_PurgeApp_Handler,
		},
		{
			MethodName: "UpdateApp",
			Handler:    _AppMgr_UpdateApp_Handler,
		},
		{
			MethodName: "AppOverview",
			Handler:    _AppMgr_AppOverview_Handler,
		},
		{
			MethodName: "UploadChart",
			Handler:    _AppMgr_UploadChart_Handler,
		},
		{
			MethodName: "SaveAsChart",
			Handler:    _AppMgr_SaveAsChart_Handler,
		},
		{
			MethodName: "ChartList",
			Handler:    _AppMgr_ChartList_Handler,
		},
		{
			MethodName: "ChartDetail",
			Handler:    _AppMgr_ChartDetail_Handler,
		},
		{
			MethodName: "DownloadChart",
			Handler:    _AppMgr_DownloadChart_Handler,
		},
		{
			MethodName: "DeleteChart",
			Handler:    _AppMgr_DeleteChart_Handler,
		},
		{
			MethodName: "CreateNamespace",
			Handler:    _AppMgr_CreateNamespace_Handler,
		},
		{
			MethodName: "NamespaceList",
			Handler:    _AppMgr_NamespaceList_Handler,
		},
		{
			MethodName: "UpdateNamespace",
			Handler:    _AppMgr_UpdateNamespace_Handler,
		},
		{
			MethodName: "DeleteNamespace",
			Handler:    _AppMgr_DeleteNamespace_Handler,
		},
		{
			MethodName: "AppCount",
			Handler:    _AppMgr_AppCount_Handler,
		},
		{
			MethodName: "NamespaceCount",
			Handler:    _AppMgr_NamespaceCount_Handler,
		},
		{
			MethodName: "NamespaceUsage",
			Handler:    _AppMgr_NamespaceUsage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "appmgr/v1/grpc/appmgr.proto",
}
