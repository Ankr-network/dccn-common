// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payr/v1/payr.proto

package gwpayr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PaymentStatus int32

const (
	PaymentStatus_CONFIRMING PaymentStatus = 0
	PaymentStatus_CONFIRMED  PaymentStatus = 1
	PaymentStatus_FAILED     PaymentStatus = 2
)

var PaymentStatus_name = map[int32]string{
	0: "CONFIRMING",
	1: "CONFIRMED",
	2: "FAILED",
}

var PaymentStatus_value = map[string]int32{
	"CONFIRMING": 0,
	"CONFIRMED":  1,
	"FAILED":     2,
}

func (x PaymentStatus) String() string {
	return proto.EnumName(PaymentStatus_name, int32(x))
}

func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b0c0d16023c4b7d8, []int{0}
}

type Payment struct {
	ID                   string               `protobuf:"bytes,1,opt,name=iD,proto3" json:"iD,omitempty"`
	PaymentType          string               `protobuf:"bytes,2,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	PaymentPurpose       string               `protobuf:"bytes,3,opt,name=payment_purpose,json=paymentPurpose,proto3" json:"payment_purpose,omitempty"`
	CurrencyType         string               `protobuf:"bytes,4,opt,name=currency_type,json=currencyType,proto3" json:"currency_type,omitempty"`
	Amount               string               `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	UID                  string               `protobuf:"bytes,6,opt,name=uID,proto3" json:"uID,omitempty"`
	Status               PaymentStatus        `protobuf:"varint,7,opt,name=status,proto3,enum=gwpayr.PaymentStatus" json:"status,omitempty"`
	TargetAddress        string               `protobuf:"bytes,8,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	TransactionHash      string               `protobuf:"bytes,9,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ErrorMessage         string               `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0c0d16023c4b7d8, []int{0}
}

func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (m *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(m, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Payment) GetPaymentType() string {
	if m != nil {
		return m.PaymentType
	}
	return ""
}

func (m *Payment) GetPaymentPurpose() string {
	if m != nil {
		return m.PaymentPurpose
	}
	return ""
}

func (m *Payment) GetCurrencyType() string {
	if m != nil {
		return m.CurrencyType
	}
	return ""
}

func (m *Payment) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Payment) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *Payment) GetStatus() PaymentStatus {
	if m != nil {
		return m.Status
	}
	return PaymentStatus_CONFIRMING
}

func (m *Payment) GetTargetAddress() string {
	if m != nil {
		return m.TargetAddress
	}
	return ""
}

func (m *Payment) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *Payment) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Payment) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type CreatePaymentRequest struct {
	Payment              *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePaymentRequest) Reset()         { *m = CreatePaymentRequest{} }
func (m *CreatePaymentRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePaymentRequest) ProtoMessage()    {}
func (*CreatePaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0c0d16023c4b7d8, []int{1}
}

func (m *CreatePaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePaymentRequest.Unmarshal(m, b)
}
func (m *CreatePaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePaymentRequest.Marshal(b, m, deterministic)
}
func (m *CreatePaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePaymentRequest.Merge(m, src)
}
func (m *CreatePaymentRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePaymentRequest.Size(m)
}
func (m *CreatePaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePaymentRequest proto.InternalMessageInfo

func (m *CreatePaymentRequest) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

type ListPaymentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPaymentsRequest) Reset()         { *m = ListPaymentsRequest{} }
func (m *ListPaymentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPaymentsRequest) ProtoMessage()    {}
func (*ListPaymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0c0d16023c4b7d8, []int{2}
}

func (m *ListPaymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPaymentsRequest.Unmarshal(m, b)
}
func (m *ListPaymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPaymentsRequest.Marshal(b, m, deterministic)
}
func (m *ListPaymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPaymentsRequest.Merge(m, src)
}
func (m *ListPaymentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPaymentsRequest.Size(m)
}
func (m *ListPaymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPaymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPaymentsRequest proto.InternalMessageInfo

type ListPaymentsResponse struct {
	Payments             []*Payment `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListPaymentsResponse) Reset()         { *m = ListPaymentsResponse{} }
func (m *ListPaymentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPaymentsResponse) ProtoMessage()    {}
func (*ListPaymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0c0d16023c4b7d8, []int{3}
}

func (m *ListPaymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPaymentsResponse.Unmarshal(m, b)
}
func (m *ListPaymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPaymentsResponse.Marshal(b, m, deterministic)
}
func (m *ListPaymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPaymentsResponse.Merge(m, src)
}
func (m *ListPaymentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPaymentsResponse.Size(m)
}
func (m *ListPaymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPaymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPaymentsResponse proto.InternalMessageInfo

func (m *ListPaymentsResponse) GetPayments() []*Payment {
	if m != nil {
		return m.Payments
	}
	return nil
}

func init() {
	proto.RegisterEnum("gwpayr.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
	proto.RegisterType((*Payment)(nil), "gwpayr.Payment")
	proto.RegisterType((*CreatePaymentRequest)(nil), "gwpayr.CreatePaymentRequest")
	proto.RegisterType((*ListPaymentsRequest)(nil), "gwpayr.ListPaymentsRequest")
	proto.RegisterType((*ListPaymentsResponse)(nil), "gwpayr.ListPaymentsResponse")
}

func init() { proto.RegisterFile("payr/v1/payr.proto", fileDescriptor_b0c0d16023c4b7d8) }

var fileDescriptor_b0c0d16023c4b7d8 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x49, 0x0b, 0xe9, 0x7a, 0xfa, 0x2f, 0x9c, 0x6d, 0x28, 0x74, 0x95, 0xe8, 0x82, 0x10,
	0x1d, 0x88, 0x44, 0x2b, 0x77, 0xe3, 0xaa, 0x6a, 0x37, 0xa8, 0xb4, 0x8d, 0x2a, 0xec, 0xbe, 0x72,
	0x5b, 0xd3, 0x46, 0x6a, 0x13, 0x63, 0x3b, 0x43, 0xb9, 0xe5, 0x15, 0xb8, 0xe0, 0xc1, 0x10, 0x6f,
	0xc0, 0x83, 0xa0, 0xd8, 0x0e, 0x5a, 0xab, 0x5e, 0x25, 0xfe, 0x7d, 0x9f, 0xcf, 0xf1, 0xf9, 0x0e,
	0x20, 0x23, 0x19, 0x0f, 0xee, 0xcf, 0x83, 0xfc, 0xeb, 0x33, 0x9e, 0xc8, 0x04, 0xed, 0xe5, 0xf7,
	0xfc, 0xd4, 0x7e, 0xb1, 0x4c, 0x92, 0xe5, 0x9a, 0x06, 0x8a, 0xce, 0xd2, 0xaf, 0x81, 0x8c, 0x36,
	0x54, 0x48, 0xb2, 0x61, 0xda, 0xd8, 0xee, 0x18, 0x03, 0x61, 0x51, 0x40, 0xe2, 0x38, 0x91, 0x44,
	0x46, 0x49, 0x2c, 0xb4, 0xea, 0xfd, 0x2a, 0x43, 0x65, 0x42, 0xb2, 0x0d, 0x8d, 0x25, 0x36, 0xa1,
	0x14, 0x8d, 0x5c, 0xab, 0x6b, 0xf5, 0xaa, 0x61, 0x29, 0x1a, 0xe1, 0x29, 0xd4, 0x99, 0x96, 0xa6,
	0x32, 0x63, 0xd4, 0x2d, 0x29, 0xa5, 0x66, 0xd8, 0x5d, 0xc6, 0x28, 0xbe, 0x86, 0x56, 0x61, 0x61,
	0x29, 0x67, 0x89, 0xa0, 0x6e, 0x59, 0xb9, 0x9a, 0x06, 0x4f, 0x34, 0xc5, 0x97, 0xd0, 0x98, 0xa7,
	0x9c, 0xd3, 0x78, 0x9e, 0xe9, 0x62, 0x8f, 0x95, 0xad, 0x5e, 0x40, 0x55, 0xed, 0x19, 0xd8, 0x64,
	0x93, 0xa4, 0xb1, 0x74, 0x9f, 0x28, 0xd5, 0x9c, 0xd0, 0x81, 0x72, 0x3a, 0x1e, 0xb9, 0xb6, 0x82,
	0xf9, 0x2f, 0xbe, 0x03, 0x5b, 0x48, 0x22, 0x53, 0xe1, 0x56, 0xba, 0x56, 0xaf, 0xd9, 0x3f, 0xf6,
	0x75, 0x1c, 0xbe, 0x99, 0xe5, 0x8b, 0x12, 0x43, 0x63, 0xc2, 0x57, 0xd0, 0x94, 0x84, 0x2f, 0xa9,
	0x9c, 0x92, 0xc5, 0x82, 0x53, 0x21, 0xdc, 0x03, 0x55, 0xab, 0xa1, 0xe9, 0x40, 0x43, 0x3c, 0x03,
	0x47, 0x72, 0x12, 0x0b, 0x32, 0xcf, 0x23, 0x9a, 0xae, 0x88, 0x58, 0xb9, 0x55, 0x65, 0x6c, 0x3d,
	0xe0, 0x9f, 0x88, 0x58, 0xe1, 0x07, 0xa8, 0xcd, 0x39, 0x25, 0x92, 0x4e, 0xf3, 0xbc, 0x5d, 0xe8,
	0x5a, 0xbd, 0x5a, 0xbf, 0xed, 0xeb, 0xac, 0xfd, 0x62, 0x19, 0xfe, 0x5d, 0xb1, 0x8c, 0x10, 0xb4,
	0x3d, 0x07, 0x79, 0x18, 0x94, 0xf3, 0x84, 0x4f, 0x37, 0x54, 0x08, 0xb2, 0xa4, 0x6e, 0x4d, 0x87,
	0xa1, 0xe0, 0x8d, 0x66, 0xde, 0x00, 0x8e, 0x86, 0xea, 0x8a, 0x19, 0x29, 0xa4, 0xdf, 0x52, 0x2a,
	0x24, 0x9e, 0x41, 0xc5, 0x64, 0xab, 0x56, 0x55, 0xeb, 0xb7, 0x76, 0x66, 0x0f, 0x0b, 0xdd, 0x3b,
	0x86, 0xc3, 0xeb, 0x48, 0x48, 0xc3, 0x85, 0xa9, 0xe0, 0x0d, 0xe1, 0x68, 0x1b, 0x0b, 0x96, 0xc4,
	0x82, 0xe2, 0x5b, 0x38, 0x30, 0x37, 0x85, 0x6b, 0x75, 0xcb, 0xfb, 0x4a, 0xff, 0x37, 0xbc, 0xb9,
	0x80, 0xc6, 0x56, 0xd6, 0xd8, 0x04, 0x18, 0x7e, 0xbe, 0xbd, 0x1a, 0x87, 0x37, 0xe3, 0xdb, 0x8f,
	0xce, 0x23, 0x6c, 0x40, 0xd5, 0x9c, 0x2f, 0x47, 0x8e, 0x85, 0x00, 0xf6, 0xd5, 0x60, 0x7c, 0x7d,
	0x39, 0x72, 0x4a, 0xfd, 0x3f, 0x16, 0xc0, 0x24, 0x9d, 0xad, 0xa3, 0xf9, 0x84, 0x64, 0x1c, 0x09,
	0x34, 0xb6, 0x26, 0xc5, 0x4e, 0xd1, 0x76, 0x5f, 0x00, 0xed, 0xdd, 0x47, 0x79, 0xa7, 0x3f, 0x7e,
	0xff, 0xfd, 0x59, 0x3a, 0xf1, 0x9c, 0xe0, 0xfe, 0x9c, 0xac, 0xd9, 0x8a, 0x04, 0xe6, 0x95, 0x17,
	0x45, 0x12, 0xb8, 0x80, 0xfa, 0xc3, 0x91, 0xf1, 0xa4, 0xa8, 0xb1, 0x27, 0x9f, 0x76, 0x67, 0xbf,
	0xa8, 0x53, 0xf2, 0x9e, 0xab, 0x6e, 0x87, 0xf8, 0x74, 0xb7, 0x9b, 0x98, 0xd9, 0x6a, 0xef, 0xef,
	0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x00, 0xe0, 0x7e, 0xb0, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublicPayrClient is the client API for PublicPayr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicPayrClient interface {
	CreatePayment(ctx context.Context, in *CreatePaymentRequest, opts ...grpc.CallOption) (*Payment, error)
	ListPayments(ctx context.Context, in *ListPaymentsRequest, opts ...grpc.CallOption) (*ListPaymentsResponse, error)
}

type publicPayrClient struct {
	cc *grpc.ClientConn
}

func NewPublicPayrClient(cc *grpc.ClientConn) PublicPayrClient {
	return &publicPayrClient{cc}
}

func (c *publicPayrClient) CreatePayment(ctx context.Context, in *CreatePaymentRequest, opts ...grpc.CallOption) (*Payment, error) {
	out := new(Payment)
	err := c.cc.Invoke(ctx, "/gwpayr.PublicPayr/CreatePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicPayrClient) ListPayments(ctx context.Context, in *ListPaymentsRequest, opts ...grpc.CallOption) (*ListPaymentsResponse, error) {
	out := new(ListPaymentsResponse)
	err := c.cc.Invoke(ctx, "/gwpayr.PublicPayr/ListPayments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicPayrServer is the server API for PublicPayr service.
type PublicPayrServer interface {
	CreatePayment(context.Context, *CreatePaymentRequest) (*Payment, error)
	ListPayments(context.Context, *ListPaymentsRequest) (*ListPaymentsResponse, error)
}

// UnimplementedPublicPayrServer can be embedded to have forward compatible implementations.
type UnimplementedPublicPayrServer struct {
}

func (*UnimplementedPublicPayrServer) CreatePayment(ctx context.Context, req *CreatePaymentRequest) (*Payment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePayment not implemented")
}
func (*UnimplementedPublicPayrServer) ListPayments(ctx context.Context, req *ListPaymentsRequest) (*ListPaymentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPayments not implemented")
}

func RegisterPublicPayrServer(s *grpc.Server, srv PublicPayrServer) {
	s.RegisterService(&_PublicPayr_serviceDesc, srv)
}

func _PublicPayr_CreatePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicPayrServer).CreatePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gwpayr.PublicPayr/CreatePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicPayrServer).CreatePayment(ctx, req.(*CreatePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicPayr_ListPayments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPaymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicPayrServer).ListPayments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gwpayr.PublicPayr/ListPayments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicPayrServer).ListPayments(ctx, req.(*ListPaymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicPayr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gwpayr.PublicPayr",
	HandlerType: (*PublicPayrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePayment",
			Handler:    _PublicPayr_CreatePayment_Handler,
		},
		{
			MethodName: "ListPayments",
			Handler:    _PublicPayr_ListPayments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payr/v1/payr.proto",
}
