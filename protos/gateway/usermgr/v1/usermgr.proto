syntax = "proto3";
import "google/api/annotations.proto";
import "common/common.proto";
import "google/protobuf/timestamp.proto";
package gwusermgr;

// TODO: supports filter
service UserMgr {
    // Register Create a new user
    rpc Register(RegisterRequest) returns (RegisterResponse) {
        option (google.api.http) = {
            post: "/signup"
            body: "*"
    };
    }
    // Login login
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/login"
            body: "*"
    };
    }
    // Logout need verify permission , disable RefreshToken , access_token still work for 2 hours.
    rpc Logout(RefreshToken) returns (common.proto.Empty) {
        option (google.api.http) = {
            post: "/logout"
            body: "*"
    };
    }
    // RefreshToken reset token last access token
    rpc RefreshSession(RefreshToken) returns (AuthenticationResult) {
        option (google.api.http) = {
            post: "/refresh"
            body: "*"
    };
    }

    rpc ConfirmRegistration(ConfirmRegistrationRequest) returns (ConfirmResponse) {
        option (google.api.http) = {
            post: "/confirm_registration"
            body: "*"
    };
    }

    rpc ForgotPassword(ForgotPasswordRequest) returns (common.proto.Empty) {
        option (google.api.http) = {
            post: "/forgot_password"
            body: "*"
    };
    }

    rpc ConfirmPassword(ConfirmPasswordRequest) returns (ConfirmResponse) {
        option (google.api.http) = {
            post: "/confirm_password"
            body: "*"
    };
    }

    rpc ChangePassword(ChangePasswordRequest) returns (common.proto.Empty) {
        option (google.api.http) = {
            post: "/change_password"
            body: "*"
    };
    }

    rpc UpdateAttributes(UpdateAttributesRequest) returns (User) {
        option (google.api.http) = {
            post: "/update_attribute"
            body: "*"
    };
    }

    rpc ChangeEmail(ChangeEmailRequest) returns (common.proto.Empty) {
        option (google.api.http) = {
            post: "/change_email"
            body: "*"
    };
    }

    rpc VerifyAccessToken(common.proto.Empty) returns (common.proto.Empty){
    }

    rpc ConfirmEmail(ConfirmEmailRequest) returns (ConfirmResponse){
        option (google.api.http) = {
            post: "/confirm_email"
            body: "*"
    };
    }
    rpc DepositHistory (common.proto.Empty) returns (DepositHistoryResponse){
        option (google.api.http).get = "/deposit/history";
    }
    rpc SearchDeposit (SearchDepositRequest) returns (DepositHistoryResponse){
        option (google.api.http).get = "/deposit/search";
    }
    rpc UserDetail (common.proto.Empty) returns (User){
        option (google.api.http).get = "/user/detail";
    }

    rpc ApplyBecomeClusterProvider(ClusterProviderApplyRequest) returns (common.proto.Empty) {
        option (google.api.http) = { 
            post: "/user/applyprovider"
            body: "*"
        };
    }

    // mobile app api
    rpc PhoneVerify(PhoneVerifyRequest) returns (common.proto.Empty) {
        option (google.api.http) = {
            post: "/phone_verify"
            body: "*"
        };
    }
    rpc PhoneVerifyCheck(PhoneVerifyCheckRequest) returns (common.proto.Empty) {
        option (google.api.http) = {
            post: "/phone_verify_check"
            body: "*"
        };
    }

    rpc PhoneRegister(PhoneRegisterRequest) returns (common.proto.Empty){
        option (google.api.http) = {
            post: "/phone_signup"
            body: "*"
        };
    }
    rpc PhoneLogin(PhoneLoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/phone_login"
            body: "*"
        };
    }
    rpc PhoneResetPassword(PhoneResetPasswordRequest) returns (common.proto.Empty){
        option (google.api.http) = {
            post: "/phone_reset_password"
            body: "*"
        };
    }
    rpc PhoneChange(PhoneChangeRequest) returns (common.proto.Empty) {
        option (google.api.http) = {
            post: "/phone_change"
            body: "*"
        };
    }
    rpc CreateAddress (GenerateAddressRequest) returns (GenerateAddressResponse){
        option (google.api.http) = {
            post: "/create_address"
            body: "*"
    };
    }
}

message PhoneRegisterRequest {
    string name = 1;
    string phone = 2;
    string password = 3;
    string code = 4;
}

message PhoneVerifyRequest {
    string phone = 1;
}

message PhoneVerifyCheckRequest {
    string phone = 1;
    string code = 2;
}

message PhoneResetPasswordRequest {
    string phone = 1;
    string code = 2;
    string new_password = 3;
} 

enum MFAType {
    TOTP = 0;
}

message PhoneLoginRequest {
    string phone = 1;
    string password = 2;
    MFAType mfa_type = 3;
    string code = 4;
}

message PhoneChangeRequest {
    string new_phone = 1;
    string code = 2;
}

//message UserCountResponse {
//    uint64 user = 1;
//}
 // cluster provider status
enum ClusterProviderStatus {
     NOT_PROVIDER = 0;
     PENDING = 1;  // waiting for passing
     PROVIDER = 2; //
}


message ClusterProviderApplyRequest{
      string name = 1;
      string email = 2;
      string phone = 3;
      string job_title = 4;
      string company = 5;
      string country = 6;
      string city = 7;
      int32 time_zone = 8;
}

message SearchDepositRequest {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
}

message GenerateAddressRequest {
    string type = 1;
    string purpose = 2;
}

message GenerateAddressResponse {
    string typeaddress = 1;
    string purposeaddress = 2;
}
message DepositHistoryResponse {
    repeated common.proto.Deposit deposits = 1;
}

message RegisterResponse{
    string message = 1;
}

message User {
    // uuid
    string id = 1;
    // email user's email, unique.
    string email = 2;
    UserStatus status = 3;
    UserAttributes attributes = 4;
    string phone = 5;
}

enum UserStatus {
    CONFIRMING = 0; // default while new user
    CONFIRMED = 1;
    DEACTIVATED = 2;
}

message UserAttribute {
    string key = 1;
    string value = 2;
}

message UserAttributes {
    // name of a user
    string name = 1;
    // public key of tendermint wallet
    string pub_key = 2;
    uint64 creation_date = 3; //app creation date
    uint64 last_modified_date = 4; //app creation date
    repeated UserAttribute extra_fields = 5; // extra field
    ClusterProviderStatus cluster_provider_status = 6; // 0 not provider 2 is provider
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
  string token = 4;
  string invitation_code = 5;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    AuthenticationResult authentication_result = 1;
    User user = 2;
}

message AuthenticationResult {
    uint64 expiration = 1;
    uint64 issued_at = 2;
    string access_token = 3;
    string refresh_token = 4;
}

message RefreshToken {
    string refresh_token = 1;
}

message ConfirmRegistrationRequest {
    string code = 3;
}

message ForgotPasswordRequest {
    string email = 1;
    string token = 2;
}

message ConfirmPasswordRequest {
    string new_password = 3;
    string code = 4;
}

message ChangePasswordRequest {
    string old_password = 1;
    string new_password = 2;
}

message ChangeEmailRequest {
    string new_email = 1;
}

message UpdateAttributesRequest {
    repeated UserAttribute user_attributes = 1;
}

message ConfirmEmailRequest {
  string code = 3;
}

message ConfirmResponse {
    string email = 1;
}