syntax = "proto3";

import "common/common.proto";

package dcmgr;

// DC is the communication definition of daemon and dc-facade
service DC {
    rpc CreateApp (common.proto.AppDeployment) returns (common.proto.AppResponce) {}
    rpc UpdateApp (common.proto.AppDeployment) returns (common.proto.AppResponce) {}
    rpc DeleteApp (common.proto.AppDeployment) returns (common.proto.AppResponce) {}
    rpc CreateNamespace (common.proto.Namespace) returns (common.proto.AppResponce) {}
    rpc UpdateNamespace (common.proto.Namespace) returns (common.proto.AppResponce) {}
    rpc DeleteNamespace (common.proto.Namespace) returns (common.proto.AppResponce) {}
    rpc Status (common.proto.AppID) returns (common.proto.AppRunStatus) {}
    rpc Overview (DCOverviewRequest) returns (DCOverviewResponse) {}
}

//
// The dclist service definition.
service DCAPI {
      rpc DataCenterList (common.proto.Empty) returns (DataCenterListResponse) {}
      rpc NetworkInfo(common.proto.Empty) returns (NetworkInfoResponse){}
      rpc RegisterDataCenter(RegisterDataCenterRequest) returns (RegisterDataCenterResponse){}
      rpc ResetDataCenter(RegisterDataCenterRequest) returns (RegisterDataCenterResponse){}
      rpc MyDataCenter(MyDataCenterRequest) returns (common.proto.DataCenterStatus){}
}



message MyDataCenterRequest {
  string user_id = 1;
}

message RegisterDataCenterRequest {
  string user_id = 1;
  string cluster_name = 2;
}


message RegisterDataCenterResponse {
  string client_key = 1;
  string client_csr_cert = 2;
  string ca_cert = 3;
}

message DataCenterListResponse {
  repeated common.proto.DataCenterStatus dcList= 1; // repeated groups of DataCenterInfo list
}

message NetworkInfoResponse {
  int32 user_count = 1;
  int32 host_count = 2;
  int32 ns_count = 3; // namespace
  int32 container_count = 4;
  int32 traffic = 5;   //0 unavailable 1 light 2 median 3. heavy
}


message DCOverviewRequest {
  string timestamp = 1;   // just make easy for deamon sign
}


message DCOverviewResponse {
  string cluster_id = 1;
  common.proto.DataCenterStatus status = 2;
  string timestamp = 3;
  string signature = 4; // this is signature of timestamp with private key
}
