syntax = "proto3";

import "common/code.proto";
import "common/error.proto";

package taskmgr;

service TaskMgr {
    // Sends request to start a task and list task
    rpc AddTask (AddTaskRequest) returns (AddTaskResponse) {}
    rpc TaskList (ID) returns (TaskListResponse) {}
    rpc CancelTask (Request) returns (common.proto.Error) {}
    rpc PurgeTask (Request) returns (common.proto.Error) {}
    rpc TaskDetail (Request) returns (TaskDetailResponse) {}
    rpc UpdateTask (UpdateTaskRequest) returns (common.proto.Error) {}
}

// The dccn client request message containing the user's token
message AddTaskRequest {
    int64 user_id = 1;
    Task task = 2;
  }

message AddTaskResponse {
    string task_id = 1;
    common.proto.Error error = 2;
}

message ID {
    int64 user_id = 1;
}

message Request {
    int64 user_id = 1;
    string task_id = 2;
}

message TaskListResponse {
    repeated Task tasks = 1;
    common.proto.Error error = 3;
}

message UpdateTaskRequest{
    int64 user_id = 1;
    Task task = 2;
}

message TaskDetailResponse{
    Task task = 1;
    common.proto.Error error = 2;
}

message Task  {
    string id = 1;
    int64 user_id = 2;
    string name = 3;// name of the task/image to run
    string type = 4; // default or "web" as website
    string image = 5; // template
    int32 replica = 6; // how many replica of docker instance
    string data_center = 7;
    int64 data_center_id = 8;// data center id if value = 0 or default hub will pickup by random
    common.proto.TaskStatus status = 9;
    string unique_name = 10;
    string url = 11;
    bool hidden = 12;
    uint32 uptime = 13; // uptime of the task
    uint64 creation_date = 14; //task creation date
    bytes extra = 15;
}
