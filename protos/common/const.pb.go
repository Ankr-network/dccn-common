// Code generated by protoc-gen-go. DO NOT EDIT.
// source: const.proto

package common_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Hub application status
type AppStatus int32

const (
	AppStatus_APP_NOT_EXIST   AppStatus = 0
	AppStatus_APP_DISPATCHING AppStatus = 1
	AppStatus_APP_LAUNCHING   AppStatus = 2
	AppStatus_APP_RUNNING     AppStatus = 3
	AppStatus_APP_UPDATING    AppStatus = 4
	AppStatus_APP_CANCELLING  AppStatus = 5
)

var AppStatus_name = map[int32]string{
	0: "APP_NOT_EXIST",
	1: "APP_DISPATCHING",
	2: "APP_LAUNCHING",
	3: "APP_RUNNING",
	4: "APP_UPDATING",
	5: "APP_CANCELLING",
}

var AppStatus_value = map[string]int32{
	"APP_NOT_EXIST":   0,
	"APP_DISPATCHING": 1,
	"APP_LAUNCHING":   2,
	"APP_RUNNING":     3,
	"APP_UPDATING":    4,
	"APP_CANCELLING":  5,
}

func (x AppStatus) String() string {
	return proto.EnumName(AppStatus_name, int32(x))
}

func (AppStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5adb9555099c2688, []int{0}
}

// Hub application event
type AppEvent int32

const (
	AppEvent_DISPATCH_APP       AppEvent = 0
	AppEvent_LAUNCH_APP         AppEvent = 1
	AppEvent_LAUNCH_APP_FAILED  AppEvent = 2
	AppEvent_LAUNCH_APP_SUCCEED AppEvent = 3
	AppEvent_UPDATE_APP         AppEvent = 4
	AppEvent_UPDATE_APP_FAILED  AppEvent = 5
	AppEvent_UPDATE_APP_SUCCEED AppEvent = 6
	AppEvent_CANCEL_APP         AppEvent = 7
	AppEvent_CANCEL_APP_FAILED  AppEvent = 8
	AppEvent_CANCEL_APP_SUCCEED AppEvent = 9
)

var AppEvent_name = map[int32]string{
	0: "DISPATCH_APP",
	1: "LAUNCH_APP",
	2: "LAUNCH_APP_FAILED",
	3: "LAUNCH_APP_SUCCEED",
	4: "UPDATE_APP",
	5: "UPDATE_APP_FAILED",
	6: "UPDATE_APP_SUCCEED",
	7: "CANCEL_APP",
	8: "CANCEL_APP_FAILED",
	9: "CANCEL_APP_SUCCEED",
}

var AppEvent_value = map[string]int32{
	"DISPATCH_APP":       0,
	"LAUNCH_APP":         1,
	"LAUNCH_APP_FAILED":  2,
	"LAUNCH_APP_SUCCEED": 3,
	"UPDATE_APP":         4,
	"UPDATE_APP_FAILED":  5,
	"UPDATE_APP_SUCCEED": 6,
	"CANCEL_APP":         7,
	"CANCEL_APP_FAILED":  8,
	"CANCEL_APP_SUCCEED": 9,
}

func (x AppEvent) String() string {
	return proto.EnumName(AppEvent_name, int32(x))
}

func (AppEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5adb9555099c2688, []int{1}
}

// Hub namespace status
type NamespaceStatus int32

const (
	NamespaceStatus_NS_NOT_EXIST   NamespaceStatus = 0
	NamespaceStatus_NS_DISPATCHING NamespaceStatus = 1
	NamespaceStatus_NS_LAUNCHING   NamespaceStatus = 2
	NamespaceStatus_NS_RUNNING     NamespaceStatus = 3
	NamespaceStatus_NS_UPDATING    NamespaceStatus = 4
	NamespaceStatus_NS_CANCELLING  NamespaceStatus = 5
)

var NamespaceStatus_name = map[int32]string{
	0: "NS_NOT_EXIST",
	1: "NS_DISPATCHING",
	2: "NS_LAUNCHING",
	3: "NS_RUNNING",
	4: "NS_UPDATING",
	5: "NS_CANCELLING",
}

var NamespaceStatus_value = map[string]int32{
	"NS_NOT_EXIST":   0,
	"NS_DISPATCHING": 1,
	"NS_LAUNCHING":   2,
	"NS_RUNNING":     3,
	"NS_UPDATING":    4,
	"NS_CANCELLING":  5,
}

func (x NamespaceStatus) String() string {
	return proto.EnumName(NamespaceStatus_name, int32(x))
}

func (NamespaceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5adb9555099c2688, []int{2}
}

// Hub namespace event
type NamespaceEvent int32

const (
	NamespaceEvent_DISPATCH_NS       NamespaceEvent = 0
	NamespaceEvent_LAUNCH_NS         NamespaceEvent = 1
	NamespaceEvent_LAUNCH_NS_FAILED  NamespaceEvent = 2
	NamespaceEvent_LAUNCH_NS_SUCCEED NamespaceEvent = 3
	NamespaceEvent_UPDATE_NS         NamespaceEvent = 4
	NamespaceEvent_UPDATE_NS_FAILED  NamespaceEvent = 5
	NamespaceEvent_UPDATE_NS_SUCCEED NamespaceEvent = 6
	NamespaceEvent_CANCEL_NS         NamespaceEvent = 7
	NamespaceEvent_CANCEL_NS_FAILED  NamespaceEvent = 8
	NamespaceEvent_CANCEL_NS_SUCCEED NamespaceEvent = 9
)

var NamespaceEvent_name = map[int32]string{
	0: "DISPATCH_NS",
	1: "LAUNCH_NS",
	2: "LAUNCH_NS_FAILED",
	3: "LAUNCH_NS_SUCCEED",
	4: "UPDATE_NS",
	5: "UPDATE_NS_FAILED",
	6: "UPDATE_NS_SUCCEED",
	7: "CANCEL_NS",
	8: "CANCEL_NS_FAILED",
	9: "CANCEL_NS_SUCCEED",
}

var NamespaceEvent_value = map[string]int32{
	"DISPATCH_NS":       0,
	"LAUNCH_NS":         1,
	"LAUNCH_NS_FAILED":  2,
	"LAUNCH_NS_SUCCEED": 3,
	"UPDATE_NS":         4,
	"UPDATE_NS_FAILED":  5,
	"UPDATE_NS_SUCCEED": 6,
	"CANCEL_NS":         7,
	"CANCEL_NS_FAILED":  8,
	"CANCEL_NS_SUCCEED": 9,
}

func (x NamespaceEvent) String() string {
	return proto.EnumName(NamespaceEvent_name, int32(x))
}

func (NamespaceEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5adb9555099c2688, []int{3}
}

func init() {
	proto.RegisterEnum("common.proto.AppStatus", AppStatus_name, AppStatus_value)
	proto.RegisterEnum("common.proto.AppEvent", AppEvent_name, AppEvent_value)
	proto.RegisterEnum("common.proto.NamespaceStatus", NamespaceStatus_name, NamespaceStatus_value)
	proto.RegisterEnum("common.proto.NamespaceEvent", NamespaceEvent_name, NamespaceEvent_value)
}

func init() { proto.RegisterFile("const.proto", fileDescriptor_5adb9555099c2688) }

var fileDescriptor_5adb9555099c2688 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xbb, 0x6e, 0xb3, 0x40,
	0x10, 0x46, 0x8d, 0xef, 0x0c, 0x06, 0xd6, 0xfb, 0x5f, 0x1e, 0xc2, 0x45, 0x9a, 0x3c, 0xc1, 0x0a,
	0x36, 0x09, 0x12, 0x9a, 0xa0, 0x0c, 0x48, 0xe9, 0x90, 0x63, 0xb9, 0xb4, 0x41, 0x31, 0x49, 0xe7,
	0xc7, 0x4c, 0x91, 0xb7, 0x89, 0x86, 0xdb, 0xae, 0x53, 0x7e, 0x47, 0x7b, 0x34, 0xe8, 0x08, 0xf0,
	0x0e, 0xd5, 0xf9, 0xd2, 0xdc, 0xd5, 0xef, 0x55, 0x53, 0xc9, 0xcd, 0xa1, 0x3a, 0x9d, 0xaa, 0x73,
	0xb7, 0x76, 0x57, 0x70, 0x55, 0x5d, 0x53, 0xb3, 0x6f, 0x3e, 0x2e, 0x72, 0x0b, 0xbe, 0xca, 0xb2,
	0x12, 0x9f, 0xf3, 0x52, 0xbf, 0x26, 0x94, 0x8b, 0x89, 0xfc, 0x03, 0x21, 0xa3, 0x38, 0xa1, 0x4c,
	0xe5, 0xd1, 0x53, 0x82, 0x8f, 0xc2, 0x19, 0xde, 0xa5, 0xaa, 0xc0, 0x0e, 0x4d, 0x65, 0x08, 0x1e,
	0xa3, 0x97, 0x02, 0x91, 0xc1, 0x4c, 0x0a, 0xd8, 0x30, 0x28, 0xb2, 0x58, 0xe5, 0x4c, 0xe6, 0x52,
	0x42, 0xc0, 0x24, 0x52, 0x18, 0xe9, 0x34, 0x65, 0xb6, 0xd8, 0x7d, 0x3b, 0xb0, 0x56, 0x75, 0xad,
	0x3f, 0x8f, 0xe7, 0x86, 0x95, 0xe1, 0x4e, 0xa9, 0xb2, 0x4c, 0x4c, 0x64, 0x00, 0xd0, 0x1d, 0x69,
	0xb7, 0x23, 0xff, 0xc1, 0xd6, 0xec, 0xf2, 0x41, 0x25, 0xa9, 0x8e, 0xc5, 0x54, 0xfe, 0x07, 0x69,
	0x61, 0x2a, 0xa2, 0x48, 0xeb, 0x58, 0xcc, 0x58, 0x6f, 0xef, 0xeb, 0x56, 0x9f, 0xb3, 0x6e, 0xf6,
	0xa0, 0x2f, 0x58, 0xb7, 0xf0, 0xa0, 0x2f, 0x59, 0xef, 0x3e, 0xb6, 0xd5, 0x57, 0xac, 0x9b, 0x3d,
	0xe8, 0x6b, 0xd6, 0x2d, 0x3c, 0xe8, 0xee, 0xee, 0x0a, 0x21, 0xee, 0x4f, 0xc7, 0x4b, 0xbd, 0x3f,
	0x1c, 0xfb, 0xc0, 0x02, 0x36, 0x48, 0x37, 0x7d, 0x25, 0x04, 0x48, 0xbf, 0xf2, 0x76, 0xaf, 0xec,
	0xba, 0x01, 0x00, 0x92, 0x15, 0x37, 0x04, 0x0f, 0xc9, 0x6e, 0xbb, 0x05, 0x1f, 0xe9, 0x36, 0xed,
	0x97, 0x03, 0xc1, 0x78, 0xbf, 0x0b, 0x1c, 0x82, 0x37, 0x06, 0x46, 0x12, 0x13, 0xe9, 0x83, 0xdb,
	0x87, 0x43, 0x12, 0x8e, 0xfc, 0x0b, 0x62, 0x9c, 0xa6, 0xae, 0x89, 0x8e, 0x64, 0xc5, 0xf5, 0xc1,
	0xed, 0xab, 0x21, 0x89, 0x39, 0xbb, 0xe3, 0x34, 0x69, 0x4d, 0x71, 0xcb, 0x5d, 0xb2, 0xdb, 0x27,
	0x43, 0x12, 0x2b, 0x76, 0xc7, 0x69, 0xba, 0x9a, 0xdc, 0x96, 0xeb, 0xbe, 0x2d, 0xdb, 0x1f, 0xf7,
	0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xea, 0x59, 0xc0, 0xd5, 0x02, 0x00, 0x00,
}
