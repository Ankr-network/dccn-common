// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package common_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Task Events operation code
type Operation int32

const (
	Operation_TASK_CREATE Operation = 0
	Operation_TASK_CANCEL Operation = 1
	Operation_TASK_UPDATE Operation = 2
	Operation_HEARTBEAT   Operation = 3
)

var Operation_name = map[int32]string{
	0: "TASK_CREATE",
	1: "TASK_CANCEL",
	2: "TASK_UPDATE",
	3: "HEARTBEAT",
}
var Operation_value = map[string]int32{
	"TASK_CREATE": 0,
	"TASK_CANCEL": 1,
	"TASK_UPDATE": 2,
	"HEARTBEAT":   3,
}

func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}
func (Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{0}
}

// Hub task status
type TaskStatus int32

const (
	TaskStatus_STARTING       TaskStatus = 0
	TaskStatus_START_SUCCESS  TaskStatus = 1
	TaskStatus_START_FAILED   TaskStatus = 2
	TaskStatus_RUNNING        TaskStatus = 3
	TaskStatus_UPDATING       TaskStatus = 4
	TaskStatus_UPDATE_SUCCESS TaskStatus = 5
	TaskStatus_UPDATE_FAILED  TaskStatus = 6
	TaskStatus_CANCELLING     TaskStatus = 7
	TaskStatus_CANCELLED      TaskStatus = 8
	TaskStatus_CANCEL_FAILED  TaskStatus = 9
	TaskStatus_DONE           TaskStatus = 10
)

var TaskStatus_name = map[int32]string{
	0:  "STARTING",
	1:  "START_SUCCESS",
	2:  "START_FAILED",
	3:  "RUNNING",
	4:  "UPDATING",
	5:  "UPDATE_SUCCESS",
	6:  "UPDATE_FAILED",
	7:  "CANCELLING",
	8:  "CANCELLED",
	9:  "CANCEL_FAILED",
	10: "DONE",
}
var TaskStatus_value = map[string]int32{
	"STARTING":       0,
	"START_SUCCESS":  1,
	"START_FAILED":   2,
	"RUNNING":        3,
	"UPDATING":       4,
	"UPDATE_SUCCESS": 5,
	"UPDATE_FAILED":  6,
	"CANCELLING":     7,
	"CANCELLED":      8,
	"CANCEL_FAILED":  9,
	"DONE":           10,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{1}
}

type TaskType int32

const (
	TaskType_DEFAULT    TaskType = 0
	TaskType_DEPLOYMENT TaskType = 1
	TaskType_JOB        TaskType = 2
	TaskType_CRONJOB    TaskType = 3
)

var TaskType_name = map[int32]string{
	0: "DEFAULT",
	1: "DEPLOYMENT",
	2: "JOB",
	3: "CRONJOB",
}
var TaskType_value = map[string]int32{
	"DEFAULT":    0,
	"DEPLOYMENT": 1,
	"JOB":        2,
	"CRONJOB":    3,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{2}
}

// Data center status
type DCStatus int32

const (
	DCStatus_AVAILABLE   DCStatus = 0
	DCStatus_UNAVAILABLE DCStatus = 1
)

var DCStatus_name = map[int32]string{
	0: "AVAILABLE",
	1: "UNAVAILABLE",
}
var DCStatus_value = map[string]int32{
	"AVAILABLE":   0,
	"UNAVAILABLE": 1,
}

func (x DCStatus) String() string {
	return proto.EnumName(DCStatus_name, int32(x))
}
func (DCStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{3}
}

// Emtpy Message
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// Task Data structure
type Task struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string      `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                 TaskType    `protobuf:"varint,4,opt,name=type,proto3,enum=common.proto.TaskType" json:"type,omitempty"`
	Image                string      `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Replica              int32       `protobuf:"varint,6,opt,name=replica,proto3" json:"replica,omitempty"`
	DataCenter           *DataCenter `protobuf:"bytes,7,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	Status               TaskStatus  `protobuf:"varint,8,opt,name=status,proto3,enum=common.proto.TaskStatus" json:"status,omitempty"`
	Hidden               bool        `protobuf:"varint,9,opt,name=hidden,proto3" json:"hidden,omitempty"`
	CreationDate         uint64      `protobuf:"varint,10,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	LastModifiedDate     uint64      `protobuf:"varint,11,opt,name=last_modified_date,json=lastModifiedDate,proto3" json:"last_modified_date,omitempty"`
	Report               string      `protobuf:"bytes,12,opt,name=report,proto3" json:"report,omitempty"`
	Extra                []byte      `protobuf:"bytes,13,opt,name=extra,proto3" json:"extra,omitempty"`
	Schedule             string      `protobuf:"bytes,14,opt,name=schedule,proto3" json:"schedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{1}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (dst *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(dst, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetType() TaskType {
	if m != nil {
		return m.Type
	}
	return TaskType_DEFAULT
}

func (m *Task) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Task) GetReplica() int32 {
	if m != nil {
		return m.Replica
	}
	return 0
}

func (m *Task) GetDataCenter() *DataCenter {
	if m != nil {
		return m.DataCenter
	}
	return nil
}

func (m *Task) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_STARTING
}

func (m *Task) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Task) GetCreationDate() uint64 {
	if m != nil {
		return m.CreationDate
	}
	return 0
}

func (m *Task) GetLastModifiedDate() uint64 {
	if m != nil {
		return m.LastModifiedDate
	}
	return 0
}

func (m *Task) GetReport() string {
	if m != nil {
		return m.Report
	}
	return ""
}

func (m *Task) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *Task) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

type GeoLocation struct {
	Lat                  string   `protobuf:"bytes,3,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng                  string   `protobuf:"bytes,4,opt,name=lng,proto3" json:"lng,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeoLocation) Reset()         { *m = GeoLocation{} }
func (m *GeoLocation) String() string { return proto.CompactTextString(m) }
func (*GeoLocation) ProtoMessage()    {}
func (*GeoLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{2}
}
func (m *GeoLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeoLocation.Unmarshal(m, b)
}
func (m *GeoLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeoLocation.Marshal(b, m, deterministic)
}
func (dst *GeoLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeoLocation.Merge(dst, src)
}
func (m *GeoLocation) XXX_Size() int {
	return xxx_messageInfo_GeoLocation.Size(m)
}
func (m *GeoLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_GeoLocation.DiscardUnknown(m)
}

var xxx_messageInfo_GeoLocation proto.InternalMessageInfo

func (m *GeoLocation) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

func (m *GeoLocation) GetLng() string {
	if m != nil {
		return m.Lng
	}
	return ""
}

// Data Center structure
type DataCenter struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GeoLocation          *GeoLocation `protobuf:"bytes,3,opt,name=geo_location,json=geoLocation,proto3" json:"geo_location,omitempty"`
	Status               DCStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=common.proto.DCStatus" json:"status,omitempty"`
	Metrics              string       `protobuf:"bytes,5,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Extra                string       `protobuf:"bytes,6,opt,name=extra,proto3" json:"extra,omitempty"`
	Report               string       `protobuf:"bytes,7,opt,name=report,proto3" json:"report,omitempty"`
	LastReportTime       string       `protobuf:"bytes,8,opt,name=last_report_time,json=lastReportTime,proto3" json:"last_report_time,omitempty"`
	WalletAddress        string       `protobuf:"bytes,9,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DataCenter) Reset()         { *m = DataCenter{} }
func (m *DataCenter) String() string { return proto.CompactTextString(m) }
func (*DataCenter) ProtoMessage()    {}
func (*DataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{3}
}
func (m *DataCenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataCenter.Unmarshal(m, b)
}
func (m *DataCenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataCenter.Marshal(b, m, deterministic)
}
func (dst *DataCenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataCenter.Merge(dst, src)
}
func (m *DataCenter) XXX_Size() int {
	return xxx_messageInfo_DataCenter.Size(m)
}
func (m *DataCenter) XXX_DiscardUnknown() {
	xxx_messageInfo_DataCenter.DiscardUnknown(m)
}

var xxx_messageInfo_DataCenter proto.InternalMessageInfo

func (m *DataCenter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DataCenter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataCenter) GetGeoLocation() *GeoLocation {
	if m != nil {
		return m.GeoLocation
	}
	return nil
}

func (m *DataCenter) GetStatus() DCStatus {
	if m != nil {
		return m.Status
	}
	return DCStatus_AVAILABLE
}

func (m *DataCenter) GetMetrics() string {
	if m != nil {
		return m.Metrics
	}
	return ""
}

func (m *DataCenter) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *DataCenter) GetReport() string {
	if m != nil {
		return m.Report
	}
	return ""
}

func (m *DataCenter) GetLastReportTime() string {
	if m != nil {
		return m.LastReportTime
	}
	return ""
}

func (m *DataCenter) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

// data center returns msg with task status
type TaskFeedback struct {
	TaskId               string     `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Url                  string     `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	DataCenter           string     `protobuf:"bytes,3,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	Report               string     `protobuf:"bytes,4,opt,name=report,proto3" json:"report,omitempty"`
	Status               TaskStatus `protobuf:"varint,5,opt,name=status,proto3,enum=common.proto.TaskStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TaskFeedback) Reset()         { *m = TaskFeedback{} }
func (m *TaskFeedback) String() string { return proto.CompactTextString(m) }
func (*TaskFeedback) ProtoMessage()    {}
func (*TaskFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{4}
}
func (m *TaskFeedback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskFeedback.Unmarshal(m, b)
}
func (m *TaskFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskFeedback.Marshal(b, m, deterministic)
}
func (dst *TaskFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskFeedback.Merge(dst, src)
}
func (m *TaskFeedback) XXX_Size() int {
	return xxx_messageInfo_TaskFeedback.Size(m)
}
func (m *TaskFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_TaskFeedback proto.InternalMessageInfo

func (m *TaskFeedback) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TaskFeedback) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TaskFeedback) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *TaskFeedback) GetReport() string {
	if m != nil {
		return m.Report
	}
	return ""
}

func (m *TaskFeedback) GetStatus() TaskStatus {
	if m != nil {
		return m.Status
	}
	return TaskStatus_STARTING
}

// data center communicate with dc manager
type Event struct {
	EventType Operation `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=common.proto.Operation" json:"event_type,omitempty"`
	// Types that are valid to be assigned to OpMessage:
	//	*Event_Task
	//	*Event_TaskFeedback
	//	*Event_DataCenter
	OpMessage            isEvent_OpMessage `protobuf_oneof:"op_message"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{5}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventType() Operation {
	if m != nil {
		return m.EventType
	}
	return Operation_TASK_CREATE
}

type isEvent_OpMessage interface {
	isEvent_OpMessage()
}

type Event_Task struct {
	Task *Task `protobuf:"bytes,2,opt,name=task,proto3,oneof"`
}

type Event_TaskFeedback struct {
	TaskFeedback *TaskFeedback `protobuf:"bytes,3,opt,name=task_feedback,json=taskFeedback,proto3,oneof"`
}

type Event_DataCenter struct {
	DataCenter *DataCenter `protobuf:"bytes,4,opt,name=data_center,json=dataCenter,proto3,oneof"`
}

func (*Event_Task) isEvent_OpMessage() {}

func (*Event_TaskFeedback) isEvent_OpMessage() {}

func (*Event_DataCenter) isEvent_OpMessage() {}

func (m *Event) GetOpMessage() isEvent_OpMessage {
	if m != nil {
		return m.OpMessage
	}
	return nil
}

func (m *Event) GetTask() *Task {
	if x, ok := m.GetOpMessage().(*Event_Task); ok {
		return x.Task
	}
	return nil
}

func (m *Event) GetTaskFeedback() *TaskFeedback {
	if x, ok := m.GetOpMessage().(*Event_TaskFeedback); ok {
		return x.TaskFeedback
	}
	return nil
}

func (m *Event) GetDataCenter() *DataCenter {
	if x, ok := m.GetOpMessage().(*Event_DataCenter); ok {
		return x.DataCenter
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_Task)(nil),
		(*Event_TaskFeedback)(nil),
		(*Event_DataCenter)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// op_message
	switch x := m.OpMessage.(type) {
	case *Event_Task:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Task); err != nil {
			return err
		}
	case *Event_TaskFeedback:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TaskFeedback); err != nil {
			return err
		}
	case *Event_DataCenter:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DataCenter); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.OpMessage has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 2: // op_message.task
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Task)
		err := b.DecodeMessage(msg)
		m.OpMessage = &Event_Task{msg}
		return true, err
	case 3: // op_message.task_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TaskFeedback)
		err := b.DecodeMessage(msg)
		m.OpMessage = &Event_TaskFeedback{msg}
		return true, err
	case 4: // op_message.data_center
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DataCenter)
		err := b.DecodeMessage(msg)
		m.OpMessage = &Event_DataCenter{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// op_message
	switch x := m.OpMessage.(type) {
	case *Event_Task:
		s := proto.Size(x.Task)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_TaskFeedback:
		s := proto.Size(x.TaskFeedback)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_DataCenter:
		s := proto.Size(x.DataCenter)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Mail For the future
type Mail struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Body                 string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mail) Reset()         { *m = Mail{} }
func (m *Mail) String() string { return proto.CompactTextString(m) }
func (*Mail) ProtoMessage()    {}
func (*Mail) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_e8037ac1c67224b3, []int{6}
}
func (m *Mail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mail.Unmarshal(m, b)
}
func (m *Mail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mail.Marshal(b, m, deterministic)
}
func (dst *Mail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mail.Merge(dst, src)
}
func (m *Mail) XXX_Size() int {
	return xxx_messageInfo_Mail.Size(m)
}
func (m *Mail) XXX_DiscardUnknown() {
	xxx_messageInfo_Mail.DiscardUnknown(m)
}

var xxx_messageInfo_Mail proto.InternalMessageInfo

func (m *Mail) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Mail) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Mail) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Mail) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "common.proto.Empty")
	proto.RegisterType((*Task)(nil), "common.proto.Task")
	proto.RegisterType((*GeoLocation)(nil), "common.proto.GeoLocation")
	proto.RegisterType((*DataCenter)(nil), "common.proto.DataCenter")
	proto.RegisterType((*TaskFeedback)(nil), "common.proto.TaskFeedback")
	proto.RegisterType((*Event)(nil), "common.proto.Event")
	proto.RegisterType((*Mail)(nil), "common.proto.Mail")
	proto.RegisterEnum("common.proto.Operation", Operation_name, Operation_value)
	proto.RegisterEnum("common.proto.TaskStatus", TaskStatus_name, TaskStatus_value)
	proto.RegisterEnum("common.proto.TaskType", TaskType_name, TaskType_value)
	proto.RegisterEnum("common.proto.DCStatus", DCStatus_name, DCStatus_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_e8037ac1c67224b3) }

var fileDescriptor_common_e8037ac1c67224b3 = []byte{
	// 879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x8f, 0xeb, 0x34,
	0x14, 0x6d, 0xda, 0x34, 0x69, 0x6f, 0xd2, 0x12, 0x2c, 0x34, 0xcf, 0xbc, 0x0d, 0x55, 0x11, 0x52,
	0x54, 0xa1, 0x11, 0x0c, 0x12, 0x12, 0x02, 0x16, 0x99, 0x26, 0xf3, 0xa6, 0xd0, 0x69, 0x9f, 0xdc,
	0x14, 0x89, 0x55, 0xe4, 0xa9, 0x3d, 0x7d, 0xd1, 0x24, 0x4d, 0x95, 0x78, 0x80, 0xf9, 0x3f, 0xfc,
	0x07, 0x56, 0x2c, 0xf8, 0x55, 0x6c, 0x91, 0xed, 0xa4, 0x1f, 0x0c, 0x42, 0x6f, 0xe7, 0x73, 0x7c,
	0xaf, 0x7d, 0x73, 0xce, 0x71, 0xc0, 0xdd, 0x14, 0x79, 0x5e, 0xec, 0x2e, 0xf7, 0x65, 0x21, 0x0a,
	0x74, 0x86, 0xc6, 0x36, 0x74, 0xa3, 0x7c, 0x2f, 0x9e, 0xc7, 0x7f, 0x75, 0xc0, 0x8c, 0x69, 0xf5,
	0x88, 0x86, 0xd0, 0x4e, 0x19, 0x36, 0x46, 0x86, 0xdf, 0x27, 0xed, 0x94, 0xa1, 0x57, 0x60, 0x3f,
	0x55, 0xbc, 0x4c, 0x52, 0x86, 0xdb, 0x8a, 0xb4, 0x24, 0x9c, 0x31, 0x84, 0xc0, 0xdc, 0xd1, 0x9c,
	0xe3, 0x8e, 0x62, 0xd5, 0x1a, 0x4d, 0xc0, 0x14, 0xcf, 0x7b, 0x8e, 0xcd, 0x91, 0xe1, 0x0f, 0xaf,
	0x2e, 0x2e, 0x4f, 0xef, 0xba, 0x94, 0xc7, 0xc7, 0xcf, 0x7b, 0x4e, 0x54, 0x0d, 0xfa, 0x08, 0xba,
	0x69, 0x4e, 0xb7, 0x1c, 0x77, 0xd5, 0x01, 0x1a, 0x20, 0x0c, 0x76, 0xc9, 0xf7, 0x59, 0xba, 0xa1,
	0xd8, 0x1a, 0x19, 0x7e, 0x97, 0x34, 0x10, 0x7d, 0x03, 0x0e, 0xa3, 0x82, 0x26, 0x1b, 0xbe, 0x13,
	0xbc, 0xc4, 0xf6, 0xc8, 0xf0, 0x9d, 0x2b, 0x7c, 0x7e, 0x45, 0x48, 0x05, 0x9d, 0xaa, 0x7d, 0x02,
	0xec, 0xb0, 0x46, 0x5f, 0x80, 0x55, 0x09, 0x2a, 0x9e, 0x2a, 0xdc, 0x53, 0x83, 0xe1, 0x97, 0x83,
	0xad, 0xd4, 0x3e, 0xa9, 0xeb, 0xd0, 0x05, 0x58, 0xef, 0x52, 0xc6, 0xf8, 0x0e, 0xf7, 0x47, 0x86,
	0xdf, 0x23, 0x35, 0x42, 0x9f, 0xc2, 0x60, 0x53, 0x72, 0x2a, 0xd2, 0x62, 0x97, 0x30, 0x2a, 0x38,
	0x86, 0x91, 0xe1, 0x9b, 0xc4, 0x6d, 0xc8, 0x90, 0x0a, 0x8e, 0x3e, 0x07, 0x94, 0xd1, 0x4a, 0x24,
	0x79, 0xc1, 0xd2, 0x87, 0x94, 0x33, 0x5d, 0xe9, 0xa8, 0x4a, 0x4f, 0xee, 0xdc, 0xd5, 0x1b, 0xaa,
	0xfa, 0x02, 0xac, 0x92, 0xef, 0x8b, 0x52, 0x60, 0x57, 0xeb, 0xab, 0x91, 0xd4, 0x87, 0xff, 0x26,
	0x4a, 0x8a, 0x07, 0x23, 0xc3, 0x77, 0x89, 0x06, 0xe8, 0x35, 0xf4, 0xaa, 0xcd, 0x3b, 0xce, 0x9e,
	0x32, 0x8e, 0x87, 0xaa, 0xfe, 0x80, 0xc7, 0x5f, 0x82, 0xf3, 0x86, 0x17, 0xf3, 0x62, 0xa3, 0x46,
	0x41, 0x1e, 0x74, 0x32, 0x2a, 0x6a, 0x7f, 0xe4, 0x52, 0x31, 0xbb, 0xad, 0x72, 0x47, 0x32, 0xbb,
	0xed, 0xf8, 0x8f, 0x36, 0xc0, 0x51, 0xb4, 0x17, 0xe6, 0x37, 0x1e, 0xb7, 0x4f, 0x3c, 0xfe, 0x0e,
	0xdc, 0x2d, 0x2f, 0x92, 0xac, 0xbe, 0x46, 0x9d, 0xef, 0x5c, 0x7d, 0x7c, 0x2e, 0xe9, 0xc9, 0x1c,
	0xc4, 0xd9, 0x9e, 0x0c, 0x75, 0x79, 0xb0, 0xe2, 0x3f, 0x33, 0x12, 0x4e, 0xff, 0x65, 0x04, 0x06,
	0x3b, 0xe7, 0xa2, 0x4c, 0x37, 0x55, 0x9d, 0x93, 0x06, 0x1e, 0xf5, 0xb1, 0x74, 0x7e, 0xb4, 0x3e,
	0x47, 0x35, 0xed, 0x33, 0x35, 0x7d, 0x50, 0xca, 0x27, 0x1a, 0x26, 0x22, 0xcd, 0xb9, 0x0a, 0x43,
	0x9f, 0x0c, 0x25, 0x4f, 0x14, 0x1d, 0xa7, 0x39, 0x47, 0x9f, 0xc1, 0xf0, 0x57, 0x9a, 0x65, 0x5c,
	0x24, 0x94, 0xb1, 0x92, 0x57, 0x95, 0x8a, 0x40, 0x9f, 0x0c, 0x34, 0x1b, 0x68, 0x72, 0xfc, 0xbb,
	0x01, 0xae, 0x0c, 0xce, 0x0d, 0xe7, 0xec, 0x9e, 0x6e, 0x1e, 0xe5, 0x43, 0x11, 0xb4, 0x7a, 0x4c,
	0x0e, 0x02, 0x5a, 0x12, 0xce, 0x98, 0x54, 0xfd, 0xa9, 0xcc, 0x6a, 0x0d, 0xe5, 0x12, 0x7d, 0x72,
	0x1e, 0x65, 0xed, 0xd0, 0x69, 0x60, 0x8f, 0x5f, 0x61, 0x9e, 0x7d, 0xc5, 0x31, 0xc8, 0xdd, 0xf7,
	0x0b, 0xf2, 0xf8, 0x6f, 0x03, 0xba, 0xd1, 0x2f, 0x7c, 0x27, 0xd0, 0xd7, 0x00, 0x5c, 0x2e, 0x12,
	0xf5, 0x42, 0x0d, 0xd5, 0xff, 0xea, 0xbc, 0x7f, 0xb9, 0xe7, 0xa5, 0xf6, 0xac, 0xaf, 0x4a, 0xe5,
	0x6b, 0x45, 0x3e, 0x98, 0xf2, 0x43, 0xd4, 0xfc, 0xce, 0x15, 0x7a, 0x79, 0xe3, 0x6d, 0x8b, 0xa8,
	0x0a, 0x14, 0xc0, 0x40, 0x29, 0xf0, 0x50, 0x4b, 0x52, 0x47, 0xe3, 0xf5, 0xcb, 0x96, 0x46, 0xb4,
	0xdb, 0x16, 0x71, 0xc5, 0xa9, 0x88, 0xdf, 0x9e, 0x2b, 0x63, 0xfe, 0xff, 0x23, 0xbf, 0x6d, 0x9d,
	0xaa, 0x76, 0xed, 0x02, 0x14, 0xfb, 0x24, 0xe7, 0x55, 0x45, 0xb7, 0x7c, 0x1c, 0x83, 0x79, 0x47,
	0xd3, 0x4c, 0x66, 0xf8, 0xa1, 0x2c, 0xf2, 0xda, 0x14, 0xb5, 0x96, 0x39, 0x17, 0x45, 0xed, 0x48,
	0x5b, 0x14, 0x32, 0x4b, 0x22, 0x15, 0x59, 0xf3, 0x33, 0xd3, 0x40, 0x76, 0xde, 0x17, 0xec, 0xb9,
	0xf6, 0x40, 0xad, 0x27, 0x77, 0xd0, 0x3f, 0xa8, 0x84, 0x3e, 0x00, 0x27, 0x0e, 0x56, 0x3f, 0x26,
	0x53, 0x12, 0x05, 0x71, 0xe4, 0xb5, 0x8e, 0x44, 0xb0, 0x98, 0x46, 0x73, 0xcf, 0x38, 0x10, 0xeb,
	0xb7, 0xa1, 0xac, 0x68, 0xa3, 0x01, 0xf4, 0x6f, 0xa3, 0x80, 0xc4, 0xd7, 0x51, 0x10, 0x7b, 0x9d,
	0xc9, 0x9f, 0x06, 0xc0, 0xd1, 0x35, 0xe4, 0x42, 0x6f, 0x15, 0x07, 0x24, 0x9e, 0x2d, 0xde, 0x78,
	0x2d, 0xf4, 0x21, 0x0c, 0x14, 0x4a, 0x56, 0xeb, 0xe9, 0x34, 0x5a, 0xad, 0x3c, 0x03, 0x79, 0xe0,
	0x6a, 0xea, 0x26, 0x98, 0xcd, 0xa3, 0xd0, 0x6b, 0x23, 0x07, 0x6c, 0xb2, 0x5e, 0x2c, 0x64, 0x47,
	0x47, 0xf6, 0xab, 0x9b, 0x24, 0x32, 0x11, 0x82, 0xa1, 0xbe, 0xf7, 0x70, 0x40, 0x57, 0x9e, 0x59,
	0x73, 0xf5, 0x09, 0x16, 0x1a, 0x02, 0xe8, 0x79, 0xe7, 0xb2, 0xcd, 0x96, 0x23, 0xd6, 0x38, 0x0a,
	0xbd, 0x9e, 0xec, 0xd0, 0xb0, 0xe9, 0xe8, 0xa3, 0x1e, 0x98, 0xe1, 0x72, 0x11, 0x79, 0x30, 0xf9,
	0x1e, 0x7a, 0xcd, 0x6f, 0x5d, 0x4e, 0x12, 0x46, 0x37, 0xc1, 0x7a, 0x1e, 0x7b, 0x2d, 0x79, 0x68,
	0x18, 0xbd, 0x9d, 0x2f, 0x7f, 0xbe, 0x8b, 0x16, 0xb1, 0x67, 0x20, 0x1b, 0x3a, 0x3f, 0x2c, 0xaf,
	0xf5, 0xbc, 0x53, 0xb2, 0x5c, 0x48, 0xd0, 0x99, 0x4c, 0xa0, 0xd7, 0xbc, 0x78, 0x79, 0x6d, 0xf0,
	0x53, 0x30, 0x9b, 0x07, 0xd7, 0xf3, 0x5a, 0xca, 0xf5, 0xe2, 0x48, 0x18, 0xf7, 0x96, 0x72, 0xff,
	0xab, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xe7, 0x11, 0x20, 0xcf, 0x06, 0x00, 0x00,
}
