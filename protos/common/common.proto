syntax = "proto3";

package common.proto;

// Task Events operation code
enum Operation {
    TASK_CREATE = 0;
    TASK_CANCEL = 1;
    TASK_UPDATE = 2;
    HEARTBEAT = 3;
}

// Hub task status
enum TaskStatus {
    STARTING = 0;
    START_SUCCESS = 1;
    START_FAILED = 2;
    RUNNING = 3;
    UPDATING = 4;
    UPDATE_SUCCESS = 5;
    UPDATE_FAILED = 6;
    CANCELLING = 7;
    CANCELLED = 8;
    CANCEL_FAILED = 9;
    DONE = 10;
}

enum TaskType {
    DEFAULT = 0;
    DEPLOYMENT = 1;
    JOB = 2;
    CRONJOB = 3;
}

// Data center status
enum DCStatus {
    AVAILABLE = 0;
    UNAVAILABLE = 1;
}

// Emtpy Message
message Empty {}

// Task Data structure
message Task  {
    string id = 1;
    string user_id = 2;
    string name = 3;// name of the task/image to run
    TaskType type = 4; // 0  default 1 deployment 2 job 3 cronjob
    string image = 5; // template
    int32 replica = 6; // how many replica of docker instance
    DataCenter data_center = 7;
    TaskStatus status = 8;  // int type
    bool hidden = 9;
    uint64 creation_date = 10; //task creation date
    uint64 last_modified_date = 11; //task creation date
    string report = 12; // detail for status
    bytes extra = 13;
    string schedule = 14;
}

message GeoLocation {
    string lat = 3; // latitude 
    string lng = 4; // longitude 
}

// Data Center structure
message DataCenter {
    string id = 1;  //data center id
    string name = 2; // data center name
    GeoLocation geo_location = 3;
    DCStatus status = 4; // data center status // 1. online 2. offline
    string metrics = 5; //json string for Metrics structure which defined in constants
    string extra = 6;
    string report = 7;
    string last_report_time = 8;
    string wallet_address = 9;  //datacenter wallet address
}

// data center returns msg with task status
message TaskFeedback {
    string task_id = 1;
    string url = 2;  // url of web application
    string data_center = 3; // name of data center
    string report = 4; // detail message
    common.proto.TaskStatus status = 5; // StartSuccess or StartFailure JobDone Cancelled  Running  Other
}

// data center communicate with dc manager
message Event {
    Operation event_type = 1; // HeartBeat or task operation

    oneof op_message {
        Task task = 2; // Deploy task action
        TaskFeedback task_feedback = 3; // Return task status
        DataCenter data_center = 4; // HearBeat Info with DataCenter message
    }
}

// Mail For the future
message Mail {
    string from = 1;
    string to = 2;
    string title = 3;
    string body = 4;
}
