syntax = "proto3";
package common.proto;

// FIXME: delete useless definitions
// FIXME: ensure id and name use case, delete one if not necessary
import "const.proto";


// Data center status
enum DCStatus {
    AVAILABLE = 0;
    UNAVAILABLE = 1;
}


// Emtpy Message
message Empty {}


// App Deployment structure
message AppDeployment {
    string id = 1;
    string name = 2; // name of the app
    Namespace namespace = 3; // request for create new namespace
    AppAttributes attributes = 4;
    string uid = 5;
    ChartDetail chart_detail = 6;
}
message AppAttributes {
    bool hidden = 1;
    uint64 creation_date = 2; //app creation date
    uint64 last_modified_date = 3; //app creation date
}
message AppID {
    string id = 1;
}


// Data Center structure
message DataCenterStatus {
    string id = 1;  //data center id
    string name = 2; // data center name
    GeoLocation geo_location = 3;
    DCStatus status = 4; // data center status // 1. online 2. offline
    DataCenterAttributes dc_attributes = 5;
    DCHeartbeatReport dc_heartbeat_report = 6;
}
message GeoLocation {
    string lat = 1; // latitude
    string lng = 2; // longitude
    string country = 3; // US
}
message DataCenterAttributes {
    string wallet_address = 1;  //datacenter wallet address
    uint64 creation_date = 2; //app creation date
    uint64 last_modified_date = 3; //app creation date
}
message DCHeartbeatReport {
    string metrics = 1; //json string for Metrics structure which defined in constants
    string report = 2;
    uint64 report_time = 3;
}


message Chart {
	string name = 1; //chart name
	string repo = 2; //chart repo, e.g. app_store or user_catalog
	string description = 3;
	string icon_url = 4; // Chart icon image url
    string latest_version = 5;
    string latest_app_version = 6;
}
message ChartDetail {
    string name = 1;
    string repo = 2;
    string version = 3; //chart version 
	string app_version = 4; //application version 
}


message Namespace {
    string id = 1; //short hash of uid+name+cluster_id
	string name = 2;
	string cluster_id = 3; //id of cluster
    string cluster_name = 4; //name of cluster
	uint64 creation_date = 5;
    float cpu_limit = 6;
    string mem_limit = 7;
    string storage_limit = 8;
}


// Used by appmgr
message App {
    string id = 1;
    string name = 2; // name of the app
    oneof namespace_data {
        string namespace_id = 3; // namespace id
        Namespace namespace = 4; // request for create new namespace
    }
    AppStatus status = 5;
    AppAttributes attributes = 6;
    string uid = 7;
    ChartDetail chart_detail = 8;
}


// Used by dc-mgr to dc-facade rabbitmq
message DCStream {
    DCOperation op_type = 1; // HeartBeat or app operation

    oneof op_payload {
        AppDeployment app_deployment = 2; // Deploy app action
        AppReport app_report = 3;
        DataCenterStatus data_center = 4; // HearBeat Info with DataCenter message
        Namespace namespace = 5;
    }
}
// Task Events operation code
enum DCOperation {
    TASK_CREATE = 0;
    TASK_CANCEL = 1;
    TASK_UPDATE = 2;
    HEARTBEAT = 3;
}
message AppReport {
    AppDeployment app_deployment = 1; //json string for Metrics structure which defined in constants
    string report = 2;
}